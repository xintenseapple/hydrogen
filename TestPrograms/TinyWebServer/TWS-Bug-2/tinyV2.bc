; ModuleID = 'tiny.c'
source_filename = "tiny.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.mime_map = type { i8*, i8* }
%struct.rio_t = type { i32, i32, i8*, [1024 x i8] }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.__dirstream = type opaque
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
%struct.in_addr = type { i32 }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.http_request = type { [512 x i8], i64, i64 }

@.str = private unnamed_addr constant [5 x i8] c".css\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"text/css\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c".gif\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"image/gif\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c".htm\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"text/html\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c".html\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c".jpeg\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"image/jpeg\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c".jpg\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c".js\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"application/javascript\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c".pdf\00", align 1
@.str.13 = private unnamed_addr constant [16 x i8] c"application/pdf\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c".mp4\00", align 1
@.str.15 = private unnamed_addr constant [10 x i8] c"video/mp4\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c".png\00", align 1
@.str.17 = private unnamed_addr constant [10 x i8] c"image/png\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c".svg\00", align 1
@.str.19 = private unnamed_addr constant [14 x i8] c"image/svg+xml\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c".xml\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"text/xml\00", align 1
@meme_types = dso_local global [13 x %struct.mime_map] [%struct.mime_map { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0) }, %struct.mime_map { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i32 0, i32 0) }, %struct.mime_map { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i32 0, i32 0) }, %struct.mime_map { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i32 0, i32 0) }, %struct.mime_map { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i32 0, i32 0) }, %struct.mime_map { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i32 0, i32 0) }, %struct.mime_map { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i32 0, i32 0) }, %struct.mime_map { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i32 0, i32 0) }, %struct.mime_map { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i32 0, i32 0) }, %struct.mime_map { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i32 0, i32 0) }, %struct.mime_map { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19, i32 0, i32 0) }, %struct.mime_map { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i32 0, i32 0) }, %struct.mime_map zeroinitializer], align 16, !dbg !0
@.str.22 = private unnamed_addr constant [11 x i8] c"text/plain\00", align 1
@default_mime_type = dso_local global i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i32 0, i32 0), align 8, !dbg !50
@.str.23 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"[DIR]\00", align 1
@.str.25 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@.str.26 = private unnamed_addr constant [6 x i8] c"%.1fK\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"%.1fM\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"%.1fG\00", align 1
@.str.29 = private unnamed_addr constant [28 x i8] c"HTTP/1.1 200 OK\0D\0A%s%s%s%s%s\00", align 1
@.str.30 = private unnamed_addr constant [28 x i8] c"Content-Type: text/html\0D\0A\0D\0A\00", align 1
@.str.31 = private unnamed_addr constant [20 x i8] c"<html><head><style>\00", align 1
@.str.32 = private unnamed_addr constant [47 x i8] c"body{font-family: monospace; font-size: 13px;}\00", align 1
@.str.33 = private unnamed_addr constant [25 x i8] c"td {padding: 1.5px 6px;}\00", align 1
@.str.34 = private unnamed_addr constant [30 x i8] c"</style></head><body><table>\0A\00", align 1
@.str.35 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.36 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.37 = private unnamed_addr constant [15 x i8] c"%Y-%m-%d %H:%M\00", align 1
@.str.38 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.39 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.40 = private unnamed_addr constant [65 x i8] c"<tr><td><a href=\22%s%s\22>%s%s</a></td><td>%s</td><td>%s</td></tr>\0A\00", align 1
@.str.41 = private unnamed_addr constant [23 x i8] c"</table></body></html>\00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"%s %s\00", align 1
@.str.43 = private unnamed_addr constant [21 x i8] c"Range: bytes=%lu-%lu\00", align 1
@.str.44 = private unnamed_addr constant [15 x i8] c"%s:%d %d - %s\0A\00", align 1
@.str.45 = private unnamed_addr constant [17 x i8] c"HTTP/1.1 %d %s\0D\0A\00", align 1
@.str.46 = private unnamed_addr constant [24 x i8] c"Content-length: %lu\0D\0A\0D\0A\00", align 1
@.str.47 = private unnamed_addr constant [23 x i8] c"HTTP/1.1 206 Partial\0D\0A\00", align 1
@.str.48 = private unnamed_addr constant [35 x i8] c"Content-Range: bytes %lu-%lu/%lu\0D\0A\00", align 1
@.str.49 = private unnamed_addr constant [40 x i8] c"HTTP/1.1 200 OK\0D\0AAccept-Ranges: bytes\0D\0A\00", align 1
@.str.50 = private unnamed_addr constant [22 x i8] c"Content-length: %lu\0D\0A\00", align 1
@.str.51 = private unnamed_addr constant [21 x i8] c"Content-type: %s\0D\0A\0D\0A\00", align 1
@.str.52 = private unnamed_addr constant [15 x i8] c"File not found\00", align 1
@.str.53 = private unnamed_addr constant [10 x i8] c"Not found\00", align 1
@.str.54 = private unnamed_addr constant [13 x i8] c"Unknow Error\00", align 1
@.str.55 = private unnamed_addr constant [6 x i8] c"Error\00", align 1
@.str.56 = private unnamed_addr constant [29 x i8] c"listen on port %d, fd is %d\0A\00", align 1
@.str.57 = private unnamed_addr constant [6 x i8] c"ERROR\00", align 1

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local void @rio_readinitb(%struct.rio_t*, i32) #0 !dbg !69 {
  %3 = alloca %struct.rio_t*, align 8
  %4 = alloca i32, align 4
  store %struct.rio_t* %0, %struct.rio_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.rio_t** %3, metadata !84, metadata !DIExpression()), !dbg !85
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !86, metadata !DIExpression()), !dbg !87
  %5 = load i32, i32* %4, align 4, !dbg !88
  %6 = load %struct.rio_t*, %struct.rio_t** %3, align 8, !dbg !89
  %7 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %6, i32 0, i32 0, !dbg !90
  store i32 %5, i32* %7, align 8, !dbg !91
  %8 = load %struct.rio_t*, %struct.rio_t** %3, align 8, !dbg !92
  %9 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %8, i32 0, i32 1, !dbg !93
  store i32 0, i32* %9, align 4, !dbg !94
  %10 = load %struct.rio_t*, %struct.rio_t** %3, align 8, !dbg !95
  %11 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %10, i32 0, i32 3, !dbg !96
  %12 = getelementptr inbounds [1024 x i8], [1024 x i8]* %11, i32 0, i32 0, !dbg !95
  %13 = load %struct.rio_t*, %struct.rio_t** %3, align 8, !dbg !97
  %14 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %13, i32 0, i32 2, !dbg !98
  store i8* %12, i8** %14, align 8, !dbg !99
  ret void, !dbg !100
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local i64 @writen(i32, i8*, i64) #0 !dbg !101 {
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !111, metadata !DIExpression()), !dbg !112
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !113, metadata !DIExpression()), !dbg !114
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !115, metadata !DIExpression()), !dbg !116
  call void @llvm.dbg.declare(metadata i64* %8, metadata !117, metadata !DIExpression()), !dbg !118
  %11 = load i64, i64* %7, align 8, !dbg !119
  store i64 %11, i64* %8, align 8, !dbg !118
  call void @llvm.dbg.declare(metadata i64* %9, metadata !120, metadata !DIExpression()), !dbg !121
  call void @llvm.dbg.declare(metadata i8** %10, metadata !122, metadata !DIExpression()), !dbg !123
  %12 = load i8*, i8** %6, align 8, !dbg !124
  store i8* %12, i8** %10, align 8, !dbg !123
  br label %13, !dbg !125

; <label>:13:                                     ; preds = %29, %3
  %14 = load i64, i64* %8, align 8, !dbg !126
  %15 = icmp ugt i64 %14, 0, !dbg !127
  br i1 %15, label %16, label %36, !dbg !125

; <label>:16:                                     ; preds = %13
  %17 = load i32, i32* %5, align 4, !dbg !128
  %18 = load i8*, i8** %10, align 8, !dbg !131
  %19 = load i64, i64* %8, align 8, !dbg !132
  %20 = call i64 @write(i32 %17, i8* %18, i64 %19), !dbg !133
  store i64 %20, i64* %9, align 8, !dbg !134
  %21 = icmp sle i64 %20, 0, !dbg !135
  br i1 %21, label %22, label %29, !dbg !136

; <label>:22:                                     ; preds = %16
  %23 = call i32* @__errno_location() #8, !dbg !137
  %24 = load i32, i32* %23, align 4, !dbg !137
  %25 = icmp eq i32 %24, 4, !dbg !140
  br i1 %25, label %26, label %27, !dbg !141

; <label>:26:                                     ; preds = %22
  store i64 0, i64* %9, align 8, !dbg !142
  br label %28, !dbg !143

; <label>:27:                                     ; preds = %22
  store i64 -1, i64* %4, align 8, !dbg !144
  br label %38, !dbg !144

; <label>:28:                                     ; preds = %26
  br label %29, !dbg !145

; <label>:29:                                     ; preds = %28, %16
  %30 = load i64, i64* %9, align 8, !dbg !146
  %31 = load i64, i64* %8, align 8, !dbg !147
  %32 = sub i64 %31, %30, !dbg !147
  store i64 %32, i64* %8, align 8, !dbg !147
  %33 = load i64, i64* %9, align 8, !dbg !148
  %34 = load i8*, i8** %10, align 8, !dbg !149
  %35 = getelementptr inbounds i8, i8* %34, i64 %33, !dbg !149
  store i8* %35, i8** %10, align 8, !dbg !149
  br label %13, !dbg !125, !llvm.loop !150

; <label>:36:                                     ; preds = %13
  %37 = load i64, i64* %7, align 8, !dbg !152
  store i64 %37, i64* %4, align 8, !dbg !153
  br label %38, !dbg !153

; <label>:38:                                     ; preds = %36, %27
  %39 = load i64, i64* %4, align 8, !dbg !154
  ret i64 %39, !dbg !154
}

declare i64 @write(i32, i8*, i64) #2

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #3

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local i64 @rio_readlineb(%struct.rio_t*, i8*, i64) #0 !dbg !155 {
  %4 = alloca i64, align 8
  %5 = alloca %struct.rio_t*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca i8*, align 8
  store %struct.rio_t* %0, %struct.rio_t** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.rio_t** %5, metadata !158, metadata !DIExpression()), !dbg !159
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !160, metadata !DIExpression()), !dbg !161
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !162, metadata !DIExpression()), !dbg !163
  call void @llvm.dbg.declare(metadata i32* %8, metadata !164, metadata !DIExpression()), !dbg !165
  call void @llvm.dbg.declare(metadata i32* %9, metadata !166, metadata !DIExpression()), !dbg !167
  call void @llvm.dbg.declare(metadata i8* %10, metadata !168, metadata !DIExpression()), !dbg !169
  call void @llvm.dbg.declare(metadata i8** %11, metadata !170, metadata !DIExpression()), !dbg !171
  %12 = load i8*, i8** %6, align 8, !dbg !172
  store i8* %12, i8** %11, align 8, !dbg !171
  store i32 1, i32* %8, align 4, !dbg !173
  br label %13, !dbg !175

; <label>:13:                                     ; preds = %42, %3
  %14 = load i32, i32* %8, align 4, !dbg !176
  %15 = sext i32 %14 to i64, !dbg !176
  %16 = load i64, i64* %7, align 8, !dbg !178
  %17 = icmp ult i64 %15, %16, !dbg !179
  br i1 %17, label %18, label %45, !dbg !180

; <label>:18:                                     ; preds = %13
  %19 = load %struct.rio_t*, %struct.rio_t** %5, align 8, !dbg !181
  %20 = call i64 @rio_read(%struct.rio_t* %19, i8* %10, i64 1), !dbg !184
  %21 = trunc i64 %20 to i32, !dbg !184
  store i32 %21, i32* %9, align 4, !dbg !185
  %22 = icmp eq i32 %21, 1, !dbg !186
  br i1 %22, label %23, label %32, !dbg !187

; <label>:23:                                     ; preds = %18
  %24 = load i8, i8* %10, align 1, !dbg !188
  %25 = load i8*, i8** %11, align 8, !dbg !190
  %26 = getelementptr inbounds i8, i8* %25, i32 1, !dbg !190
  store i8* %26, i8** %11, align 8, !dbg !190
  store i8 %24, i8* %25, align 1, !dbg !191
  %27 = load i8, i8* %10, align 1, !dbg !192
  %28 = sext i8 %27 to i32, !dbg !192
  %29 = icmp eq i32 %28, 10, !dbg !194
  br i1 %29, label %30, label %31, !dbg !195

; <label>:30:                                     ; preds = %23
  br label %45, !dbg !196

; <label>:31:                                     ; preds = %23
  br label %41, !dbg !197

; <label>:32:                                     ; preds = %18
  %33 = load i32, i32* %9, align 4, !dbg !198
  %34 = icmp eq i32 %33, 0, !dbg !200
  br i1 %34, label %35, label %40, !dbg !201

; <label>:35:                                     ; preds = %32
  %36 = load i32, i32* %8, align 4, !dbg !202
  %37 = icmp eq i32 %36, 1, !dbg !205
  br i1 %37, label %38, label %39, !dbg !206

; <label>:38:                                     ; preds = %35
  store i64 0, i64* %4, align 8, !dbg !207
  br label %49, !dbg !207

; <label>:39:                                     ; preds = %35
  br label %45, !dbg !208

; <label>:40:                                     ; preds = %32
  store i64 -1, i64* %4, align 8, !dbg !209
  br label %49, !dbg !209

; <label>:41:                                     ; preds = %31
  br label %42, !dbg !210

; <label>:42:                                     ; preds = %41
  %43 = load i32, i32* %8, align 4, !dbg !211
  %44 = add nsw i32 %43, 1, !dbg !211
  store i32 %44, i32* %8, align 4, !dbg !211
  br label %13, !dbg !212, !llvm.loop !213

; <label>:45:                                     ; preds = %39, %30, %13
  %46 = load i8*, i8** %11, align 8, !dbg !215
  store i8 0, i8* %46, align 1, !dbg !216
  %47 = load i32, i32* %8, align 4, !dbg !217
  %48 = sext i32 %47 to i64, !dbg !217
  store i64 %48, i64* %4, align 8, !dbg !218
  br label %49, !dbg !218

; <label>:49:                                     ; preds = %45, %40, %38
  %50 = load i64, i64* %4, align 8, !dbg !219
  ret i64 %50, !dbg !219
}

; Function Attrs: noinline nounwind sspstrong uwtable
define internal i64 @rio_read(%struct.rio_t*, i8*, i64) #0 !dbg !220 {
  %4 = alloca i64, align 8
  %5 = alloca %struct.rio_t*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  store %struct.rio_t* %0, %struct.rio_t** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.rio_t** %5, metadata !223, metadata !DIExpression()), !dbg !224
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !225, metadata !DIExpression()), !dbg !226
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !227, metadata !DIExpression()), !dbg !228
  call void @llvm.dbg.declare(metadata i32* %8, metadata !229, metadata !DIExpression()), !dbg !230
  br label %9, !dbg !231

; <label>:9:                                      ; preds = %48, %3
  %10 = load %struct.rio_t*, %struct.rio_t** %5, align 8, !dbg !232
  %11 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %10, i32 0, i32 1, !dbg !233
  %12 = load i32, i32* %11, align 4, !dbg !233
  %13 = icmp sle i32 %12, 0, !dbg !234
  br i1 %13, label %14, label %49, !dbg !231

; <label>:14:                                     ; preds = %9
  %15 = load %struct.rio_t*, %struct.rio_t** %5, align 8, !dbg !235
  %16 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %15, i32 0, i32 0, !dbg !237
  %17 = load i32, i32* %16, align 8, !dbg !237
  %18 = load %struct.rio_t*, %struct.rio_t** %5, align 8, !dbg !238
  %19 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %18, i32 0, i32 3, !dbg !239
  %20 = getelementptr inbounds [1024 x i8], [1024 x i8]* %19, i32 0, i32 0, !dbg !238
  %21 = call i64 @read(i32 %17, i8* %20, i64 1024), !dbg !240
  %22 = trunc i64 %21 to i32, !dbg !240
  %23 = load %struct.rio_t*, %struct.rio_t** %5, align 8, !dbg !241
  %24 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %23, i32 0, i32 1, !dbg !242
  store i32 %22, i32* %24, align 4, !dbg !243
  %25 = load %struct.rio_t*, %struct.rio_t** %5, align 8, !dbg !244
  %26 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %25, i32 0, i32 1, !dbg !246
  %27 = load i32, i32* %26, align 4, !dbg !246
  %28 = icmp slt i32 %27, 0, !dbg !247
  br i1 %28, label %29, label %35, !dbg !248

; <label>:29:                                     ; preds = %14
  %30 = call i32* @__errno_location() #8, !dbg !249
  %31 = load i32, i32* %30, align 4, !dbg !249
  %32 = icmp ne i32 %31, 4, !dbg !252
  br i1 %32, label %33, label %34, !dbg !253

; <label>:33:                                     ; preds = %29
  store i64 -1, i64* %4, align 8, !dbg !254
  br label %82, !dbg !254

; <label>:34:                                     ; preds = %29
  br label %48, !dbg !255

; <label>:35:                                     ; preds = %14
  %36 = load %struct.rio_t*, %struct.rio_t** %5, align 8, !dbg !256
  %37 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %36, i32 0, i32 1, !dbg !258
  %38 = load i32, i32* %37, align 4, !dbg !258
  %39 = icmp eq i32 %38, 0, !dbg !259
  br i1 %39, label %40, label %41, !dbg !260

; <label>:40:                                     ; preds = %35
  store i64 0, i64* %4, align 8, !dbg !261
  br label %82, !dbg !261

; <label>:41:                                     ; preds = %35
  %42 = load %struct.rio_t*, %struct.rio_t** %5, align 8, !dbg !262
  %43 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %42, i32 0, i32 3, !dbg !263
  %44 = getelementptr inbounds [1024 x i8], [1024 x i8]* %43, i32 0, i32 0, !dbg !262
  %45 = load %struct.rio_t*, %struct.rio_t** %5, align 8, !dbg !264
  %46 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %45, i32 0, i32 2, !dbg !265
  store i8* %44, i8** %46, align 8, !dbg !266
  br label %47

; <label>:47:                                     ; preds = %41
  br label %48

; <label>:48:                                     ; preds = %47, %34
  br label %9, !dbg !231, !llvm.loop !267

; <label>:49:                                     ; preds = %9
  %50 = load i64, i64* %7, align 8, !dbg !269
  %51 = trunc i64 %50 to i32, !dbg !269
  store i32 %51, i32* %8, align 4, !dbg !270
  %52 = load %struct.rio_t*, %struct.rio_t** %5, align 8, !dbg !271
  %53 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %52, i32 0, i32 1, !dbg !273
  %54 = load i32, i32* %53, align 4, !dbg !273
  %55 = sext i32 %54 to i64, !dbg !271
  %56 = load i64, i64* %7, align 8, !dbg !274
  %57 = icmp ult i64 %55, %56, !dbg !275
  br i1 %57, label %58, label %62, !dbg !276

; <label>:58:                                     ; preds = %49
  %59 = load %struct.rio_t*, %struct.rio_t** %5, align 8, !dbg !277
  %60 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %59, i32 0, i32 1, !dbg !278
  %61 = load i32, i32* %60, align 4, !dbg !278
  store i32 %61, i32* %8, align 4, !dbg !279
  br label %62, !dbg !280

; <label>:62:                                     ; preds = %58, %49
  %63 = load i8*, i8** %6, align 8, !dbg !281
  %64 = load %struct.rio_t*, %struct.rio_t** %5, align 8, !dbg !282
  %65 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %64, i32 0, i32 2, !dbg !283
  %66 = load i8*, i8** %65, align 8, !dbg !283
  %67 = load i32, i32* %8, align 4, !dbg !284
  %68 = sext i32 %67 to i64, !dbg !284
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %63, i8* align 1 %66, i64 %68, i1 false), !dbg !285
  %69 = load i32, i32* %8, align 4, !dbg !286
  %70 = load %struct.rio_t*, %struct.rio_t** %5, align 8, !dbg !287
  %71 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %70, i32 0, i32 2, !dbg !288
  %72 = load i8*, i8** %71, align 8, !dbg !289
  %73 = sext i32 %69 to i64, !dbg !289
  %74 = getelementptr inbounds i8, i8* %72, i64 %73, !dbg !289
  store i8* %74, i8** %71, align 8, !dbg !289
  %75 = load i32, i32* %8, align 4, !dbg !290
  %76 = load %struct.rio_t*, %struct.rio_t** %5, align 8, !dbg !291
  %77 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %76, i32 0, i32 1, !dbg !292
  %78 = load i32, i32* %77, align 4, !dbg !293
  %79 = sub nsw i32 %78, %75, !dbg !293
  store i32 %79, i32* %77, align 4, !dbg !293
  %80 = load i32, i32* %8, align 4, !dbg !294
  %81 = sext i32 %80 to i64, !dbg !294
  store i64 %81, i64* %4, align 8, !dbg !295
  br label %82, !dbg !295

; <label>:82:                                     ; preds = %62, %40, %33
  %83 = load i64, i64* %4, align 8, !dbg !296
  ret i64 %83, !dbg !296
}

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local void @format_size(i8*, %struct.stat*) #0 !dbg !297 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.stat*, align 8
  %5 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !338, metadata !DIExpression()), !dbg !339
  store %struct.stat* %1, %struct.stat** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %4, metadata !340, metadata !DIExpression()), !dbg !341
  %6 = load %struct.stat*, %struct.stat** %4, align 8, !dbg !342
  %7 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 3, !dbg !342
  %8 = load i32, i32* %7, align 8, !dbg !342
  %9 = and i32 %8, 61440, !dbg !342
  %10 = icmp eq i32 %9, 16384, !dbg !342
  br i1 %10, label %11, label %14, !dbg !344

; <label>:11:                                     ; preds = %2
  %12 = load i8*, i8** %3, align 8, !dbg !345
  %13 = call i32 (i8*, i8*, ...) @sprintf(i8* %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i32 0, i32 0)) #9, !dbg !347
  br label %54, !dbg !348

; <label>:14:                                     ; preds = %2
  call void @llvm.dbg.declare(metadata i64* %5, metadata !349, metadata !DIExpression()), !dbg !352
  %15 = load %struct.stat*, %struct.stat** %4, align 8, !dbg !353
  %16 = getelementptr inbounds %struct.stat, %struct.stat* %15, i32 0, i32 8, !dbg !354
  %17 = load i64, i64* %16, align 8, !dbg !354
  store i64 %17, i64* %5, align 8, !dbg !352
  %18 = load i64, i64* %5, align 8, !dbg !355
  %19 = icmp slt i64 %18, 1024, !dbg !357
  br i1 %19, label %20, label %24, !dbg !358

; <label>:20:                                     ; preds = %14
  %21 = load i8*, i8** %3, align 8, !dbg !359
  %22 = load i64, i64* %5, align 8, !dbg !361
  %23 = call i32 (i8*, i8*, ...) @sprintf(i8* %21, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25, i32 0, i32 0), i64 %22) #9, !dbg !362
  br label %53, !dbg !363

; <label>:24:                                     ; preds = %14
  %25 = load i64, i64* %5, align 8, !dbg !364
  %26 = icmp slt i64 %25, 1048576, !dbg !366
  br i1 %26, label %27, label %33, !dbg !367

; <label>:27:                                     ; preds = %24
  %28 = load i8*, i8** %3, align 8, !dbg !368
  %29 = load i64, i64* %5, align 8, !dbg !370
  %30 = sitofp i64 %29 to double, !dbg !371
  %31 = fdiv double %30, 1.024000e+03, !dbg !372
  %32 = call i32 (i8*, i8*, ...) @sprintf(i8* %28, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0), double %31) #9, !dbg !373
  br label %52, !dbg !374

; <label>:33:                                     ; preds = %24
  %34 = load i64, i64* %5, align 8, !dbg !375
  %35 = icmp slt i64 %34, 1073741824, !dbg !377
  br i1 %35, label %36, label %43, !dbg !378

; <label>:36:                                     ; preds = %33
  %37 = load i8*, i8** %3, align 8, !dbg !379
  %38 = load i64, i64* %5, align 8, !dbg !381
  %39 = sitofp i64 %38 to double, !dbg !382
  %40 = fdiv double %39, 1.024000e+03, !dbg !383
  %41 = fdiv double %40, 1.024000e+03, !dbg !384
  %42 = call i32 (i8*, i8*, ...) @sprintf(i8* %37, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i32 0, i32 0), double %41) #9, !dbg !385
  br label %51, !dbg !386

; <label>:43:                                     ; preds = %33
  %44 = load i8*, i8** %3, align 8, !dbg !387
  %45 = load i64, i64* %5, align 8, !dbg !389
  %46 = sitofp i64 %45 to double, !dbg !390
  %47 = fdiv double %46, 1.024000e+03, !dbg !391
  %48 = fdiv double %47, 1.024000e+03, !dbg !392
  %49 = fdiv double %48, 1.024000e+03, !dbg !393
  %50 = call i32 (i8*, i8*, ...) @sprintf(i8* %44, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), double %49) #9, !dbg !394
  br label %51

; <label>:51:                                     ; preds = %43, %36
  br label %52

; <label>:52:                                     ; preds = %51, %27
  br label %53

; <label>:53:                                     ; preds = %52, %20
  br label %54

; <label>:54:                                     ; preds = %53, %11
  ret void, !dbg !395
}

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #4

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local void @handle_directory_request(i32, i32, i8*) #0 !dbg !396 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca [1024 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = alloca [16 x i8], align 16
  %10 = alloca %struct.stat, align 8
  %11 = alloca %struct.__dirstream*, align 8
  %12 = alloca %struct.dirent*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !399, metadata !DIExpression()), !dbg !400
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !401, metadata !DIExpression()), !dbg !402
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !403, metadata !DIExpression()), !dbg !404
  call void @llvm.dbg.declare(metadata [1024 x i8]* %7, metadata !405, metadata !DIExpression()), !dbg !406
  call void @llvm.dbg.declare(metadata [32 x i8]* %8, metadata !407, metadata !DIExpression()), !dbg !411
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !412, metadata !DIExpression()), !dbg !416
  call void @llvm.dbg.declare(metadata %struct.stat* %10, metadata !417, metadata !DIExpression()), !dbg !418
  %15 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i32 0, i32 0, !dbg !419
  %16 = call i32 (i8*, i8*, ...) @sprintf(i8* %15, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34, i32 0, i32 0)) #9, !dbg !420
  %17 = load i32, i32* %4, align 4, !dbg !421
  %18 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i32 0, i32 0, !dbg !422
  %19 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i32 0, i32 0, !dbg !423
  %20 = call i64 @strlen(i8* %19) #10, !dbg !424
  %21 = call i64 @writen(i32 %17, i8* %18, i64 %20), !dbg !425
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %11, metadata !426, metadata !DIExpression()), !dbg !431
  %22 = load i32, i32* %5, align 4, !dbg !432
  %23 = call %struct.__dirstream* @fdopendir(i32 %22), !dbg !433
  store %struct.__dirstream* %23, %struct.__dirstream** %11, align 8, !dbg !431
  call void @llvm.dbg.declare(metadata %struct.dirent** %12, metadata !434, metadata !DIExpression()), !dbg !448
  call void @llvm.dbg.declare(metadata i32* %13, metadata !449, metadata !DIExpression()), !dbg !450
  br label %24, !dbg !451

; <label>:24:                                     ; preds = %94, %48, %40, %3
  %25 = load %struct.__dirstream*, %struct.__dirstream** %11, align 8, !dbg !452
  %26 = call %struct.dirent* @readdir(%struct.__dirstream* %25), !dbg !453
  store %struct.dirent* %26, %struct.dirent** %12, align 8, !dbg !454
  %27 = icmp ne %struct.dirent* %26, null, !dbg !455
  br i1 %27, label %28, label %97, !dbg !451

; <label>:28:                                     ; preds = %24
  %29 = load %struct.dirent*, %struct.dirent** %12, align 8, !dbg !456
  %30 = getelementptr inbounds %struct.dirent, %struct.dirent* %29, i32 0, i32 4, !dbg !459
  %31 = getelementptr inbounds [256 x i8], [256 x i8]* %30, i32 0, i32 0, !dbg !456
  %32 = call i32 @strcmp(i8* %31, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i32 0, i32 0)) #10, !dbg !460
  %33 = icmp ne i32 %32, 0, !dbg !460
  br i1 %33, label %34, label %40, !dbg !461

; <label>:34:                                     ; preds = %28
  %35 = load %struct.dirent*, %struct.dirent** %12, align 8, !dbg !462
  %36 = getelementptr inbounds %struct.dirent, %struct.dirent* %35, i32 0, i32 4, !dbg !463
  %37 = getelementptr inbounds [256 x i8], [256 x i8]* %36, i32 0, i32 0, !dbg !462
  %38 = call i32 @strcmp(i8* %37, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.36, i32 0, i32 0)) #10, !dbg !464
  %39 = icmp ne i32 %38, 0, !dbg !464
  br i1 %39, label %41, label %40, !dbg !465

; <label>:40:                                     ; preds = %34, %28
  br label %24, !dbg !466, !llvm.loop !468

; <label>:41:                                     ; preds = %34
  %42 = load i32, i32* %5, align 4, !dbg !470
  %43 = load %struct.dirent*, %struct.dirent** %12, align 8, !dbg !472
  %44 = getelementptr inbounds %struct.dirent, %struct.dirent* %43, i32 0, i32 4, !dbg !473
  %45 = getelementptr inbounds [256 x i8], [256 x i8]* %44, i32 0, i32 0, !dbg !472
  %46 = call i32 (i32, i8*, i32, ...) @openat(i32 %42, i8* %45, i32 0), !dbg !474
  store i32 %46, i32* %13, align 4, !dbg !475
  %47 = icmp eq i32 %46, -1, !dbg !476
  br i1 %47, label %48, label %52, !dbg !477

; <label>:48:                                     ; preds = %41
  %49 = load %struct.dirent*, %struct.dirent** %12, align 8, !dbg !478
  %50 = getelementptr inbounds %struct.dirent, %struct.dirent* %49, i32 0, i32 4, !dbg !480
  %51 = getelementptr inbounds [256 x i8], [256 x i8]* %50, i32 0, i32 0, !dbg !478
  call void @perror(i8* %51), !dbg !481
  br label %24, !dbg !482, !llvm.loop !468

; <label>:52:                                     ; preds = %41
  %53 = load i32, i32* %13, align 4, !dbg !483
  %54 = call i32 @fstat(i32 %53, %struct.stat* %10) #9, !dbg !484
  %55 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0, !dbg !485
  %56 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 12, !dbg !486
  %57 = getelementptr inbounds %struct.timespec, %struct.timespec* %56, i32 0, i32 0, !dbg !486
  %58 = call %struct.tm* @localtime(i64* %57) #9, !dbg !487
  %59 = call i64 @strftime(i8* %55, i64 32, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i32 0, i32 0), %struct.tm* %58) #9, !dbg !488
  %60 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !489
  call void @format_size(i8* %60, %struct.stat* %10), !dbg !490
  %61 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 3, !dbg !491
  %62 = load i32, i32* %61, align 8, !dbg !491
  %63 = and i32 %62, 61440, !dbg !491
  %64 = icmp eq i32 %63, 32768, !dbg !491
  br i1 %64, label %70, label %65, !dbg !493

; <label>:65:                                     ; preds = %52
  %66 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 3, !dbg !494
  %67 = load i32, i32* %66, align 8, !dbg !494
  %68 = and i32 %67, 61440, !dbg !494
  %69 = icmp eq i32 %68, 16384, !dbg !494
  br i1 %69, label %70, label %94, !dbg !495

; <label>:70:                                     ; preds = %65, %52
  call void @llvm.dbg.declare(metadata i8** %14, metadata !496, metadata !DIExpression()), !dbg !498
  %71 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 3, !dbg !499
  %72 = load i32, i32* %71, align 8, !dbg !499
  %73 = and i32 %72, 61440, !dbg !499
  %74 = icmp eq i32 %73, 16384, !dbg !499
  %75 = zext i1 %74 to i64, !dbg !499
  %76 = select i1 %74, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.39, i32 0, i32 0), !dbg !499
  store i8* %76, i8** %14, align 8, !dbg !498
  %77 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i32 0, i32 0, !dbg !500
  %78 = load %struct.dirent*, %struct.dirent** %12, align 8, !dbg !501
  %79 = getelementptr inbounds %struct.dirent, %struct.dirent* %78, i32 0, i32 4, !dbg !502
  %80 = getelementptr inbounds [256 x i8], [256 x i8]* %79, i32 0, i32 0, !dbg !501
  %81 = load i8*, i8** %14, align 8, !dbg !503
  %82 = load %struct.dirent*, %struct.dirent** %12, align 8, !dbg !504
  %83 = getelementptr inbounds %struct.dirent, %struct.dirent* %82, i32 0, i32 4, !dbg !505
  %84 = getelementptr inbounds [256 x i8], [256 x i8]* %83, i32 0, i32 0, !dbg !504
  %85 = load i8*, i8** %14, align 8, !dbg !506
  %86 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0, !dbg !507
  %87 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !508
  %88 = call i32 (i8*, i8*, ...) @sprintf(i8* %77, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.40, i32 0, i32 0), i8* %80, i8* %81, i8* %84, i8* %85, i8* %86, i8* %87) #9, !dbg !509
  %89 = load i32, i32* %4, align 4, !dbg !510
  %90 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i32 0, i32 0, !dbg !511
  %91 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i32 0, i32 0, !dbg !512
  %92 = call i64 @strlen(i8* %91) #10, !dbg !513
  %93 = call i64 @writen(i32 %89, i8* %90, i64 %92), !dbg !514
  br label %94, !dbg !515

; <label>:94:                                     ; preds = %70, %65
  %95 = load i32, i32* %13, align 4, !dbg !516
  %96 = call i32 @close(i32 %95), !dbg !517
  br label %24, !dbg !451, !llvm.loop !468

; <label>:97:                                     ; preds = %24
  %98 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i32 0, i32 0, !dbg !518
  %99 = call i32 (i8*, i8*, ...) @sprintf(i8* %98, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.41, i32 0, i32 0)) #9, !dbg !519
  %100 = load i32, i32* %4, align 4, !dbg !520
  %101 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i32 0, i32 0, !dbg !521
  %102 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i32 0, i32 0, !dbg !522
  %103 = call i64 @strlen(i8* %102) #10, !dbg !523
  %104 = call i64 @writen(i32 %100, i8* %101, i64 %103), !dbg !524
  %105 = load %struct.__dirstream*, %struct.__dirstream** %11, align 8, !dbg !525
  %106 = call i32 @closedir(%struct.__dirstream* %105), !dbg !526
  ret void, !dbg !527
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #5

declare %struct.__dirstream* @fdopendir(i32) #2

declare %struct.dirent* @readdir(%struct.__dirstream*) #2

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #5

declare i32 @openat(i32, i8*, i32, ...) #2

declare void @perror(i8*) #2

; Function Attrs: nounwind
declare i32 @fstat(i32, %struct.stat*) #4

; Function Attrs: nounwind
declare i64 @strftime(i8*, i64, i8*, %struct.tm*) #4

; Function Attrs: nounwind
declare %struct.tm* @localtime(i64*) #4

declare i32 @close(i32) #2

declare i32 @closedir(%struct.__dirstream*) #2

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local i32 @open_listenfd(i32) #0 !dbg !528 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.sockaddr_in, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !531, metadata !DIExpression()), !dbg !532
  call void @llvm.dbg.declare(metadata i32* %4, metadata !533, metadata !DIExpression()), !dbg !534
  call void @llvm.dbg.declare(metadata i32* %5, metadata !535, metadata !DIExpression()), !dbg !536
  store i32 1, i32* %5, align 4, !dbg !536
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in* %6, metadata !537, metadata !DIExpression()), !dbg !553
  %7 = call i32 @socket(i32 2, i32 1, i32 0) #9, !dbg !554
  store i32 %7, i32* %4, align 4, !dbg !556
  %8 = icmp slt i32 %7, 0, !dbg !557
  br i1 %8, label %9, label %10, !dbg !558

; <label>:9:                                      ; preds = %1
  store i32 -1, i32* %2, align 4, !dbg !559
  br label %44, !dbg !559

; <label>:10:                                     ; preds = %1
  %11 = load i32, i32* %4, align 4, !dbg !560
  %12 = bitcast i32* %5 to i8*, !dbg !562
  %13 = call i32 @setsockopt(i32 %11, i32 1, i32 2, i8* %12, i32 4) #9, !dbg !563
  %14 = icmp slt i32 %13, 0, !dbg !564
  br i1 %14, label %15, label %16, !dbg !565

; <label>:15:                                     ; preds = %10
  store i32 -1, i32* %2, align 4, !dbg !566
  br label %44, !dbg !566

; <label>:16:                                     ; preds = %10
  %17 = load i32, i32* %4, align 4, !dbg !567
  %18 = bitcast i32* %5 to i8*, !dbg !569
  %19 = call i32 @setsockopt(i32 %17, i32 6, i32 3, i8* %18, i32 4) #9, !dbg !570
  %20 = icmp slt i32 %19, 0, !dbg !571
  br i1 %20, label %21, label %22, !dbg !572

; <label>:21:                                     ; preds = %16
  store i32 -1, i32* %2, align 4, !dbg !573
  br label %44, !dbg !573

; <label>:22:                                     ; preds = %16
  %23 = bitcast %struct.sockaddr_in* %6 to i8*, !dbg !574
  call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 0, i64 16, i1 false), !dbg !574
  %24 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %6, i32 0, i32 0, !dbg !575
  store i16 2, i16* %24, align 4, !dbg !576
  %25 = call i32 @htonl(i32 0) #8, !dbg !577
  %26 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %6, i32 0, i32 2, !dbg !578
  %27 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %26, i32 0, i32 0, !dbg !579
  store i32 %25, i32* %27, align 4, !dbg !580
  %28 = load i32, i32* %3, align 4, !dbg !581
  %29 = trunc i32 %28 to i16, !dbg !582
  %30 = call zeroext i16 @htons(i16 zeroext %29) #8, !dbg !583
  %31 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %6, i32 0, i32 1, !dbg !584
  store i16 %30, i16* %31, align 2, !dbg !585
  %32 = load i32, i32* %4, align 4, !dbg !586
  %33 = bitcast %struct.sockaddr_in* %6 to %struct.sockaddr*, !dbg !588
  %34 = call i32 @bind(i32 %32, %struct.sockaddr* %33, i32 16) #9, !dbg !589
  %35 = icmp slt i32 %34, 0, !dbg !590
  br i1 %35, label %36, label %37, !dbg !591

; <label>:36:                                     ; preds = %22
  store i32 -1, i32* %2, align 4, !dbg !592
  br label %44, !dbg !592

; <label>:37:                                     ; preds = %22
  %38 = load i32, i32* %4, align 4, !dbg !593
  %39 = call i32 @listen(i32 %38, i32 1024) #9, !dbg !595
  %40 = icmp slt i32 %39, 0, !dbg !596
  br i1 %40, label %41, label %42, !dbg !597

; <label>:41:                                     ; preds = %37
  store i32 -1, i32* %2, align 4, !dbg !598
  br label %44, !dbg !598

; <label>:42:                                     ; preds = %37
  %43 = load i32, i32* %4, align 4, !dbg !599
  store i32 %43, i32* %2, align 4, !dbg !600
  br label %44, !dbg !600

; <label>:44:                                     ; preds = %42, %41, %36, %21, %15, %9
  %45 = load i32, i32* %2, align 4, !dbg !601
  ret i32 %45, !dbg !601
}

; Function Attrs: nounwind
declare i32 @socket(i32, i32, i32) #4

; Function Attrs: nounwind
declare i32 @setsockopt(i32, i32, i32, i8*, i32) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1) #6

; Function Attrs: nounwind readnone
declare i32 @htonl(i32) #3

; Function Attrs: nounwind readnone
declare zeroext i16 @htons(i16 zeroext) #3

; Function Attrs: nounwind
declare i32 @bind(i32, %struct.sockaddr*, i32) #4

; Function Attrs: nounwind
declare i32 @listen(i32, i32) #4

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local void @url_decode(i8*, i8*, i32) #0 !dbg !602 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca [3 x i8], align 1
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !605, metadata !DIExpression()), !dbg !606
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !607, metadata !DIExpression()), !dbg !608
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !609, metadata !DIExpression()), !dbg !610
  call void @llvm.dbg.declare(metadata i8** %7, metadata !611, metadata !DIExpression()), !dbg !612
  %9 = load i8*, i8** %4, align 8, !dbg !613
  store i8* %9, i8** %7, align 8, !dbg !612
  call void @llvm.dbg.declare(metadata [3 x i8]* %8, metadata !614, metadata !DIExpression()), !dbg !616
  %10 = bitcast [3 x i8]* %8 to i8*, !dbg !616
  call void @llvm.memset.p0i8.i64(i8* align 1 %10, i8 0, i64 3, i1 false), !dbg !616
  br label %11, !dbg !617

; <label>:11:                                     ; preds = %44, %3
  %12 = load i8*, i8** %7, align 8, !dbg !618
  %13 = load i8, i8* %12, align 1, !dbg !619
  %14 = sext i8 %13 to i32, !dbg !619
  %15 = icmp ne i32 %14, 0, !dbg !619
  br i1 %15, label %16, label %20, !dbg !620

; <label>:16:                                     ; preds = %11
  %17 = load i32, i32* %6, align 4, !dbg !621
  %18 = add nsw i32 %17, -1, !dbg !621
  store i32 %18, i32* %6, align 4, !dbg !621
  %19 = icmp ne i32 %18, 0, !dbg !620
  br label %20

; <label>:20:                                     ; preds = %16, %11
  %21 = phi i1 [ false, %11 ], [ %19, %16 ], !dbg !622
  br i1 %21, label %22, label %45, !dbg !617

; <label>:22:                                     ; preds = %20
  %23 = load i8*, i8** %7, align 8, !dbg !623
  %24 = load i8, i8* %23, align 1, !dbg !626
  %25 = sext i8 %24 to i32, !dbg !626
  %26 = icmp eq i32 %25, 37, !dbg !627
  br i1 %26, label %27, label %38, !dbg !628

; <label>:27:                                     ; preds = %22
  %28 = getelementptr inbounds [3 x i8], [3 x i8]* %8, i32 0, i32 0, !dbg !629
  %29 = load i8*, i8** %7, align 8, !dbg !631
  %30 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !631
  store i8* %30, i8** %7, align 8, !dbg !631
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %30, i64 2, i1 false), !dbg !629
  %31 = getelementptr inbounds [3 x i8], [3 x i8]* %8, i32 0, i32 0, !dbg !632
  %32 = call i64 @strtoul(i8* %31, i8** null, i32 16) #9, !dbg !633
  %33 = trunc i64 %32 to i8, !dbg !634
  %34 = load i8*, i8** %5, align 8, !dbg !635
  %35 = getelementptr inbounds i8, i8* %34, i32 1, !dbg !635
  store i8* %35, i8** %5, align 8, !dbg !635
  store i8 %33, i8* %34, align 1, !dbg !636
  %36 = load i8*, i8** %7, align 8, !dbg !637
  %37 = getelementptr inbounds i8, i8* %36, i64 2, !dbg !637
  store i8* %37, i8** %7, align 8, !dbg !637
  br label %44, !dbg !638

; <label>:38:                                     ; preds = %22
  %39 = load i8*, i8** %7, align 8, !dbg !639
  %40 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !639
  store i8* %40, i8** %7, align 8, !dbg !639
  %41 = load i8, i8* %39, align 1, !dbg !641
  %42 = load i8*, i8** %5, align 8, !dbg !642
  %43 = getelementptr inbounds i8, i8* %42, i32 1, !dbg !642
  store i8* %43, i8** %5, align 8, !dbg !642
  store i8 %41, i8* %42, align 1, !dbg !643
  br label %44

; <label>:44:                                     ; preds = %38, %27
  br label %11, !dbg !617, !llvm.loop !644

; <label>:45:                                     ; preds = %20
  %46 = load i8*, i8** %5, align 8, !dbg !646
  store i8 0, i8* %46, align 1, !dbg !647
  ret void, !dbg !648
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #6

; Function Attrs: nounwind
declare i64 @strtoul(i8*, i8**, i32) #4

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local void @parse_request(i32, %struct.http_request*) #0 !dbg !649 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.http_request*, align 8
  %5 = alloca %struct.rio_t, align 8
  %6 = alloca [1024 x i8], align 16
  %7 = alloca [1024 x i8], align 16
  %8 = alloca [1024 x i8], align 16
  %9 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !662, metadata !DIExpression()), !dbg !663
  store %struct.http_request* %1, %struct.http_request** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.http_request** %4, metadata !664, metadata !DIExpression()), !dbg !665
  call void @llvm.dbg.declare(metadata %struct.rio_t* %5, metadata !666, metadata !DIExpression()), !dbg !667
  call void @llvm.dbg.declare(metadata [1024 x i8]* %6, metadata !668, metadata !DIExpression()), !dbg !669
  call void @llvm.dbg.declare(metadata [1024 x i8]* %7, metadata !670, metadata !DIExpression()), !dbg !671
  call void @llvm.dbg.declare(metadata [1024 x i8]* %8, metadata !672, metadata !DIExpression()), !dbg !673
  %10 = load %struct.http_request*, %struct.http_request** %4, align 8, !dbg !674
  %11 = getelementptr inbounds %struct.http_request, %struct.http_request* %10, i32 0, i32 1, !dbg !675
  store i64 0, i64* %11, align 8, !dbg !676
  %12 = load %struct.http_request*, %struct.http_request** %4, align 8, !dbg !677
  %13 = getelementptr inbounds %struct.http_request, %struct.http_request* %12, i32 0, i32 2, !dbg !678
  store i64 0, i64* %13, align 8, !dbg !679
  %14 = load i32, i32* %3, align 4, !dbg !680
  call void @rio_readinitb(%struct.rio_t* %5, i32 %14), !dbg !681
  %15 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i32 0, i32 0, !dbg !682
  %16 = call i64 @rio_readlineb(%struct.rio_t* %5, i8* %15, i64 1024), !dbg !683
  %17 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i32 0, i32 0, !dbg !684
  %18 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i32 0, i32 0, !dbg !685
  %19 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i32 0, i32 0, !dbg !686
  %20 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i32 0, i32 0), i8* %18, i8* %19) #9, !dbg !687
  br label %21, !dbg !688

; <label>:21:                                     ; preds = %67, %2
  %22 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0, !dbg !689
  %23 = load i8, i8* %22, align 16, !dbg !689
  %24 = sext i8 %23 to i32, !dbg !689
  %25 = icmp ne i32 %24, 10, !dbg !690
  br i1 %25, label %26, label %31, !dbg !691

; <label>:26:                                     ; preds = %21
  %27 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 1, !dbg !692
  %28 = load i8, i8* %27, align 1, !dbg !692
  %29 = sext i8 %28 to i32, !dbg !692
  %30 = icmp ne i32 %29, 10, !dbg !693
  br label %31

; <label>:31:                                     ; preds = %26, %21
  %32 = phi i1 [ false, %21 ], [ %30, %26 ], !dbg !694
  br i1 %32, label %33, label %68, !dbg !688

; <label>:33:                                     ; preds = %31
  %34 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i32 0, i32 0, !dbg !695
  %35 = call i64 @rio_readlineb(%struct.rio_t* %5, i8* %34, i64 1024), !dbg !697
  %36 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0, !dbg !698
  %37 = load i8, i8* %36, align 16, !dbg !698
  %38 = sext i8 %37 to i32, !dbg !698
  %39 = icmp eq i32 %38, 82, !dbg !700
  br i1 %39, label %40, label %67, !dbg !701

; <label>:40:                                     ; preds = %33
  %41 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 1, !dbg !702
  %42 = load i8, i8* %41, align 1, !dbg !702
  %43 = sext i8 %42 to i32, !dbg !702
  %44 = icmp eq i32 %43, 97, !dbg !703
  br i1 %44, label %45, label %67, !dbg !704

; <label>:45:                                     ; preds = %40
  %46 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 2, !dbg !705
  %47 = load i8, i8* %46, align 2, !dbg !705
  %48 = sext i8 %47 to i32, !dbg !705
  %49 = icmp eq i32 %48, 110, !dbg !706
  br i1 %49, label %50, label %67, !dbg !707

; <label>:50:                                     ; preds = %45
  %51 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i32 0, i32 0, !dbg !708
  %52 = load %struct.http_request*, %struct.http_request** %4, align 8, !dbg !710
  %53 = getelementptr inbounds %struct.http_request, %struct.http_request* %52, i32 0, i32 1, !dbg !711
  %54 = load %struct.http_request*, %struct.http_request** %4, align 8, !dbg !712
  %55 = getelementptr inbounds %struct.http_request, %struct.http_request* %54, i32 0, i32 2, !dbg !713
  %56 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %51, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43, i32 0, i32 0), i64* %53, i64* %55) #9, !dbg !714
  %57 = load %struct.http_request*, %struct.http_request** %4, align 8, !dbg !715
  %58 = getelementptr inbounds %struct.http_request, %struct.http_request* %57, i32 0, i32 2, !dbg !717
  %59 = load i64, i64* %58, align 8, !dbg !717
  %60 = icmp ne i64 %59, 0, !dbg !718
  br i1 %60, label %61, label %66, !dbg !719

; <label>:61:                                     ; preds = %50
  %62 = load %struct.http_request*, %struct.http_request** %4, align 8, !dbg !720
  %63 = getelementptr inbounds %struct.http_request, %struct.http_request* %62, i32 0, i32 2, !dbg !721
  %64 = load i64, i64* %63, align 8, !dbg !722
  %65 = add i64 %64, 1, !dbg !722
  store i64 %65, i64* %63, align 8, !dbg !722
  br label %66, !dbg !720

; <label>:66:                                     ; preds = %61, %50
  br label %67, !dbg !723

; <label>:67:                                     ; preds = %66, %45, %40, %33
  br label %21, !dbg !688, !llvm.loop !724

; <label>:68:                                     ; preds = %31
  call void @llvm.dbg.declare(metadata i8** %9, metadata !726, metadata !DIExpression()), !dbg !727
  %69 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i32 0, i32 0, !dbg !728
  store i8* %69, i8** %9, align 8, !dbg !727
  %70 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 0, !dbg !729
  %71 = load i8, i8* %70, align 16, !dbg !729
  %72 = sext i8 %71 to i32, !dbg !729
  %73 = icmp eq i32 %72, 47, !dbg !731
  br i1 %73, label %74, label %82, !dbg !732

; <label>:74:                                     ; preds = %68
  %75 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i32 0, i32 0, !dbg !733
  %76 = getelementptr inbounds i8, i8* %75, i64 1, !dbg !735
  store i8* %76, i8** %9, align 8, !dbg !736
  %77 = load i8*, i8** %9, align 8, !dbg !737
  %78 = call i64 @strlen(i8* %77) #10, !dbg !739
  %79 = icmp eq i64 %78, 0, !dbg !740
  br i1 %79, label %80, label %81, !dbg !741

; <label>:80:                                     ; preds = %74
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i32 0, i32 0), i8** %9, align 8, !dbg !742
  br label %81, !dbg !744

; <label>:81:                                     ; preds = %80, %74
  br label %82, !dbg !745

; <label>:82:                                     ; preds = %81, %68
  %83 = load i8*, i8** %9, align 8, !dbg !746
  %84 = load %struct.http_request*, %struct.http_request** %4, align 8, !dbg !747
  %85 = getelementptr inbounds %struct.http_request, %struct.http_request* %84, i32 0, i32 0, !dbg !748
  %86 = getelementptr inbounds [512 x i8], [512 x i8]* %85, i32 0, i32 0, !dbg !747
  call void @url_decode(i8* %83, i8* %86, i32 1024), !dbg !749
  ret void, !dbg !750
}

; Function Attrs: nounwind
declare i32 @__isoc99_sscanf(i8*, i8*, ...) #4

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local void @log_access(i32, %struct.sockaddr_in*, %struct.http_request*) #0 !dbg !751 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.sockaddr_in*, align 8
  %6 = alloca %struct.http_request*, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !755, metadata !DIExpression()), !dbg !756
  store %struct.sockaddr_in* %1, %struct.sockaddr_in** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in** %5, metadata !757, metadata !DIExpression()), !dbg !758
  store %struct.http_request* %2, %struct.http_request** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.http_request** %6, metadata !759, metadata !DIExpression()), !dbg !760
  %7 = load %struct.sockaddr_in*, %struct.sockaddr_in** %5, align 8, !dbg !761
  %8 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 2, !dbg !762
  %9 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %8, i32 0, i32 0, !dbg !763
  %10 = load i32, i32* %9, align 4, !dbg !763
  %11 = call i8* @inet_ntoa(i32 %10) #9, !dbg !763
  %12 = load %struct.sockaddr_in*, %struct.sockaddr_in** %5, align 8, !dbg !764
  %13 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %12, i32 0, i32 1, !dbg !765
  %14 = load i16, i16* %13, align 2, !dbg !765
  %15 = call zeroext i16 @ntohs(i16 zeroext %14) #8, !dbg !766
  %16 = zext i16 %15 to i32, !dbg !766
  %17 = load i32, i32* %4, align 4, !dbg !767
  %18 = load %struct.http_request*, %struct.http_request** %6, align 8, !dbg !768
  %19 = getelementptr inbounds %struct.http_request, %struct.http_request* %18, i32 0, i32 0, !dbg !769
  %20 = getelementptr inbounds [512 x i8], [512 x i8]* %19, i32 0, i32 0, !dbg !768
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.44, i32 0, i32 0), i8* %11, i32 %16, i32 %17, i8* %20), !dbg !770
  ret void, !dbg !771
}

declare i32 @printf(i8*, ...) #2

; Function Attrs: nounwind
declare i8* @inet_ntoa(i32) #4

; Function Attrs: nounwind readnone
declare zeroext i16 @ntohs(i16 zeroext) #3

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local void @client_error(i32, i32, i8*, i8*) #0 !dbg !772 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca [1024 x i8], align 16
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !775, metadata !DIExpression()), !dbg !776
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !777, metadata !DIExpression()), !dbg !778
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !779, metadata !DIExpression()), !dbg !780
  store i8* %3, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !781, metadata !DIExpression()), !dbg !782
  call void @llvm.dbg.declare(metadata [1024 x i8]* %9, metadata !783, metadata !DIExpression()), !dbg !784
  %10 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i32 0, i32 0, !dbg !785
  %11 = load i32, i32* %6, align 4, !dbg !786
  %12 = load i8*, i8** %7, align 8, !dbg !787
  %13 = call i32 (i8*, i8*, ...) @sprintf(i8* %10, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.45, i32 0, i32 0), i32 %11, i8* %12) #9, !dbg !788
  %14 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i32 0, i32 0, !dbg !789
  %15 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i32 0, i32 0, !dbg !790
  %16 = call i64 @strlen(i8* %15) #10, !dbg !791
  %17 = getelementptr inbounds i8, i8* %14, i64 %16, !dbg !792
  %18 = load i8*, i8** %8, align 8, !dbg !793
  %19 = call i64 @strlen(i8* %18) #10, !dbg !794
  %20 = call i32 (i8*, i8*, ...) @sprintf(i8* %17, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.46, i32 0, i32 0), i64 %19) #9, !dbg !795
  %21 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i32 0, i32 0, !dbg !796
  %22 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i32 0, i32 0, !dbg !797
  %23 = call i64 @strlen(i8* %22) #10, !dbg !798
  %24 = getelementptr inbounds i8, i8* %21, i64 %23, !dbg !799
  %25 = load i8*, i8** %8, align 8, !dbg !800
  %26 = call i32 (i8*, i8*, ...) @sprintf(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i32 0, i32 0), i8* %25) #9, !dbg !801
  %27 = load i32, i32* %5, align 4, !dbg !802
  %28 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i32 0, i32 0, !dbg !803
  %29 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i32 0, i32 0, !dbg !804
  %30 = call i64 @strlen(i8* %29) #10, !dbg !805
  %31 = call i64 @writen(i32 %27, i8* %28, i64 %30), !dbg !806
  ret void, !dbg !807
}

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local void @serve_static(i32, i32, %struct.http_request*, i64) #0 !dbg !808 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.http_request*, align 8
  %8 = alloca i64, align 8
  %9 = alloca [128 x i8], align 16
  %10 = alloca i64, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !811, metadata !DIExpression()), !dbg !812
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !813, metadata !DIExpression()), !dbg !814
  store %struct.http_request* %2, %struct.http_request** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.http_request** %7, metadata !815, metadata !DIExpression()), !dbg !816
  store i64 %3, i64* %8, align 8
  call void @llvm.dbg.declare(metadata i64* %8, metadata !817, metadata !DIExpression()), !dbg !818
  call void @llvm.dbg.declare(metadata [128 x i8]* %9, metadata !819, metadata !DIExpression()), !dbg !823
  %11 = load %struct.http_request*, %struct.http_request** %7, align 8, !dbg !824
  %12 = getelementptr inbounds %struct.http_request, %struct.http_request* %11, i32 0, i32 1, !dbg !826
  %13 = load i64, i64* %12, align 8, !dbg !826
  %14 = icmp sgt i64 %13, 0, !dbg !827
  br i1 %14, label %15, label %30, !dbg !828

; <label>:15:                                     ; preds = %4
  %16 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i32 0, i32 0, !dbg !829
  %17 = call i32 (i8*, i8*, ...) @sprintf(i8* %16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.47, i32 0, i32 0)) #9, !dbg !831
  %18 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i32 0, i32 0, !dbg !832
  %19 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i32 0, i32 0, !dbg !833
  %20 = call i64 @strlen(i8* %19) #10, !dbg !834
  %21 = getelementptr inbounds i8, i8* %18, i64 %20, !dbg !835
  %22 = load %struct.http_request*, %struct.http_request** %7, align 8, !dbg !836
  %23 = getelementptr inbounds %struct.http_request, %struct.http_request* %22, i32 0, i32 1, !dbg !837
  %24 = load i64, i64* %23, align 8, !dbg !837
  %25 = load %struct.http_request*, %struct.http_request** %7, align 8, !dbg !838
  %26 = getelementptr inbounds %struct.http_request, %struct.http_request* %25, i32 0, i32 2, !dbg !839
  %27 = load i64, i64* %26, align 8, !dbg !839
  %28 = load i64, i64* %8, align 8, !dbg !840
  %29 = call i32 (i8*, i8*, ...) @sprintf(i8* %21, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.48, i32 0, i32 0), i64 %24, i64 %27, i64 %28) #9, !dbg !841
  br label %33, !dbg !842

; <label>:30:                                     ; preds = %4
  %31 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i32 0, i32 0, !dbg !843
  %32 = call i32 (i8*, i8*, ...) @sprintf(i8* %31, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.49, i32 0, i32 0)) #9, !dbg !845
  br label %33

; <label>:33:                                     ; preds = %30, %15
  %34 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i32 0, i32 0, !dbg !846
  %35 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i32 0, i32 0, !dbg !847
  %36 = call i64 @strlen(i8* %35) #10, !dbg !848
  %37 = getelementptr inbounds i8, i8* %34, i64 %36, !dbg !849
  %38 = load %struct.http_request*, %struct.http_request** %7, align 8, !dbg !850
  %39 = getelementptr inbounds %struct.http_request, %struct.http_request* %38, i32 0, i32 2, !dbg !851
  %40 = load i64, i64* %39, align 8, !dbg !851
  %41 = load %struct.http_request*, %struct.http_request** %7, align 8, !dbg !852
  %42 = getelementptr inbounds %struct.http_request, %struct.http_request* %41, i32 0, i32 1, !dbg !853
  %43 = load i64, i64* %42, align 8, !dbg !853
  %44 = sub i64 %40, %43, !dbg !854
  %45 = call i32 (i8*, i8*, ...) @sprintf(i8* %37, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.50, i32 0, i32 0), i64 %44) #9, !dbg !855
  %46 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i32 0, i32 0, !dbg !856
  %47 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i32 0, i32 0, !dbg !857
  %48 = call i64 @strlen(i8* %47) #10, !dbg !858
  %49 = getelementptr inbounds i8, i8* %46, i64 %48, !dbg !859
  %50 = load %struct.http_request*, %struct.http_request** %7, align 8, !dbg !860
  %51 = getelementptr inbounds %struct.http_request, %struct.http_request* %50, i32 0, i32 0, !dbg !861
  %52 = getelementptr inbounds [512 x i8], [512 x i8]* %51, i32 0, i32 0, !dbg !860
  %53 = call i8* @get_mime_type(i8* %52), !dbg !862
  %54 = call i32 (i8*, i8*, ...) @sprintf(i8* %49, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.51, i32 0, i32 0), i8* %53) #9, !dbg !863
  %55 = load i32, i32* %5, align 4, !dbg !864
  %56 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i32 0, i32 0, !dbg !865
  %57 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i32 0, i32 0, !dbg !866
  %58 = call i64 @strlen(i8* %57) #10, !dbg !867
  %59 = call i64 @writen(i32 %55, i8* %56, i64 %58), !dbg !868
  call void @llvm.dbg.declare(metadata i64* %10, metadata !869, metadata !DIExpression()), !dbg !870
  %60 = load %struct.http_request*, %struct.http_request** %7, align 8, !dbg !871
  %61 = getelementptr inbounds %struct.http_request, %struct.http_request* %60, i32 0, i32 1, !dbg !872
  %62 = load i64, i64* %61, align 8, !dbg !872
  store i64 %62, i64* %10, align 8, !dbg !870
  br label %63, !dbg !873

; <label>:63:                                     ; preds = %82, %33
  %64 = load i64, i64* %10, align 8, !dbg !874
  %65 = load %struct.http_request*, %struct.http_request** %7, align 8, !dbg !875
  %66 = getelementptr inbounds %struct.http_request, %struct.http_request* %65, i32 0, i32 2, !dbg !876
  %67 = load i64, i64* %66, align 8, !dbg !876
  %68 = icmp ult i64 %64, %67, !dbg !877
  br i1 %68, label %69, label %83, !dbg !873

; <label>:69:                                     ; preds = %63
  %70 = load i32, i32* %5, align 4, !dbg !878
  %71 = load i32, i32* %6, align 4, !dbg !881
  %72 = load %struct.http_request*, %struct.http_request** %7, align 8, !dbg !882
  %73 = getelementptr inbounds %struct.http_request, %struct.http_request* %72, i32 0, i32 2, !dbg !883
  %74 = load i64, i64* %73, align 8, !dbg !883
  %75 = load %struct.http_request*, %struct.http_request** %7, align 8, !dbg !884
  %76 = getelementptr inbounds %struct.http_request, %struct.http_request* %75, i32 0, i32 1, !dbg !885
  %77 = load i64, i64* %76, align 8, !dbg !885
  %78 = sub i64 %74, %77, !dbg !886
  %79 = call i64 @sendfile(i32 %70, i32 %71, i64* %10, i64 %78) #9, !dbg !887
  %80 = icmp sle i64 %79, 0, !dbg !888
  br i1 %80, label %81, label %82, !dbg !889

; <label>:81:                                     ; preds = %69
  br label %83, !dbg !890

; <label>:82:                                     ; preds = %69
  br label %63, !dbg !873, !llvm.loop !892

; <label>:83:                                     ; preds = %81, %63
  ret void, !dbg !894
}

; Function Attrs: noinline nounwind sspstrong uwtable
define internal i8* @get_mime_type(i8*) #0 !dbg !895 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.mime_map*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !898, metadata !DIExpression()), !dbg !899
  call void @llvm.dbg.declare(metadata i8** %4, metadata !900, metadata !DIExpression()), !dbg !901
  %6 = load i8*, i8** %3, align 8, !dbg !902
  %7 = call i8* @strrchr(i8* %6, i32 46) #10, !dbg !903
  store i8* %7, i8** %4, align 8, !dbg !901
  %8 = load i8*, i8** %4, align 8, !dbg !904
  %9 = icmp ne i8* %8, null, !dbg !904
  br i1 %9, label %10, label %31, !dbg !906

; <label>:10:                                     ; preds = %1
  call void @llvm.dbg.declare(metadata %struct.mime_map** %5, metadata !907, metadata !DIExpression()), !dbg !910
  store %struct.mime_map* getelementptr inbounds ([13 x %struct.mime_map], [13 x %struct.mime_map]* @meme_types, i32 0, i32 0), %struct.mime_map** %5, align 8, !dbg !910
  br label %11, !dbg !911

; <label>:11:                                     ; preds = %27, %10
  %12 = load %struct.mime_map*, %struct.mime_map** %5, align 8, !dbg !912
  %13 = getelementptr inbounds %struct.mime_map, %struct.mime_map* %12, i32 0, i32 0, !dbg !913
  %14 = load i8*, i8** %13, align 8, !dbg !913
  %15 = icmp ne i8* %14, null, !dbg !911
  br i1 %15, label %16, label %30, !dbg !911

; <label>:16:                                     ; preds = %11
  %17 = load %struct.mime_map*, %struct.mime_map** %5, align 8, !dbg !914
  %18 = getelementptr inbounds %struct.mime_map, %struct.mime_map* %17, i32 0, i32 0, !dbg !917
  %19 = load i8*, i8** %18, align 8, !dbg !917
  %20 = load i8*, i8** %4, align 8, !dbg !918
  %21 = call i32 @strcmp(i8* %19, i8* %20) #10, !dbg !919
  %22 = icmp eq i32 %21, 0, !dbg !920
  br i1 %22, label %23, label %27, !dbg !921

; <label>:23:                                     ; preds = %16
  %24 = load %struct.mime_map*, %struct.mime_map** %5, align 8, !dbg !922
  %25 = getelementptr inbounds %struct.mime_map, %struct.mime_map* %24, i32 0, i32 1, !dbg !924
  %26 = load i8*, i8** %25, align 8, !dbg !924
  store i8* %26, i8** %2, align 8, !dbg !925
  br label %33, !dbg !925

; <label>:27:                                     ; preds = %16
  %28 = load %struct.mime_map*, %struct.mime_map** %5, align 8, !dbg !926
  %29 = getelementptr inbounds %struct.mime_map, %struct.mime_map* %28, i32 1, !dbg !926
  store %struct.mime_map* %29, %struct.mime_map** %5, align 8, !dbg !926
  br label %11, !dbg !911, !llvm.loop !927

; <label>:30:                                     ; preds = %11
  br label %31, !dbg !929

; <label>:31:                                     ; preds = %30, %1
  %32 = load i8*, i8** @default_mime_type, align 8, !dbg !930
  store i8* %32, i8** %2, align 8, !dbg !931
  br label %33, !dbg !931

; <label>:33:                                     ; preds = %31, %23
  %34 = load i8*, i8** %2, align 8, !dbg !932
  ret i8* %34, !dbg !932
}

; Function Attrs: nounwind
declare i64 @sendfile(i32, i32, i64*, i64) #4

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local void @process(i32, %struct.sockaddr_in*) #0 !dbg !933 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.sockaddr_in*, align 8
  %5 = alloca %struct.http_request, align 8
  %6 = alloca %struct.stat, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !936, metadata !DIExpression()), !dbg !937
  store %struct.sockaddr_in* %1, %struct.sockaddr_in** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in** %4, metadata !938, metadata !DIExpression()), !dbg !939
  call void @llvm.dbg.declare(metadata %struct.http_request* %5, metadata !940, metadata !DIExpression()), !dbg !941
  %11 = load i32, i32* %3, align 4, !dbg !942
  call void @parse_request(i32 %11, %struct.http_request* %5), !dbg !943
  call void @llvm.dbg.declare(metadata %struct.stat* %6, metadata !944, metadata !DIExpression()), !dbg !945
  call void @llvm.dbg.declare(metadata i32* %7, metadata !946, metadata !DIExpression()), !dbg !947
  store i32 200, i32* %7, align 4, !dbg !947
  call void @llvm.dbg.declare(metadata i32* %8, metadata !948, metadata !DIExpression()), !dbg !949
  %12 = getelementptr inbounds %struct.http_request, %struct.http_request* %5, i32 0, i32 0, !dbg !950
  %13 = getelementptr inbounds [512 x i8], [512 x i8]* %12, i32 0, i32 0, !dbg !951
  %14 = call i32 (i8*, i32, ...) @open(i8* %13, i32 0, i32 0), !dbg !952
  store i32 %14, i32* %8, align 4, !dbg !949
  %15 = load i32, i32* %8, align 4, !dbg !953
  %16 = icmp sle i32 %15, 0, !dbg !955
  br i1 %16, label %17, label %21, !dbg !956

; <label>:17:                                     ; preds = %2
  store i32 404, i32* %7, align 4, !dbg !957
  call void @llvm.dbg.declare(metadata i8** %9, metadata !959, metadata !DIExpression()), !dbg !960
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.52, i32 0, i32 0), i8** %9, align 8, !dbg !960
  %18 = load i32, i32* %3, align 4, !dbg !961
  %19 = load i32, i32* %7, align 4, !dbg !962
  %20 = load i8*, i8** %9, align 8, !dbg !963
  call void @client_error(i32 %18, i32 %19, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.53, i32 0, i32 0), i8* %20), !dbg !964
  br label %64, !dbg !965

; <label>:21:                                     ; preds = %2
  %22 = load i32, i32* %8, align 4, !dbg !966
  %23 = call i32 @fstat(i32 %22, %struct.stat* %6) #9, !dbg !968
  %24 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 3, !dbg !969
  %25 = load i32, i32* %24, align 8, !dbg !969
  %26 = and i32 %25, 61440, !dbg !969
  %27 = icmp eq i32 %26, 32768, !dbg !969
  br i1 %27, label %28, label %46, !dbg !971

; <label>:28:                                     ; preds = %21
  %29 = getelementptr inbounds %struct.http_request, %struct.http_request* %5, i32 0, i32 2, !dbg !972
  %30 = load i64, i64* %29, align 8, !dbg !972
  %31 = icmp eq i64 %30, 0, !dbg !975
  br i1 %31, label %32, label %36, !dbg !976

; <label>:32:                                     ; preds = %28
  %33 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 8, !dbg !977
  %34 = load i64, i64* %33, align 8, !dbg !977
  %35 = getelementptr inbounds %struct.http_request, %struct.http_request* %5, i32 0, i32 2, !dbg !979
  store i64 %34, i64* %35, align 8, !dbg !980
  br label %36, !dbg !981

; <label>:36:                                     ; preds = %32, %28
  %37 = getelementptr inbounds %struct.http_request, %struct.http_request* %5, i32 0, i32 1, !dbg !982
  %38 = load i64, i64* %37, align 8, !dbg !982
  %39 = icmp sgt i64 %38, 0, !dbg !984
  br i1 %39, label %40, label %41, !dbg !985

; <label>:40:                                     ; preds = %36
  store i32 206, i32* %7, align 4, !dbg !986
  br label %41, !dbg !988

; <label>:41:                                     ; preds = %40, %36
  %42 = load i32, i32* %3, align 4, !dbg !989
  %43 = load i32, i32* %8, align 4, !dbg !990
  %44 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 8, !dbg !991
  %45 = load i64, i64* %44, align 8, !dbg !991
  call void @serve_static(i32 %42, i32 %43, %struct.http_request* %5, i64 %45), !dbg !992
  br label %61, !dbg !993

; <label>:46:                                     ; preds = %21
  %47 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 3, !dbg !994
  %48 = load i32, i32* %47, align 8, !dbg !994
  %49 = and i32 %48, 61440, !dbg !994
  %50 = icmp eq i32 %49, 16384, !dbg !994
  br i1 %50, label %51, label %56, !dbg !996

; <label>:51:                                     ; preds = %46
  store i32 200, i32* %7, align 4, !dbg !997
  %52 = load i32, i32* %3, align 4, !dbg !999
  %53 = load i32, i32* %8, align 4, !dbg !1000
  %54 = getelementptr inbounds %struct.http_request, %struct.http_request* %5, i32 0, i32 0, !dbg !1001
  %55 = getelementptr inbounds [512 x i8], [512 x i8]* %54, i32 0, i32 0, !dbg !1002
  call void @handle_directory_request(i32 %52, i32 %53, i8* %55), !dbg !1003
  br label %60, !dbg !1004

; <label>:56:                                     ; preds = %46
  store i32 400, i32* %7, align 4, !dbg !1005
  call void @llvm.dbg.declare(metadata i8** %10, metadata !1007, metadata !DIExpression()), !dbg !1008
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.54, i32 0, i32 0), i8** %10, align 8, !dbg !1008
  %57 = load i32, i32* %3, align 4, !dbg !1009
  %58 = load i32, i32* %7, align 4, !dbg !1010
  %59 = load i8*, i8** %10, align 8, !dbg !1011
  call void @client_error(i32 %57, i32 %58, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i32 0, i32 0), i8* %59), !dbg !1012
  br label %60

; <label>:60:                                     ; preds = %56, %51
  br label %61

; <label>:61:                                     ; preds = %60, %41
  %62 = load i32, i32* %8, align 4, !dbg !1013
  %63 = call i32 @close(i32 %62), !dbg !1014
  br label %64

; <label>:64:                                     ; preds = %61, %17
  %65 = load i32, i32* %7, align 4, !dbg !1015
  %66 = load %struct.sockaddr_in*, %struct.sockaddr_in** %4, align 8, !dbg !1016
  call void @log_access(i32 %65, %struct.sockaddr_in* %66, %struct.http_request* %5), !dbg !1017
  ret void, !dbg !1018
}

declare i32 @open(i8*, i32, ...) #2

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local i32 @main(i32, i8**) #0 !dbg !1019 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca %struct.sockaddr_in, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1023, metadata !DIExpression()), !dbg !1024
  store i8** %1, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !1025, metadata !DIExpression()), !dbg !1026
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in* %6, metadata !1027, metadata !DIExpression()), !dbg !1028
  call void @llvm.dbg.declare(metadata i32* %7, metadata !1029, metadata !DIExpression()), !dbg !1030
  store i32 9999, i32* %7, align 4, !dbg !1030
  call void @llvm.dbg.declare(metadata i32* %8, metadata !1031, metadata !DIExpression()), !dbg !1032
  call void @llvm.dbg.declare(metadata i32* %9, metadata !1033, metadata !DIExpression()), !dbg !1034
  call void @llvm.dbg.declare(metadata i32* %10, metadata !1035, metadata !DIExpression()), !dbg !1038
  store i32 16, i32* %10, align 4, !dbg !1038
  %11 = load i32, i32* %4, align 4, !dbg !1039
  %12 = icmp eq i32 %11, 2, !dbg !1041
  br i1 %12, label %13, label %18, !dbg !1042

; <label>:13:                                     ; preds = %2
  %14 = load i8**, i8*** %5, align 8, !dbg !1043
  %15 = getelementptr inbounds i8*, i8** %14, i64 1, !dbg !1043
  %16 = load i8*, i8** %15, align 8, !dbg !1043
  %17 = call i32 @atoi(i8* %16) #10, !dbg !1045
  store i32 %17, i32* %7, align 4, !dbg !1046
  br label %37, !dbg !1047

; <label>:18:                                     ; preds = %2
  %19 = load i32, i32* %4, align 4, !dbg !1048
  %20 = icmp eq i32 %19, 3, !dbg !1050
  br i1 %20, label %21, label %36, !dbg !1051

; <label>:21:                                     ; preds = %18
  %22 = load i8**, i8*** %5, align 8, !dbg !1052
  %23 = getelementptr inbounds i8*, i8** %22, i64 2, !dbg !1052
  %24 = load i8*, i8** %23, align 8, !dbg !1052
  %25 = call i32 @atoi(i8* %24) #10, !dbg !1054
  store i32 %25, i32* %7, align 4, !dbg !1055
  %26 = load i8**, i8*** %5, align 8, !dbg !1056
  %27 = getelementptr inbounds i8*, i8** %26, i64 1, !dbg !1056
  %28 = load i8*, i8** %27, align 8, !dbg !1056
  %29 = call i32 @chdir(i8* %28) #9, !dbg !1058
  %30 = icmp ne i32 %29, 0, !dbg !1059
  br i1 %30, label %31, label %35, !dbg !1060

; <label>:31:                                     ; preds = %21
  %32 = load i8**, i8*** %5, align 8, !dbg !1061
  %33 = getelementptr inbounds i8*, i8** %32, i64 1, !dbg !1061
  %34 = load i8*, i8** %33, align 8, !dbg !1061
  call void @perror(i8* %34), !dbg !1063
  call void @exit(i32 1) #11, !dbg !1064
  unreachable, !dbg !1064

; <label>:35:                                     ; preds = %21
  br label %36, !dbg !1065

; <label>:36:                                     ; preds = %35, %18
  br label %37

; <label>:37:                                     ; preds = %36, %13
  %38 = load i32, i32* %7, align 4, !dbg !1066
  %39 = call i32 @open_listenfd(i32 %38), !dbg !1067
  store i32 %39, i32* %8, align 4, !dbg !1068
  %40 = load i32, i32* %8, align 4, !dbg !1069
  %41 = icmp sgt i32 %40, 0, !dbg !1071
  br i1 %41, label %42, label %46, !dbg !1072

; <label>:42:                                     ; preds = %37
  %43 = load i32, i32* %7, align 4, !dbg !1073
  %44 = load i32, i32* %8, align 4, !dbg !1075
  %45 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.56, i32 0, i32 0), i32 %43, i32 %44), !dbg !1076
  br label %48, !dbg !1077

; <label>:46:                                     ; preds = %37
  call void @perror(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 0)), !dbg !1078
  %47 = load i32, i32* %8, align 4, !dbg !1080
  call void @exit(i32 %47) #11, !dbg !1081
  unreachable, !dbg !1081

; <label>:48:                                     ; preds = %42
  %49 = call void (i32)* @signal(i32 13, void (i32)* inttoptr (i64 1 to void (i32)*)) #9, !dbg !1082
  br label %50, !dbg !1083

; <label>:50:                                     ; preds = %48, %50
  %51 = load i32, i32* %8, align 4, !dbg !1084
  %52 = bitcast %struct.sockaddr_in* %6 to %struct.sockaddr*, !dbg !1086
  %53 = call i32 @accept(i32 %51, %struct.sockaddr* %52, i32* %10), !dbg !1087
  store i32 %53, i32* %9, align 4, !dbg !1088
  %54 = load i32, i32* %9, align 4, !dbg !1089
  call void @process(i32 %54, %struct.sockaddr_in* %6), !dbg !1090
  %55 = load i32, i32* %9, align 4, !dbg !1091
  %56 = call i32 @close(i32 %55), !dbg !1092
  br label %50, !dbg !1083, !llvm.loop !1093
                                                  ; No predecessors!
  %58 = load i32, i32* %3, align 4, !dbg !1095
  ret i32 %58, !dbg !1095
}

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #5

; Function Attrs: nounwind
declare i32 @chdir(i8*) #4

; Function Attrs: noreturn nounwind
declare void @exit(i32) #7

; Function Attrs: nounwind
declare void (i32)* @signal(i32, void (i32)*) #4

declare i32 @accept(i32, %struct.sockaddr*, i32*) #2

declare i64 @read(i32, i8*, i64) #2

; Function Attrs: nounwind readonly
declare i8* @strrchr(i8*, i32) #5

attributes #0 = { noinline nounwind sspstrong uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }
attributes #11 = { noreturn nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!63, !64, !65, !66, !67}
!llvm.ident = !{!68}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "meme_types", scope: !2, file: !3, line: 43, type: !53, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 8.0.0 (tags/RELEASE_800/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !18, globals: !49, nameTableKind: None)
!3 = !DIFile(filename: "tiny.c", directory: "/root/hydrogen/TestPrograms/TinyWebServer/TWS-Bug-2")
!4 = !{!5}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__socket_type", file: !6, line: 24, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "/usr/include/bits/socket_type.h", directory: "")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17}
!9 = !DIEnumerator(name: "SOCK_STREAM", value: 1, isUnsigned: true)
!10 = !DIEnumerator(name: "SOCK_DGRAM", value: 2, isUnsigned: true)
!11 = !DIEnumerator(name: "SOCK_RAW", value: 3, isUnsigned: true)
!12 = !DIEnumerator(name: "SOCK_RDM", value: 4, isUnsigned: true)
!13 = !DIEnumerator(name: "SOCK_SEQPACKET", value: 5, isUnsigned: true)
!14 = !DIEnumerator(name: "SOCK_DCCP", value: 6, isUnsigned: true)
!15 = !DIEnumerator(name: "SOCK_PACKET", value: 10, isUnsigned: true)
!16 = !DIEnumerator(name: "SOCK_CLOEXEC", value: 524288, isUnsigned: true)
!17 = !DIEnumerator(name: "SOCK_NONBLOCK", value: 2048, isUnsigned: true)
!18 = !{!19, !20, !21, !23, !29, !30, !40, !43}
!19 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!21 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64)
!22 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!23 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_addr_t", file: !24, line: 30, baseType: !25)
!24 = !DIFile(filename: "/usr/include/netinet/in.h", directory: "")
!25 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !26, line: 26, baseType: !27)
!26 = !DIFile(filename: "/usr/include/bits/stdint-uintn.h", directory: "")
!27 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !28, line: 42, baseType: !7)
!28 = !DIFile(filename: "/usr/include/bits/types.h", directory: "")
!29 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 64)
!31 = !DIDerivedType(tag: DW_TAG_typedef, name: "SA", file: !3, line: 30, baseType: !32)
!32 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !33, line: 178, size: 128, elements: !34)
!33 = !DIFile(filename: "/usr/include/bits/socket.h", directory: "")
!34 = !{!35, !38}
!35 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !32, file: !33, line: 180, baseType: !36, size: 16)
!36 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !37, line: 28, baseType: !29)
!37 = !DIFile(filename: "/usr/include/bits/sockaddr.h", directory: "")
!38 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !32, file: !33, line: 181, baseType: !39, size: 112, offset: 16)
!39 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 112, elements: !41)
!40 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!41 = !{!42}
!42 = !DISubrange(count: 14)
!43 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !44, line: 72, baseType: !45)
!44 = !DIFile(filename: "/usr/include/signal.h", directory: "")
!45 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !46, size: 64)
!46 = !DISubroutineType(types: !47)
!47 = !{null, !48}
!48 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!49 = !{!0, !50}
!50 = !DIGlobalVariableExpression(var: !51, expr: !DIExpression())
!51 = distinct !DIGlobalVariable(name: "default_mime_type", scope: !2, file: !3, line: 59, type: !52, isLocal: false, isDefinition: true)
!52 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 64)
!53 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 1664, elements: !61)
!54 = !DIDerivedType(tag: DW_TAG_typedef, name: "mime_map", file: !3, line: 41, baseType: !55)
!55 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 38, size: 128, elements: !56)
!56 = !{!57, !60}
!57 = !DIDerivedType(tag: DW_TAG_member, name: "extension", scope: !55, file: !3, line: 39, baseType: !58, size: 64)
!58 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !59, size: 64)
!59 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !40)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !55, file: !3, line: 40, baseType: !58, size: 64, offset: 64)
!61 = !{!62}
!62 = !DISubrange(count: 13)
!63 = !{i32 2, !"Dwarf Version", i32 4}
!64 = !{i32 2, !"Debug Info Version", i32 3}
!65 = !{i32 1, !"wchar_size", i32 4}
!66 = !{i32 7, !"PIC Level", i32 2}
!67 = !{i32 7, !"PIE Level", i32 2}
!68 = !{!"clang version 8.0.0 (tags/RELEASE_800/final)"}
!69 = distinct !DISubprogram(name: "rio_readinitb", scope: !3, file: !3, line: 61, type: !70, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !83)
!70 = !DISubroutineType(types: !71)
!71 = !{null, !72, !48}
!72 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !73, size: 64)
!73 = !DIDerivedType(tag: DW_TAG_typedef, name: "rio_t", file: !3, line: 27, baseType: !74)
!74 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 22, size: 8320, elements: !75)
!75 = !{!76, !77, !78, !79}
!76 = !DIDerivedType(tag: DW_TAG_member, name: "rio_fd", scope: !74, file: !3, line: 23, baseType: !48, size: 32)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "rio_cnt", scope: !74, file: !3, line: 24, baseType: !48, size: 32, offset: 32)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "rio_bufptr", scope: !74, file: !3, line: 25, baseType: !52, size: 64, offset: 64)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "rio_buf", scope: !74, file: !3, line: 26, baseType: !80, size: 8192, offset: 128)
!80 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 8192, elements: !81)
!81 = !{!82}
!82 = !DISubrange(count: 1024)
!83 = !{}
!84 = !DILocalVariable(name: "rp", arg: 1, scope: !69, file: !3, line: 61, type: !72)
!85 = !DILocation(line: 61, column: 27, scope: !69)
!86 = !DILocalVariable(name: "fd", arg: 2, scope: !69, file: !3, line: 61, type: !48)
!87 = !DILocation(line: 61, column: 35, scope: !69)
!88 = !DILocation(line: 62, column: 18, scope: !69)
!89 = !DILocation(line: 62, column: 5, scope: !69)
!90 = !DILocation(line: 62, column: 9, scope: !69)
!91 = !DILocation(line: 62, column: 16, scope: !69)
!92 = !DILocation(line: 63, column: 5, scope: !69)
!93 = !DILocation(line: 63, column: 9, scope: !69)
!94 = !DILocation(line: 63, column: 17, scope: !69)
!95 = !DILocation(line: 64, column: 22, scope: !69)
!96 = !DILocation(line: 64, column: 26, scope: !69)
!97 = !DILocation(line: 64, column: 5, scope: !69)
!98 = !DILocation(line: 64, column: 9, scope: !69)
!99 = !DILocation(line: 64, column: 20, scope: !69)
!100 = !DILocation(line: 65, column: 1, scope: !69)
!101 = distinct !DISubprogram(name: "writen", scope: !3, file: !3, line: 67, type: !102, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !83)
!102 = !DISubroutineType(types: !103)
!103 = !{!104, !48, !20, !108}
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !105, line: 108, baseType: !106)
!105 = !DIFile(filename: "/usr/include/sys/types.h", directory: "")
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !28, line: 193, baseType: !107)
!107 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !109, line: 62, baseType: !110)
!109 = !DIFile(filename: "/usr/lib/clang/8.0.0/include/stddef.h", directory: "")
!110 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!111 = !DILocalVariable(name: "fd", arg: 1, scope: !101, file: !3, line: 67, type: !48)
!112 = !DILocation(line: 67, column: 20, scope: !101)
!113 = !DILocalVariable(name: "usrbuf", arg: 2, scope: !101, file: !3, line: 67, type: !20)
!114 = !DILocation(line: 67, column: 30, scope: !101)
!115 = !DILocalVariable(name: "n", arg: 3, scope: !101, file: !3, line: 67, type: !108)
!116 = !DILocation(line: 67, column: 45, scope: !101)
!117 = !DILocalVariable(name: "nleft", scope: !101, file: !3, line: 68, type: !108)
!118 = !DILocation(line: 68, column: 12, scope: !101)
!119 = !DILocation(line: 68, column: 20, scope: !101)
!120 = !DILocalVariable(name: "nwritten", scope: !101, file: !3, line: 69, type: !104)
!121 = !DILocation(line: 69, column: 13, scope: !101)
!122 = !DILocalVariable(name: "bufp", scope: !101, file: !3, line: 70, type: !52)
!123 = !DILocation(line: 70, column: 11, scope: !101)
!124 = !DILocation(line: 70, column: 18, scope: !101)
!125 = !DILocation(line: 72, column: 5, scope: !101)
!126 = !DILocation(line: 72, column: 12, scope: !101)
!127 = !DILocation(line: 72, column: 18, scope: !101)
!128 = !DILocation(line: 73, column: 31, scope: !129)
!129 = distinct !DILexicalBlock(scope: !130, file: !3, line: 73, column: 13)
!130 = distinct !DILexicalBlock(scope: !101, file: !3, line: 72, column: 22)
!131 = !DILocation(line: 73, column: 35, scope: !129)
!132 = !DILocation(line: 73, column: 41, scope: !129)
!133 = !DILocation(line: 73, column: 25, scope: !129)
!134 = !DILocation(line: 73, column: 23, scope: !129)
!135 = !DILocation(line: 73, column: 49, scope: !129)
!136 = !DILocation(line: 73, column: 13, scope: !130)
!137 = !DILocation(line: 74, column: 17, scope: !138)
!138 = distinct !DILexicalBlock(scope: !139, file: !3, line: 74, column: 17)
!139 = distinct !DILexicalBlock(scope: !129, file: !3, line: 73, column: 54)
!140 = !DILocation(line: 74, column: 23, scope: !138)
!141 = !DILocation(line: 74, column: 17, scope: !139)
!142 = !DILocation(line: 75, column: 26, scope: !138)
!143 = !DILocation(line: 75, column: 17, scope: !138)
!144 = !DILocation(line: 77, column: 17, scope: !138)
!145 = !DILocation(line: 78, column: 9, scope: !139)
!146 = !DILocation(line: 79, column: 18, scope: !130)
!147 = !DILocation(line: 79, column: 15, scope: !130)
!148 = !DILocation(line: 80, column: 17, scope: !130)
!149 = !DILocation(line: 80, column: 14, scope: !130)
!150 = distinct !{!150, !125, !151}
!151 = !DILocation(line: 81, column: 5, scope: !101)
!152 = !DILocation(line: 82, column: 12, scope: !101)
!153 = !DILocation(line: 82, column: 5, scope: !101)
!154 = !DILocation(line: 83, column: 1, scope: !101)
!155 = distinct !DISubprogram(name: "rio_readlineb", scope: !3, file: !3, line: 124, type: !156, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !83)
!156 = !DISubroutineType(types: !157)
!157 = !{!104, !72, !20, !108}
!158 = !DILocalVariable(name: "rp", arg: 1, scope: !155, file: !3, line: 124, type: !72)
!159 = !DILocation(line: 124, column: 30, scope: !155)
!160 = !DILocalVariable(name: "usrbuf", arg: 2, scope: !155, file: !3, line: 124, type: !20)
!161 = !DILocation(line: 124, column: 40, scope: !155)
!162 = !DILocalVariable(name: "maxlen", arg: 3, scope: !155, file: !3, line: 124, type: !108)
!163 = !DILocation(line: 124, column: 55, scope: !155)
!164 = !DILocalVariable(name: "n", scope: !155, file: !3, line: 125, type: !48)
!165 = !DILocation(line: 125, column: 9, scope: !155)
!166 = !DILocalVariable(name: "rc", scope: !155, file: !3, line: 125, type: !48)
!167 = !DILocation(line: 125, column: 12, scope: !155)
!168 = !DILocalVariable(name: "c", scope: !155, file: !3, line: 126, type: !40)
!169 = !DILocation(line: 126, column: 10, scope: !155)
!170 = !DILocalVariable(name: "bufp", scope: !155, file: !3, line: 126, type: !52)
!171 = !DILocation(line: 126, column: 14, scope: !155)
!172 = !DILocation(line: 126, column: 21, scope: !155)
!173 = !DILocation(line: 128, column: 12, scope: !174)
!174 = distinct !DILexicalBlock(scope: !155, file: !3, line: 128, column: 5)
!175 = !DILocation(line: 128, column: 10, scope: !174)
!176 = !DILocation(line: 128, column: 17, scope: !177)
!177 = distinct !DILexicalBlock(scope: !174, file: !3, line: 128, column: 5)
!178 = !DILocation(line: 128, column: 21, scope: !177)
!179 = !DILocation(line: 128, column: 19, scope: !177)
!180 = !DILocation(line: 128, column: 5, scope: !174)
!181 = !DILocation(line: 129, column: 28, scope: !182)
!182 = distinct !DILexicalBlock(scope: !183, file: !3, line: 129, column: 13)
!183 = distinct !DILexicalBlock(scope: !177, file: !3, line: 128, column: 33)
!184 = !DILocation(line: 129, column: 19, scope: !182)
!185 = !DILocation(line: 129, column: 17, scope: !182)
!186 = !DILocation(line: 129, column: 40, scope: !182)
!187 = !DILocation(line: 129, column: 13, scope: !183)
!188 = !DILocation(line: 130, column: 23, scope: !189)
!189 = distinct !DILexicalBlock(scope: !182, file: !3, line: 129, column: 45)
!190 = !DILocation(line: 130, column: 18, scope: !189)
!191 = !DILocation(line: 130, column: 21, scope: !189)
!192 = !DILocation(line: 131, column: 17, scope: !193)
!193 = distinct !DILexicalBlock(scope: !189, file: !3, line: 131, column: 17)
!194 = !DILocation(line: 131, column: 19, scope: !193)
!195 = !DILocation(line: 131, column: 17, scope: !189)
!196 = !DILocation(line: 132, column: 17, scope: !193)
!197 = !DILocation(line: 133, column: 9, scope: !189)
!198 = !DILocation(line: 133, column: 20, scope: !199)
!199 = distinct !DILexicalBlock(scope: !182, file: !3, line: 133, column: 20)
!200 = !DILocation(line: 133, column: 23, scope: !199)
!201 = !DILocation(line: 133, column: 20, scope: !182)
!202 = !DILocation(line: 134, column: 17, scope: !203)
!203 = distinct !DILexicalBlock(scope: !204, file: !3, line: 134, column: 17)
!204 = distinct !DILexicalBlock(scope: !199, file: !3, line: 133, column: 28)
!205 = !DILocation(line: 134, column: 19, scope: !203)
!206 = !DILocation(line: 134, column: 17, scope: !204)
!207 = !DILocation(line: 135, column: 17, scope: !203)
!208 = !DILocation(line: 137, column: 17, scope: !203)
!209 = !DILocation(line: 139, column: 13, scope: !199)
!210 = !DILocation(line: 140, column: 5, scope: !183)
!211 = !DILocation(line: 128, column: 30, scope: !177)
!212 = !DILocation(line: 128, column: 5, scope: !177)
!213 = distinct !{!213, !180, !214}
!214 = !DILocation(line: 140, column: 5, scope: !174)
!215 = !DILocation(line: 141, column: 6, scope: !155)
!216 = !DILocation(line: 141, column: 11, scope: !155)
!217 = !DILocation(line: 142, column: 12, scope: !155)
!218 = !DILocation(line: 142, column: 5, scope: !155)
!219 = !DILocation(line: 143, column: 1, scope: !155)
!220 = distinct !DISubprogram(name: "rio_read", scope: !3, file: !3, line: 95, type: !221, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !83)
!221 = !DISubroutineType(types: !222)
!222 = !{!104, !72, !52, !108}
!223 = !DILocalVariable(name: "rp", arg: 1, scope: !220, file: !3, line: 95, type: !72)
!224 = !DILocation(line: 95, column: 32, scope: !220)
!225 = !DILocalVariable(name: "usrbuf", arg: 2, scope: !220, file: !3, line: 95, type: !52)
!226 = !DILocation(line: 95, column: 42, scope: !220)
!227 = !DILocalVariable(name: "n", arg: 3, scope: !220, file: !3, line: 95, type: !108)
!228 = !DILocation(line: 95, column: 57, scope: !220)
!229 = !DILocalVariable(name: "cnt", scope: !220, file: !3, line: 96, type: !48)
!230 = !DILocation(line: 96, column: 9, scope: !220)
!231 = !DILocation(line: 97, column: 5, scope: !220)
!232 = !DILocation(line: 97, column: 12, scope: !220)
!233 = !DILocation(line: 97, column: 16, scope: !220)
!234 = !DILocation(line: 97, column: 24, scope: !220)
!235 = !DILocation(line: 99, column: 28, scope: !236)
!236 = distinct !DILexicalBlock(scope: !220, file: !3, line: 97, column: 29)
!237 = !DILocation(line: 99, column: 32, scope: !236)
!238 = !DILocation(line: 99, column: 40, scope: !236)
!239 = !DILocation(line: 99, column: 44, scope: !236)
!240 = !DILocation(line: 99, column: 23, scope: !236)
!241 = !DILocation(line: 99, column: 9, scope: !236)
!242 = !DILocation(line: 99, column: 13, scope: !236)
!243 = !DILocation(line: 99, column: 21, scope: !236)
!244 = !DILocation(line: 101, column: 13, scope: !245)
!245 = distinct !DILexicalBlock(scope: !236, file: !3, line: 101, column: 13)
!246 = !DILocation(line: 101, column: 17, scope: !245)
!247 = !DILocation(line: 101, column: 25, scope: !245)
!248 = !DILocation(line: 101, column: 13, scope: !236)
!249 = !DILocation(line: 102, column: 17, scope: !250)
!250 = distinct !DILexicalBlock(scope: !251, file: !3, line: 102, column: 17)
!251 = distinct !DILexicalBlock(scope: !245, file: !3, line: 101, column: 29)
!252 = !DILocation(line: 102, column: 23, scope: !250)
!253 = !DILocation(line: 102, column: 17, scope: !251)
!254 = !DILocation(line: 103, column: 17, scope: !250)
!255 = !DILocation(line: 104, column: 9, scope: !251)
!256 = !DILocation(line: 105, column: 18, scope: !257)
!257 = distinct !DILexicalBlock(scope: !245, file: !3, line: 105, column: 18)
!258 = !DILocation(line: 105, column: 22, scope: !257)
!259 = !DILocation(line: 105, column: 30, scope: !257)
!260 = !DILocation(line: 105, column: 18, scope: !245)
!261 = !DILocation(line: 106, column: 13, scope: !257)
!262 = !DILocation(line: 108, column: 30, scope: !257)
!263 = !DILocation(line: 108, column: 34, scope: !257)
!264 = !DILocation(line: 108, column: 13, scope: !257)
!265 = !DILocation(line: 108, column: 17, scope: !257)
!266 = !DILocation(line: 108, column: 28, scope: !257)
!267 = distinct !{!267, !231, !268}
!268 = !DILocation(line: 109, column: 5, scope: !220)
!269 = !DILocation(line: 112, column: 11, scope: !220)
!270 = !DILocation(line: 112, column: 9, scope: !220)
!271 = !DILocation(line: 113, column: 9, scope: !272)
!272 = distinct !DILexicalBlock(scope: !220, file: !3, line: 113, column: 9)
!273 = !DILocation(line: 113, column: 13, scope: !272)
!274 = !DILocation(line: 113, column: 23, scope: !272)
!275 = !DILocation(line: 113, column: 21, scope: !272)
!276 = !DILocation(line: 113, column: 9, scope: !220)
!277 = !DILocation(line: 114, column: 15, scope: !272)
!278 = !DILocation(line: 114, column: 19, scope: !272)
!279 = !DILocation(line: 114, column: 13, scope: !272)
!280 = !DILocation(line: 114, column: 9, scope: !272)
!281 = !DILocation(line: 115, column: 12, scope: !220)
!282 = !DILocation(line: 115, column: 20, scope: !220)
!283 = !DILocation(line: 115, column: 24, scope: !220)
!284 = !DILocation(line: 115, column: 36, scope: !220)
!285 = !DILocation(line: 115, column: 5, scope: !220)
!286 = !DILocation(line: 116, column: 23, scope: !220)
!287 = !DILocation(line: 116, column: 5, scope: !220)
!288 = !DILocation(line: 116, column: 9, scope: !220)
!289 = !DILocation(line: 116, column: 20, scope: !220)
!290 = !DILocation(line: 117, column: 20, scope: !220)
!291 = !DILocation(line: 117, column: 5, scope: !220)
!292 = !DILocation(line: 117, column: 9, scope: !220)
!293 = !DILocation(line: 117, column: 17, scope: !220)
!294 = !DILocation(line: 118, column: 12, scope: !220)
!295 = !DILocation(line: 118, column: 5, scope: !220)
!296 = !DILocation(line: 119, column: 1, scope: !220)
!297 = distinct !DISubprogram(name: "format_size", scope: !3, file: !3, line: 145, type: !298, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !83)
!298 = !DISubroutineType(types: !299)
!299 = !{null, !52, !300}
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 64)
!301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !302, line: 46, size: 1152, elements: !303)
!302 = !DIFile(filename: "/usr/include/bits/stat.h", directory: "")
!303 = !{!304, !306, !308, !310, !312, !314, !316, !317, !318, !320, !322, !324, !332, !333, !334}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !301, file: !302, line: 48, baseType: !305, size: 64)
!305 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !28, line: 145, baseType: !110)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !301, file: !302, line: 53, baseType: !307, size: 64, offset: 64)
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !28, line: 148, baseType: !110)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !301, file: !302, line: 61, baseType: !309, size: 64, offset: 128)
!309 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !28, line: 151, baseType: !110)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !301, file: !302, line: 62, baseType: !311, size: 32, offset: 192)
!311 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !28, line: 150, baseType: !7)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !301, file: !302, line: 64, baseType: !313, size: 32, offset: 224)
!313 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !28, line: 146, baseType: !7)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !301, file: !302, line: 65, baseType: !315, size: 32, offset: 256)
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !28, line: 147, baseType: !7)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !301, file: !302, line: 67, baseType: !48, size: 32, offset: 288)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !301, file: !302, line: 69, baseType: !305, size: 64, offset: 320)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !301, file: !302, line: 74, baseType: !319, size: 64, offset: 384)
!319 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !28, line: 152, baseType: !107)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !301, file: !302, line: 78, baseType: !321, size: 64, offset: 448)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !28, line: 174, baseType: !107)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !301, file: !302, line: 80, baseType: !323, size: 64, offset: 512)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !28, line: 179, baseType: !107)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !301, file: !302, line: 91, baseType: !325, size: 128, offset: 576)
!325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !326, line: 9, size: 128, elements: !327)
!326 = !DIFile(filename: "/usr/include/bits/types/struct_timespec.h", directory: "")
!327 = !{!328, !330}
!328 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !325, file: !326, line: 11, baseType: !329, size: 64)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !28, line: 160, baseType: !107)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !325, file: !326, line: 12, baseType: !331, size: 64, offset: 64)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !28, line: 196, baseType: !107)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !301, file: !302, line: 92, baseType: !325, size: 128, offset: 704)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !301, file: !302, line: 93, baseType: !325, size: 128, offset: 832)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !301, file: !302, line: 106, baseType: !335, size: 192, offset: 960)
!335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 192, elements: !336)
!336 = !{!337}
!337 = !DISubrange(count: 3)
!338 = !DILocalVariable(name: "buf", arg: 1, scope: !297, file: !3, line: 145, type: !52)
!339 = !DILocation(line: 145, column: 24, scope: !297)
!340 = !DILocalVariable(name: "stat", arg: 2, scope: !297, file: !3, line: 145, type: !300)
!341 = !DILocation(line: 145, column: 42, scope: !297)
!342 = !DILocation(line: 146, column: 8, scope: !343)
!343 = distinct !DILexicalBlock(scope: !297, file: !3, line: 146, column: 8)
!344 = !DILocation(line: 146, column: 8, scope: !297)
!345 = !DILocation(line: 147, column: 17, scope: !346)
!346 = distinct !DILexicalBlock(scope: !343, file: !3, line: 146, column: 31)
!347 = !DILocation(line: 147, column: 9, scope: !346)
!348 = !DILocation(line: 148, column: 5, scope: !346)
!349 = !DILocalVariable(name: "size", scope: !350, file: !3, line: 149, type: !351)
!350 = distinct !DILexicalBlock(scope: !343, file: !3, line: 148, column: 12)
!351 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !105, line: 85, baseType: !319)
!352 = !DILocation(line: 149, column: 15, scope: !350)
!353 = !DILocation(line: 149, column: 22, scope: !350)
!354 = !DILocation(line: 149, column: 28, scope: !350)
!355 = !DILocation(line: 150, column: 12, scope: !356)
!356 = distinct !DILexicalBlock(scope: !350, file: !3, line: 150, column: 12)
!357 = !DILocation(line: 150, column: 17, scope: !356)
!358 = !DILocation(line: 150, column: 12, scope: !350)
!359 = !DILocation(line: 151, column: 21, scope: !360)
!360 = distinct !DILexicalBlock(scope: !356, file: !3, line: 150, column: 24)
!361 = !DILocation(line: 151, column: 33, scope: !360)
!362 = !DILocation(line: 151, column: 13, scope: !360)
!363 = !DILocation(line: 152, column: 9, scope: !360)
!364 = !DILocation(line: 152, column: 20, scope: !365)
!365 = distinct !DILexicalBlock(scope: !356, file: !3, line: 152, column: 20)
!366 = !DILocation(line: 152, column: 25, scope: !365)
!367 = !DILocation(line: 152, column: 20, scope: !356)
!368 = !DILocation(line: 153, column: 21, scope: !369)
!369 = distinct !DILexicalBlock(scope: !365, file: !3, line: 152, column: 39)
!370 = !DILocation(line: 153, column: 43, scope: !369)
!371 = !DILocation(line: 153, column: 35, scope: !369)
!372 = !DILocation(line: 153, column: 48, scope: !369)
!373 = !DILocation(line: 153, column: 13, scope: !369)
!374 = !DILocation(line: 154, column: 9, scope: !369)
!375 = !DILocation(line: 154, column: 20, scope: !376)
!376 = distinct !DILexicalBlock(scope: !365, file: !3, line: 154, column: 20)
!377 = !DILocation(line: 154, column: 25, scope: !376)
!378 = !DILocation(line: 154, column: 20, scope: !365)
!379 = !DILocation(line: 155, column: 21, scope: !380)
!380 = distinct !DILexicalBlock(scope: !376, file: !3, line: 154, column: 46)
!381 = !DILocation(line: 155, column: 43, scope: !380)
!382 = !DILocation(line: 155, column: 35, scope: !380)
!383 = !DILocation(line: 155, column: 48, scope: !380)
!384 = !DILocation(line: 155, column: 55, scope: !380)
!385 = !DILocation(line: 155, column: 13, scope: !380)
!386 = !DILocation(line: 156, column: 9, scope: !380)
!387 = !DILocation(line: 157, column: 21, scope: !388)
!388 = distinct !DILexicalBlock(scope: !376, file: !3, line: 156, column: 16)
!389 = !DILocation(line: 157, column: 43, scope: !388)
!390 = !DILocation(line: 157, column: 35, scope: !388)
!391 = !DILocation(line: 157, column: 48, scope: !388)
!392 = !DILocation(line: 157, column: 55, scope: !388)
!393 = !DILocation(line: 157, column: 62, scope: !388)
!394 = !DILocation(line: 157, column: 13, scope: !388)
!395 = !DILocation(line: 160, column: 1, scope: !297)
!396 = distinct !DISubprogram(name: "handle_directory_request", scope: !3, file: !3, line: 162, type: !397, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !83)
!397 = !DISubroutineType(types: !398)
!398 = !{null, !48, !48, !52}
!399 = !DILocalVariable(name: "out_fd", arg: 1, scope: !396, file: !3, line: 162, type: !48)
!400 = !DILocation(line: 162, column: 35, scope: !396)
!401 = !DILocalVariable(name: "dir_fd", arg: 2, scope: !396, file: !3, line: 162, type: !48)
!402 = !DILocation(line: 162, column: 47, scope: !396)
!403 = !DILocalVariable(name: "filename", arg: 3, scope: !396, file: !3, line: 162, type: !52)
!404 = !DILocation(line: 162, column: 61, scope: !396)
!405 = !DILocalVariable(name: "buf", scope: !396, file: !3, line: 163, type: !80)
!406 = !DILocation(line: 163, column: 10, scope: !396)
!407 = !DILocalVariable(name: "m_time", scope: !396, file: !3, line: 163, type: !408)
!408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 256, elements: !409)
!409 = !{!410}
!410 = !DISubrange(count: 32)
!411 = !DILocation(line: 163, column: 24, scope: !396)
!412 = !DILocalVariable(name: "size", scope: !396, file: !3, line: 163, type: !413)
!413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 128, elements: !414)
!414 = !{!415}
!415 = !DISubrange(count: 16)
!416 = !DILocation(line: 163, column: 36, scope: !396)
!417 = !DILocalVariable(name: "statbuf", scope: !396, file: !3, line: 164, type: !301)
!418 = !DILocation(line: 164, column: 17, scope: !396)
!419 = !DILocation(line: 165, column: 13, scope: !396)
!420 = !DILocation(line: 165, column: 5, scope: !396)
!421 = !DILocation(line: 171, column: 12, scope: !396)
!422 = !DILocation(line: 171, column: 20, scope: !396)
!423 = !DILocation(line: 171, column: 32, scope: !396)
!424 = !DILocation(line: 171, column: 25, scope: !396)
!425 = !DILocation(line: 171, column: 5, scope: !396)
!426 = !DILocalVariable(name: "d", scope: !396, file: !3, line: 172, type: !427)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 64)
!428 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !429, line: 127, baseType: !430)
!429 = !DIFile(filename: "/usr/include/dirent.h", directory: "")
!430 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !429, line: 127, flags: DIFlagFwdDecl)
!431 = !DILocation(line: 172, column: 10, scope: !396)
!432 = !DILocation(line: 172, column: 24, scope: !396)
!433 = !DILocation(line: 172, column: 14, scope: !396)
!434 = !DILocalVariable(name: "dp", scope: !396, file: !3, line: 173, type: !435)
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64)
!436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !437, line: 22, size: 2240, elements: !438)
!437 = !DIFile(filename: "/usr/include/bits/dirent.h", directory: "")
!438 = !{!439, !440, !441, !442, !444}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !436, file: !437, line: 25, baseType: !307, size: 64)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !436, file: !437, line: 26, baseType: !319, size: 64, offset: 64)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !436, file: !437, line: 31, baseType: !29, size: 16, offset: 128)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !436, file: !437, line: 32, baseType: !443, size: 8, offset: 144)
!443 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !436, file: !437, line: 33, baseType: !445, size: 2048, offset: 152)
!445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 2048, elements: !446)
!446 = !{!447}
!447 = !DISubrange(count: 256)
!448 = !DILocation(line: 173, column: 20, scope: !396)
!449 = !DILocalVariable(name: "ffd", scope: !396, file: !3, line: 174, type: !48)
!450 = !DILocation(line: 174, column: 9, scope: !396)
!451 = !DILocation(line: 175, column: 5, scope: !396)
!452 = !DILocation(line: 175, column: 26, scope: !396)
!453 = !DILocation(line: 175, column: 18, scope: !396)
!454 = !DILocation(line: 175, column: 16, scope: !396)
!455 = !DILocation(line: 175, column: 30, scope: !396)
!456 = !DILocation(line: 176, column: 20, scope: !457)
!457 = distinct !DILexicalBlock(scope: !458, file: !3, line: 176, column: 12)
!458 = distinct !DILexicalBlock(scope: !396, file: !3, line: 175, column: 38)
!459 = !DILocation(line: 176, column: 24, scope: !457)
!460 = !DILocation(line: 176, column: 13, scope: !457)
!461 = !DILocation(line: 176, column: 37, scope: !457)
!462 = !DILocation(line: 176, column: 48, scope: !457)
!463 = !DILocation(line: 176, column: 52, scope: !457)
!464 = !DILocation(line: 176, column: 41, scope: !457)
!465 = !DILocation(line: 176, column: 12, scope: !458)
!466 = !DILocation(line: 177, column: 13, scope: !467)
!467 = distinct !DILexicalBlock(scope: !457, file: !3, line: 176, column: 66)
!468 = distinct !{!468, !451, !469}
!469 = !DILocation(line: 194, column: 5, scope: !396)
!470 = !DILocation(line: 179, column: 27, scope: !471)
!471 = distinct !DILexicalBlock(scope: !458, file: !3, line: 179, column: 13)
!472 = !DILocation(line: 179, column: 35, scope: !471)
!473 = !DILocation(line: 179, column: 39, scope: !471)
!474 = !DILocation(line: 179, column: 20, scope: !471)
!475 = !DILocation(line: 179, column: 18, scope: !471)
!476 = !DILocation(line: 179, column: 58, scope: !471)
!477 = !DILocation(line: 179, column: 13, scope: !458)
!478 = !DILocation(line: 180, column: 20, scope: !479)
!479 = distinct !DILexicalBlock(scope: !471, file: !3, line: 179, column: 64)
!480 = !DILocation(line: 180, column: 24, scope: !479)
!481 = !DILocation(line: 180, column: 13, scope: !479)
!482 = !DILocation(line: 181, column: 13, scope: !479)
!483 = !DILocation(line: 183, column: 15, scope: !458)
!484 = !DILocation(line: 183, column: 9, scope: !458)
!485 = !DILocation(line: 184, column: 18, scope: !458)
!486 = !DILocation(line: 185, column: 55, scope: !458)
!487 = !DILocation(line: 185, column: 36, scope: !458)
!488 = !DILocation(line: 184, column: 9, scope: !458)
!489 = !DILocation(line: 186, column: 21, scope: !458)
!490 = !DILocation(line: 186, column: 9, scope: !458)
!491 = !DILocation(line: 187, column: 12, scope: !492)
!492 = distinct !DILexicalBlock(scope: !458, file: !3, line: 187, column: 12)
!493 = !DILocation(line: 187, column: 37, scope: !492)
!494 = !DILocation(line: 187, column: 40, scope: !492)
!495 = !DILocation(line: 187, column: 12, scope: !458)
!496 = !DILocalVariable(name: "d", scope: !497, file: !3, line: 188, type: !52)
!497 = distinct !DILexicalBlock(scope: !492, file: !3, line: 187, column: 65)
!498 = !DILocation(line: 188, column: 19, scope: !497)
!499 = !DILocation(line: 188, column: 23, scope: !497)
!500 = !DILocation(line: 189, column: 21, scope: !497)
!501 = !DILocation(line: 190, column: 21, scope: !497)
!502 = !DILocation(line: 190, column: 25, scope: !497)
!503 = !DILocation(line: 190, column: 33, scope: !497)
!504 = !DILocation(line: 190, column: 36, scope: !497)
!505 = !DILocation(line: 190, column: 40, scope: !497)
!506 = !DILocation(line: 190, column: 48, scope: !497)
!507 = !DILocation(line: 190, column: 51, scope: !497)
!508 = !DILocation(line: 190, column: 59, scope: !497)
!509 = !DILocation(line: 189, column: 13, scope: !497)
!510 = !DILocation(line: 191, column: 20, scope: !497)
!511 = !DILocation(line: 191, column: 28, scope: !497)
!512 = !DILocation(line: 191, column: 40, scope: !497)
!513 = !DILocation(line: 191, column: 33, scope: !497)
!514 = !DILocation(line: 191, column: 13, scope: !497)
!515 = !DILocation(line: 192, column: 9, scope: !497)
!516 = !DILocation(line: 193, column: 15, scope: !458)
!517 = !DILocation(line: 193, column: 9, scope: !458)
!518 = !DILocation(line: 195, column: 13, scope: !396)
!519 = !DILocation(line: 195, column: 5, scope: !396)
!520 = !DILocation(line: 196, column: 12, scope: !396)
!521 = !DILocation(line: 196, column: 20, scope: !396)
!522 = !DILocation(line: 196, column: 32, scope: !396)
!523 = !DILocation(line: 196, column: 25, scope: !396)
!524 = !DILocation(line: 196, column: 5, scope: !396)
!525 = !DILocation(line: 197, column: 14, scope: !396)
!526 = !DILocation(line: 197, column: 5, scope: !396)
!527 = !DILocation(line: 198, column: 1, scope: !396)
!528 = distinct !DISubprogram(name: "open_listenfd", scope: !3, file: !3, line: 215, type: !529, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !83)
!529 = !DISubroutineType(types: !530)
!530 = !{!48, !48}
!531 = !DILocalVariable(name: "port", arg: 1, scope: !528, file: !3, line: 215, type: !48)
!532 = !DILocation(line: 215, column: 23, scope: !528)
!533 = !DILocalVariable(name: "listenfd", scope: !528, file: !3, line: 216, type: !48)
!534 = !DILocation(line: 216, column: 9, scope: !528)
!535 = !DILocalVariable(name: "optval", scope: !528, file: !3, line: 216, type: !48)
!536 = !DILocation(line: 216, column: 19, scope: !528)
!537 = !DILocalVariable(name: "serveraddr", scope: !528, file: !3, line: 217, type: !538)
!538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !24, line: 237, size: 128, elements: !539)
!539 = !{!540, !541, !545, !549}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !538, file: !24, line: 239, baseType: !36, size: 16)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !538, file: !24, line: 240, baseType: !542, size: 16, offset: 16)
!542 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_port_t", file: !24, line: 119, baseType: !543)
!543 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !26, line: 25, baseType: !544)
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !28, line: 40, baseType: !29)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !538, file: !24, line: 241, baseType: !546, size: 32, offset: 32)
!546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !24, line: 31, size: 32, elements: !547)
!547 = !{!548}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !546, file: !24, line: 33, baseType: !23, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "sin_zero", scope: !538, file: !24, line: 244, baseType: !550, size: 64, offset: 64)
!550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 64, elements: !551)
!551 = !{!552}
!552 = !DISubrange(count: 8)
!553 = !DILocation(line: 217, column: 24, scope: !528)
!554 = !DILocation(line: 220, column: 21, scope: !555)
!555 = distinct !DILexicalBlock(scope: !528, file: !3, line: 220, column: 9)
!556 = !DILocation(line: 220, column: 19, scope: !555)
!557 = !DILocation(line: 220, column: 54, scope: !555)
!558 = !DILocation(line: 220, column: 9, scope: !528)
!559 = !DILocation(line: 221, column: 9, scope: !555)
!560 = !DILocation(line: 224, column: 20, scope: !561)
!561 = distinct !DILexicalBlock(scope: !528, file: !3, line: 224, column: 9)
!562 = !DILocation(line: 225, column: 20, scope: !561)
!563 = !DILocation(line: 224, column: 9, scope: !561)
!564 = !DILocation(line: 225, column: 57, scope: !561)
!565 = !DILocation(line: 224, column: 9, scope: !528)
!566 = !DILocation(line: 226, column: 9, scope: !561)
!567 = !DILocation(line: 230, column: 20, scope: !568)
!568 = distinct !DILexicalBlock(scope: !528, file: !3, line: 230, column: 9)
!569 = !DILocation(line: 231, column: 20, scope: !568)
!570 = !DILocation(line: 230, column: 9, scope: !568)
!571 = !DILocation(line: 231, column: 57, scope: !568)
!572 = !DILocation(line: 230, column: 9, scope: !528)
!573 = !DILocation(line: 232, column: 9, scope: !568)
!574 = !DILocation(line: 236, column: 5, scope: !528)
!575 = !DILocation(line: 237, column: 16, scope: !528)
!576 = !DILocation(line: 237, column: 27, scope: !528)
!577 = !DILocation(line: 238, column: 34, scope: !528)
!578 = !DILocation(line: 238, column: 16, scope: !528)
!579 = !DILocation(line: 238, column: 25, scope: !528)
!580 = !DILocation(line: 238, column: 32, scope: !528)
!581 = !DILocation(line: 239, column: 49, scope: !528)
!582 = !DILocation(line: 239, column: 33, scope: !528)
!583 = !DILocation(line: 239, column: 27, scope: !528)
!584 = !DILocation(line: 239, column: 16, scope: !528)
!585 = !DILocation(line: 239, column: 25, scope: !528)
!586 = !DILocation(line: 240, column: 14, scope: !587)
!587 = distinct !DILexicalBlock(scope: !528, file: !3, line: 240, column: 9)
!588 = !DILocation(line: 240, column: 24, scope: !587)
!589 = !DILocation(line: 240, column: 9, scope: !587)
!590 = !DILocation(line: 240, column: 63, scope: !587)
!591 = !DILocation(line: 240, column: 9, scope: !528)
!592 = !DILocation(line: 241, column: 9, scope: !587)
!593 = !DILocation(line: 244, column: 16, scope: !594)
!594 = distinct !DILexicalBlock(scope: !528, file: !3, line: 244, column: 9)
!595 = !DILocation(line: 244, column: 9, scope: !594)
!596 = !DILocation(line: 244, column: 35, scope: !594)
!597 = !DILocation(line: 244, column: 9, scope: !528)
!598 = !DILocation(line: 245, column: 9, scope: !594)
!599 = !DILocation(line: 246, column: 12, scope: !528)
!600 = !DILocation(line: 246, column: 5, scope: !528)
!601 = !DILocation(line: 247, column: 1, scope: !528)
!602 = distinct !DISubprogram(name: "url_decode", scope: !3, file: !3, line: 249, type: !603, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !83)
!603 = !DISubroutineType(types: !604)
!604 = !{null, !52, !52, !48}
!605 = !DILocalVariable(name: "src", arg: 1, scope: !602, file: !3, line: 249, type: !52)
!606 = !DILocation(line: 249, column: 23, scope: !602)
!607 = !DILocalVariable(name: "dest", arg: 2, scope: !602, file: !3, line: 249, type: !52)
!608 = !DILocation(line: 249, column: 34, scope: !602)
!609 = !DILocalVariable(name: "max", arg: 3, scope: !602, file: !3, line: 249, type: !48)
!610 = !DILocation(line: 249, column: 44, scope: !602)
!611 = !DILocalVariable(name: "p", scope: !602, file: !3, line: 250, type: !52)
!612 = !DILocation(line: 250, column: 11, scope: !602)
!613 = !DILocation(line: 250, column: 15, scope: !602)
!614 = !DILocalVariable(name: "code", scope: !602, file: !3, line: 251, type: !615)
!615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 24, elements: !336)
!616 = !DILocation(line: 251, column: 10, scope: !602)
!617 = !DILocation(line: 252, column: 5, scope: !602)
!618 = !DILocation(line: 252, column: 12, scope: !602)
!619 = !DILocation(line: 252, column: 11, scope: !602)
!620 = !DILocation(line: 252, column: 14, scope: !602)
!621 = !DILocation(line: 252, column: 17, scope: !602)
!622 = !DILocation(line: 0, scope: !602)
!623 = !DILocation(line: 253, column: 13, scope: !624)
!624 = distinct !DILexicalBlock(scope: !625, file: !3, line: 253, column: 12)
!625 = distinct !DILexicalBlock(scope: !602, file: !3, line: 252, column: 24)
!626 = !DILocation(line: 253, column: 12, scope: !624)
!627 = !DILocation(line: 253, column: 15, scope: !624)
!628 = !DILocation(line: 253, column: 12, scope: !625)
!629 = !DILocation(line: 254, column: 13, scope: !630)
!630 = distinct !DILexicalBlock(scope: !624, file: !3, line: 253, column: 23)
!631 = !DILocation(line: 254, column: 26, scope: !630)
!632 = !DILocation(line: 255, column: 37, scope: !630)
!633 = !DILocation(line: 255, column: 29, scope: !630)
!634 = !DILocation(line: 255, column: 23, scope: !630)
!635 = !DILocation(line: 255, column: 18, scope: !630)
!636 = !DILocation(line: 255, column: 21, scope: !630)
!637 = !DILocation(line: 256, column: 15, scope: !630)
!638 = !DILocation(line: 257, column: 9, scope: !630)
!639 = !DILocation(line: 258, column: 25, scope: !640)
!640 = distinct !DILexicalBlock(scope: !624, file: !3, line: 257, column: 16)
!641 = !DILocation(line: 258, column: 23, scope: !640)
!642 = !DILocation(line: 258, column: 18, scope: !640)
!643 = !DILocation(line: 258, column: 21, scope: !640)
!644 = distinct !{!644, !617, !645}
!645 = !DILocation(line: 260, column: 5, scope: !602)
!646 = !DILocation(line: 261, column: 6, scope: !602)
!647 = !DILocation(line: 261, column: 11, scope: !602)
!648 = !DILocation(line: 262, column: 1, scope: !602)
!649 = distinct !DISubprogram(name: "parse_request", scope: !3, file: !3, line: 264, type: !650, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !83)
!650 = !DISubroutineType(types: !651)
!651 = !{null, !48, !652}
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "http_request", file: !3, line: 36, baseType: !654)
!654 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 32, size: 4224, elements: !655)
!655 = !{!656, !660, !661}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !654, file: !3, line: 33, baseType: !657, size: 4096)
!657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 4096, elements: !658)
!658 = !{!659}
!659 = !DISubrange(count: 512)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !654, file: !3, line: 34, baseType: !351, size: 64, offset: 4096)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !654, file: !3, line: 35, baseType: !108, size: 64, offset: 4160)
!662 = !DILocalVariable(name: "fd", arg: 1, scope: !649, file: !3, line: 264, type: !48)
!663 = !DILocation(line: 264, column: 24, scope: !649)
!664 = !DILocalVariable(name: "req", arg: 2, scope: !649, file: !3, line: 264, type: !652)
!665 = !DILocation(line: 264, column: 42, scope: !649)
!666 = !DILocalVariable(name: "rio", scope: !649, file: !3, line: 265, type: !73)
!667 = !DILocation(line: 265, column: 11, scope: !649)
!668 = !DILocalVariable(name: "buf", scope: !649, file: !3, line: 266, type: !80)
!669 = !DILocation(line: 266, column: 10, scope: !649)
!670 = !DILocalVariable(name: "method", scope: !649, file: !3, line: 266, type: !80)
!671 = !DILocation(line: 266, column: 24, scope: !649)
!672 = !DILocalVariable(name: "uri", scope: !649, file: !3, line: 266, type: !80)
!673 = !DILocation(line: 266, column: 41, scope: !649)
!674 = !DILocation(line: 267, column: 5, scope: !649)
!675 = !DILocation(line: 267, column: 10, scope: !649)
!676 = !DILocation(line: 267, column: 17, scope: !649)
!677 = !DILocation(line: 268, column: 5, scope: !649)
!678 = !DILocation(line: 268, column: 10, scope: !649)
!679 = !DILocation(line: 268, column: 14, scope: !649)
!680 = !DILocation(line: 270, column: 25, scope: !649)
!681 = !DILocation(line: 270, column: 5, scope: !649)
!682 = !DILocation(line: 271, column: 25, scope: !649)
!683 = !DILocation(line: 271, column: 5, scope: !649)
!684 = !DILocation(line: 272, column: 12, scope: !649)
!685 = !DILocation(line: 272, column: 26, scope: !649)
!686 = !DILocation(line: 272, column: 34, scope: !649)
!687 = !DILocation(line: 272, column: 5, scope: !649)
!688 = !DILocation(line: 274, column: 5, scope: !649)
!689 = !DILocation(line: 274, column: 11, scope: !649)
!690 = !DILocation(line: 274, column: 18, scope: !649)
!691 = !DILocation(line: 274, column: 26, scope: !649)
!692 = !DILocation(line: 274, column: 29, scope: !649)
!693 = !DILocation(line: 274, column: 36, scope: !649)
!694 = !DILocation(line: 0, scope: !649)
!695 = !DILocation(line: 275, column: 29, scope: !696)
!696 = distinct !DILexicalBlock(scope: !649, file: !3, line: 274, column: 45)
!697 = !DILocation(line: 275, column: 9, scope: !696)
!698 = !DILocation(line: 276, column: 12, scope: !699)
!699 = distinct !DILexicalBlock(scope: !696, file: !3, line: 276, column: 12)
!700 = !DILocation(line: 276, column: 19, scope: !699)
!701 = !DILocation(line: 276, column: 26, scope: !699)
!702 = !DILocation(line: 276, column: 29, scope: !699)
!703 = !DILocation(line: 276, column: 36, scope: !699)
!704 = !DILocation(line: 276, column: 43, scope: !699)
!705 = !DILocation(line: 276, column: 46, scope: !699)
!706 = !DILocation(line: 276, column: 53, scope: !699)
!707 = !DILocation(line: 276, column: 12, scope: !696)
!708 = !DILocation(line: 277, column: 20, scope: !709)
!709 = distinct !DILexicalBlock(scope: !699, file: !3, line: 276, column: 60)
!710 = !DILocation(line: 277, column: 50, scope: !709)
!711 = !DILocation(line: 277, column: 55, scope: !709)
!712 = !DILocation(line: 277, column: 64, scope: !709)
!713 = !DILocation(line: 277, column: 69, scope: !709)
!714 = !DILocation(line: 277, column: 13, scope: !709)
!715 = !DILocation(line: 279, column: 17, scope: !716)
!716 = distinct !DILexicalBlock(scope: !709, file: !3, line: 279, column: 17)
!717 = !DILocation(line: 279, column: 22, scope: !716)
!718 = !DILocation(line: 279, column: 26, scope: !716)
!719 = !DILocation(line: 279, column: 17, scope: !709)
!720 = !DILocation(line: 279, column: 32, scope: !716)
!721 = !DILocation(line: 279, column: 37, scope: !716)
!722 = !DILocation(line: 279, column: 41, scope: !716)
!723 = !DILocation(line: 280, column: 9, scope: !709)
!724 = distinct !{!724, !688, !725}
!725 = !DILocation(line: 281, column: 5, scope: !649)
!726 = !DILocalVariable(name: "filename", scope: !649, file: !3, line: 282, type: !52)
!727 = !DILocation(line: 282, column: 11, scope: !649)
!728 = !DILocation(line: 282, column: 22, scope: !649)
!729 = !DILocation(line: 283, column: 8, scope: !730)
!730 = distinct !DILexicalBlock(scope: !649, file: !3, line: 283, column: 8)
!731 = !DILocation(line: 283, column: 15, scope: !730)
!732 = !DILocation(line: 283, column: 8, scope: !649)
!733 = !DILocation(line: 284, column: 20, scope: !734)
!734 = distinct !DILexicalBlock(scope: !730, file: !3, line: 283, column: 22)
!735 = !DILocation(line: 284, column: 24, scope: !734)
!736 = !DILocation(line: 284, column: 18, scope: !734)
!737 = !DILocation(line: 285, column: 20, scope: !738)
!738 = distinct !DILexicalBlock(scope: !734, file: !3, line: 285, column: 13)
!739 = !DILocation(line: 285, column: 13, scope: !738)
!740 = !DILocation(line: 285, column: 30, scope: !738)
!741 = !DILocation(line: 285, column: 13, scope: !734)
!742 = !DILocation(line: 286, column: 22, scope: !743)
!743 = distinct !DILexicalBlock(scope: !738, file: !3, line: 285, column: 35)
!744 = !DILocation(line: 287, column: 9, scope: !743)
!745 = !DILocation(line: 288, column: 5, scope: !734)
!746 = !DILocation(line: 289, column: 16, scope: !649)
!747 = !DILocation(line: 289, column: 26, scope: !649)
!748 = !DILocation(line: 289, column: 31, scope: !649)
!749 = !DILocation(line: 289, column: 5, scope: !649)
!750 = !DILocation(line: 290, column: 1, scope: !649)
!751 = distinct !DISubprogram(name: "log_access", scope: !3, file: !3, line: 293, type: !752, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !83)
!752 = !DISubroutineType(types: !753)
!753 = !{null, !48, !754, !652}
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 64)
!755 = !DILocalVariable(name: "status", arg: 1, scope: !751, file: !3, line: 293, type: !48)
!756 = !DILocation(line: 293, column: 21, scope: !751)
!757 = !DILocalVariable(name: "c_addr", arg: 2, scope: !751, file: !3, line: 293, type: !754)
!758 = !DILocation(line: 293, column: 49, scope: !751)
!759 = !DILocalVariable(name: "req", arg: 3, scope: !751, file: !3, line: 293, type: !652)
!760 = !DILocation(line: 293, column: 71, scope: !751)
!761 = !DILocation(line: 294, column: 41, scope: !751)
!762 = !DILocation(line: 294, column: 49, scope: !751)
!763 = !DILocation(line: 294, column: 31, scope: !751)
!764 = !DILocation(line: 295, column: 18, scope: !751)
!765 = !DILocation(line: 295, column: 26, scope: !751)
!766 = !DILocation(line: 295, column: 12, scope: !751)
!767 = !DILocation(line: 295, column: 37, scope: !751)
!768 = !DILocation(line: 295, column: 45, scope: !751)
!769 = !DILocation(line: 295, column: 50, scope: !751)
!770 = !DILocation(line: 294, column: 5, scope: !751)
!771 = !DILocation(line: 296, column: 1, scope: !751)
!772 = distinct !DISubprogram(name: "client_error", scope: !3, file: !3, line: 298, type: !773, scopeLine: 298, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !83)
!773 = !DISubroutineType(types: !774)
!774 = !{null, !48, !48, !52, !52}
!775 = !DILocalVariable(name: "fd", arg: 1, scope: !772, file: !3, line: 298, type: !48)
!776 = !DILocation(line: 298, column: 23, scope: !772)
!777 = !DILocalVariable(name: "status", arg: 2, scope: !772, file: !3, line: 298, type: !48)
!778 = !DILocation(line: 298, column: 31, scope: !772)
!779 = !DILocalVariable(name: "msg", arg: 3, scope: !772, file: !3, line: 298, type: !52)
!780 = !DILocation(line: 298, column: 45, scope: !772)
!781 = !DILocalVariable(name: "longmsg", arg: 4, scope: !772, file: !3, line: 298, type: !52)
!782 = !DILocation(line: 298, column: 56, scope: !772)
!783 = !DILocalVariable(name: "buf", scope: !772, file: !3, line: 299, type: !80)
!784 = !DILocation(line: 299, column: 10, scope: !772)
!785 = !DILocation(line: 300, column: 13, scope: !772)
!786 = !DILocation(line: 300, column: 40, scope: !772)
!787 = !DILocation(line: 300, column: 48, scope: !772)
!788 = !DILocation(line: 300, column: 5, scope: !772)
!789 = !DILocation(line: 301, column: 13, scope: !772)
!790 = !DILocation(line: 301, column: 26, scope: !772)
!791 = !DILocation(line: 301, column: 19, scope: !772)
!792 = !DILocation(line: 301, column: 17, scope: !772)
!793 = !DILocation(line: 302, column: 51, scope: !772)
!794 = !DILocation(line: 302, column: 44, scope: !772)
!795 = !DILocation(line: 301, column: 5, scope: !772)
!796 = !DILocation(line: 303, column: 13, scope: !772)
!797 = !DILocation(line: 303, column: 26, scope: !772)
!798 = !DILocation(line: 303, column: 19, scope: !772)
!799 = !DILocation(line: 303, column: 17, scope: !772)
!800 = !DILocation(line: 303, column: 38, scope: !772)
!801 = !DILocation(line: 303, column: 5, scope: !772)
!802 = !DILocation(line: 304, column: 12, scope: !772)
!803 = !DILocation(line: 304, column: 16, scope: !772)
!804 = !DILocation(line: 304, column: 28, scope: !772)
!805 = !DILocation(line: 304, column: 21, scope: !772)
!806 = !DILocation(line: 304, column: 5, scope: !772)
!807 = !DILocation(line: 305, column: 1, scope: !772)
!808 = distinct !DISubprogram(name: "serve_static", scope: !3, file: !3, line: 307, type: !809, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !83)
!809 = !DISubroutineType(types: !810)
!810 = !{null, !48, !48, !652, !108}
!811 = !DILocalVariable(name: "out_fd", arg: 1, scope: !808, file: !3, line: 307, type: !48)
!812 = !DILocation(line: 307, column: 23, scope: !808)
!813 = !DILocalVariable(name: "in_fd", arg: 2, scope: !808, file: !3, line: 307, type: !48)
!814 = !DILocation(line: 307, column: 35, scope: !808)
!815 = !DILocalVariable(name: "req", arg: 3, scope: !808, file: !3, line: 307, type: !652)
!816 = !DILocation(line: 307, column: 56, scope: !808)
!817 = !DILocalVariable(name: "total_size", arg: 4, scope: !808, file: !3, line: 308, type: !108)
!818 = !DILocation(line: 308, column: 26, scope: !808)
!819 = !DILocalVariable(name: "buf", scope: !808, file: !3, line: 309, type: !820)
!820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 1024, elements: !821)
!821 = !{!822}
!822 = !DISubrange(count: 128)
!823 = !DILocation(line: 309, column: 10, scope: !808)
!824 = !DILocation(line: 310, column: 9, scope: !825)
!825 = distinct !DILexicalBlock(scope: !808, file: !3, line: 310, column: 9)
!826 = !DILocation(line: 310, column: 14, scope: !825)
!827 = !DILocation(line: 310, column: 21, scope: !825)
!828 = !DILocation(line: 310, column: 9, scope: !808)
!829 = !DILocation(line: 311, column: 17, scope: !830)
!830 = distinct !DILexicalBlock(scope: !825, file: !3, line: 310, column: 25)
!831 = !DILocation(line: 311, column: 9, scope: !830)
!832 = !DILocation(line: 312, column: 17, scope: !830)
!833 = !DILocation(line: 312, column: 30, scope: !830)
!834 = !DILocation(line: 312, column: 23, scope: !830)
!835 = !DILocation(line: 312, column: 21, scope: !830)
!836 = !DILocation(line: 313, column: 17, scope: !830)
!837 = !DILocation(line: 313, column: 22, scope: !830)
!838 = !DILocation(line: 313, column: 30, scope: !830)
!839 = !DILocation(line: 313, column: 35, scope: !830)
!840 = !DILocation(line: 313, column: 40, scope: !830)
!841 = !DILocation(line: 312, column: 9, scope: !830)
!842 = !DILocation(line: 314, column: 5, scope: !830)
!843 = !DILocation(line: 315, column: 17, scope: !844)
!844 = distinct !DILexicalBlock(scope: !825, file: !3, line: 314, column: 12)
!845 = !DILocation(line: 315, column: 9, scope: !844)
!846 = !DILocation(line: 317, column: 13, scope: !808)
!847 = !DILocation(line: 317, column: 26, scope: !808)
!848 = !DILocation(line: 317, column: 19, scope: !808)
!849 = !DILocation(line: 317, column: 17, scope: !808)
!850 = !DILocation(line: 318, column: 13, scope: !808)
!851 = !DILocation(line: 318, column: 18, scope: !808)
!852 = !DILocation(line: 318, column: 24, scope: !808)
!853 = !DILocation(line: 318, column: 29, scope: !808)
!854 = !DILocation(line: 318, column: 22, scope: !808)
!855 = !DILocation(line: 317, column: 5, scope: !808)
!856 = !DILocation(line: 319, column: 13, scope: !808)
!857 = !DILocation(line: 319, column: 26, scope: !808)
!858 = !DILocation(line: 319, column: 19, scope: !808)
!859 = !DILocation(line: 319, column: 17, scope: !808)
!860 = !DILocation(line: 320, column: 27, scope: !808)
!861 = !DILocation(line: 320, column: 32, scope: !808)
!862 = !DILocation(line: 320, column: 13, scope: !808)
!863 = !DILocation(line: 319, column: 5, scope: !808)
!864 = !DILocation(line: 322, column: 12, scope: !808)
!865 = !DILocation(line: 322, column: 20, scope: !808)
!866 = !DILocation(line: 322, column: 32, scope: !808)
!867 = !DILocation(line: 322, column: 25, scope: !808)
!868 = !DILocation(line: 322, column: 5, scope: !808)
!869 = !DILocalVariable(name: "offset", scope: !808, file: !3, line: 323, type: !351)
!870 = !DILocation(line: 323, column: 11, scope: !808)
!871 = !DILocation(line: 323, column: 20, scope: !808)
!872 = !DILocation(line: 323, column: 25, scope: !808)
!873 = !DILocation(line: 324, column: 5, scope: !808)
!874 = !DILocation(line: 324, column: 11, scope: !808)
!875 = !DILocation(line: 324, column: 20, scope: !808)
!876 = !DILocation(line: 324, column: 25, scope: !808)
!877 = !DILocation(line: 324, column: 18, scope: !808)
!878 = !DILocation(line: 325, column: 21, scope: !879)
!879 = distinct !DILexicalBlock(scope: !880, file: !3, line: 325, column: 12)
!880 = distinct !DILexicalBlock(scope: !808, file: !3, line: 324, column: 29)
!881 = !DILocation(line: 325, column: 29, scope: !879)
!882 = !DILocation(line: 325, column: 45, scope: !879)
!883 = !DILocation(line: 325, column: 50, scope: !879)
!884 = !DILocation(line: 325, column: 56, scope: !879)
!885 = !DILocation(line: 325, column: 61, scope: !879)
!886 = !DILocation(line: 325, column: 54, scope: !879)
!887 = !DILocation(line: 325, column: 12, scope: !879)
!888 = !DILocation(line: 325, column: 69, scope: !879)
!889 = !DILocation(line: 325, column: 12, scope: !880)
!890 = !DILocation(line: 326, column: 13, scope: !891)
!891 = distinct !DILexicalBlock(scope: !879, file: !3, line: 325, column: 75)
!892 = distinct !{!892, !873, !893}
!893 = !DILocation(line: 328, column: 5, scope: !808)
!894 = !DILocation(line: 329, column: 1, scope: !808)
!895 = distinct !DISubprogram(name: "get_mime_type", scope: !3, file: !3, line: 200, type: !896, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !83)
!896 = !DISubroutineType(types: !897)
!897 = !{!58, !52}
!898 = !DILocalVariable(name: "filename", arg: 1, scope: !895, file: !3, line: 200, type: !52)
!899 = !DILocation(line: 200, column: 40, scope: !895)
!900 = !DILocalVariable(name: "dot", scope: !895, file: !3, line: 201, type: !52)
!901 = !DILocation(line: 201, column: 11, scope: !895)
!902 = !DILocation(line: 201, column: 25, scope: !895)
!903 = !DILocation(line: 201, column: 17, scope: !895)
!904 = !DILocation(line: 202, column: 8, scope: !905)
!905 = distinct !DILexicalBlock(scope: !895, file: !3, line: 202, column: 8)
!906 = !DILocation(line: 202, column: 8, scope: !895)
!907 = !DILocalVariable(name: "map", scope: !908, file: !3, line: 203, type: !909)
!908 = distinct !DILexicalBlock(scope: !905, file: !3, line: 202, column: 12)
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 64)
!910 = !DILocation(line: 203, column: 19, scope: !908)
!911 = !DILocation(line: 204, column: 9, scope: !908)
!912 = !DILocation(line: 204, column: 15, scope: !908)
!913 = !DILocation(line: 204, column: 20, scope: !908)
!914 = !DILocation(line: 205, column: 23, scope: !915)
!915 = distinct !DILexicalBlock(scope: !916, file: !3, line: 205, column: 16)
!916 = distinct !DILexicalBlock(scope: !908, file: !3, line: 204, column: 30)
!917 = !DILocation(line: 205, column: 28, scope: !915)
!918 = !DILocation(line: 205, column: 39, scope: !915)
!919 = !DILocation(line: 205, column: 16, scope: !915)
!920 = !DILocation(line: 205, column: 44, scope: !915)
!921 = !DILocation(line: 205, column: 16, scope: !916)
!922 = !DILocation(line: 206, column: 24, scope: !923)
!923 = distinct !DILexicalBlock(scope: !915, file: !3, line: 205, column: 49)
!924 = !DILocation(line: 206, column: 29, scope: !923)
!925 = !DILocation(line: 206, column: 17, scope: !923)
!926 = !DILocation(line: 208, column: 16, scope: !916)
!927 = distinct !{!927, !911, !928}
!928 = !DILocation(line: 209, column: 9, scope: !908)
!929 = !DILocation(line: 210, column: 5, scope: !908)
!930 = !DILocation(line: 211, column: 12, scope: !895)
!931 = !DILocation(line: 211, column: 5, scope: !895)
!932 = !DILocation(line: 212, column: 1, scope: !895)
!933 = distinct !DISubprogram(name: "process", scope: !3, file: !3, line: 331, type: !934, scopeLine: 331, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !83)
!934 = !DISubroutineType(types: !935)
!935 = !{null, !48, !754}
!936 = !DILocalVariable(name: "fd", arg: 1, scope: !933, file: !3, line: 331, type: !48)
!937 = !DILocation(line: 331, column: 18, scope: !933)
!938 = !DILocalVariable(name: "clientaddr", arg: 2, scope: !933, file: !3, line: 331, type: !754)
!939 = !DILocation(line: 331, column: 42, scope: !933)
!940 = !DILocalVariable(name: "req", scope: !933, file: !3, line: 332, type: !653)
!941 = !DILocation(line: 332, column: 18, scope: !933)
!942 = !DILocation(line: 333, column: 19, scope: !933)
!943 = !DILocation(line: 333, column: 5, scope: !933)
!944 = !DILocalVariable(name: "sbuf", scope: !933, file: !3, line: 335, type: !301)
!945 = !DILocation(line: 335, column: 17, scope: !933)
!946 = !DILocalVariable(name: "status", scope: !933, file: !3, line: 336, type: !48)
!947 = !DILocation(line: 336, column: 9, scope: !933)
!948 = !DILocalVariable(name: "ffd", scope: !933, file: !3, line: 336, type: !48)
!949 = !DILocation(line: 336, column: 23, scope: !933)
!950 = !DILocation(line: 336, column: 38, scope: !933)
!951 = !DILocation(line: 336, column: 34, scope: !933)
!952 = !DILocation(line: 336, column: 29, scope: !933)
!953 = !DILocation(line: 337, column: 8, scope: !954)
!954 = distinct !DILexicalBlock(scope: !933, file: !3, line: 337, column: 8)
!955 = !DILocation(line: 337, column: 12, scope: !954)
!956 = !DILocation(line: 337, column: 8, scope: !933)
!957 = !DILocation(line: 338, column: 16, scope: !958)
!958 = distinct !DILexicalBlock(scope: !954, file: !3, line: 337, column: 17)
!959 = !DILocalVariable(name: "msg", scope: !958, file: !3, line: 339, type: !52)
!960 = !DILocation(line: 339, column: 15, scope: !958)
!961 = !DILocation(line: 340, column: 22, scope: !958)
!962 = !DILocation(line: 340, column: 26, scope: !958)
!963 = !DILocation(line: 340, column: 47, scope: !958)
!964 = !DILocation(line: 340, column: 9, scope: !958)
!965 = !DILocation(line: 341, column: 5, scope: !958)
!966 = !DILocation(line: 342, column: 15, scope: !967)
!967 = distinct !DILexicalBlock(scope: !954, file: !3, line: 341, column: 12)
!968 = !DILocation(line: 342, column: 9, scope: !967)
!969 = !DILocation(line: 343, column: 12, scope: !970)
!970 = distinct !DILexicalBlock(scope: !967, file: !3, line: 343, column: 12)
!971 = !DILocation(line: 343, column: 12, scope: !967)
!972 = !DILocation(line: 344, column: 21, scope: !973)
!973 = distinct !DILexicalBlock(scope: !974, file: !3, line: 344, column: 17)
!974 = distinct !DILexicalBlock(scope: !970, file: !3, line: 343, column: 34)
!975 = !DILocation(line: 344, column: 25, scope: !973)
!976 = !DILocation(line: 344, column: 17, scope: !974)
!977 = !DILocation(line: 345, column: 32, scope: !978)
!978 = distinct !DILexicalBlock(scope: !973, file: !3, line: 344, column: 30)
!979 = !DILocation(line: 345, column: 21, scope: !978)
!980 = !DILocation(line: 345, column: 25, scope: !978)
!981 = !DILocation(line: 346, column: 13, scope: !978)
!982 = !DILocation(line: 347, column: 21, scope: !983)
!983 = distinct !DILexicalBlock(scope: !974, file: !3, line: 347, column: 17)
!984 = !DILocation(line: 347, column: 28, scope: !983)
!985 = !DILocation(line: 347, column: 17, scope: !974)
!986 = !DILocation(line: 348, column: 24, scope: !987)
!987 = distinct !DILexicalBlock(scope: !983, file: !3, line: 347, column: 32)
!988 = !DILocation(line: 349, column: 13, scope: !987)
!989 = !DILocation(line: 350, column: 26, scope: !974)
!990 = !DILocation(line: 350, column: 30, scope: !974)
!991 = !DILocation(line: 350, column: 46, scope: !974)
!992 = !DILocation(line: 350, column: 13, scope: !974)
!993 = !DILocation(line: 351, column: 9, scope: !974)
!994 = !DILocation(line: 351, column: 19, scope: !995)
!995 = distinct !DILexicalBlock(scope: !970, file: !3, line: 351, column: 19)
!996 = !DILocation(line: 351, column: 19, scope: !970)
!997 = !DILocation(line: 352, column: 20, scope: !998)
!998 = distinct !DILexicalBlock(scope: !995, file: !3, line: 351, column: 41)
!999 = !DILocation(line: 353, column: 38, scope: !998)
!1000 = !DILocation(line: 353, column: 42, scope: !998)
!1001 = !DILocation(line: 353, column: 51, scope: !998)
!1002 = !DILocation(line: 353, column: 47, scope: !998)
!1003 = !DILocation(line: 353, column: 13, scope: !998)
!1004 = !DILocation(line: 354, column: 9, scope: !998)
!1005 = !DILocation(line: 355, column: 20, scope: !1006)
!1006 = distinct !DILexicalBlock(scope: !995, file: !3, line: 354, column: 16)
!1007 = !DILocalVariable(name: "msg", scope: !1006, file: !3, line: 356, type: !52)
!1008 = !DILocation(line: 356, column: 19, scope: !1006)
!1009 = !DILocation(line: 357, column: 26, scope: !1006)
!1010 = !DILocation(line: 357, column: 30, scope: !1006)
!1011 = !DILocation(line: 357, column: 47, scope: !1006)
!1012 = !DILocation(line: 357, column: 13, scope: !1006)
!1013 = !DILocation(line: 359, column: 15, scope: !967)
!1014 = !DILocation(line: 359, column: 9, scope: !967)
!1015 = !DILocation(line: 361, column: 16, scope: !933)
!1016 = !DILocation(line: 361, column: 24, scope: !933)
!1017 = !DILocation(line: 361, column: 5, scope: !933)
!1018 = !DILocation(line: 362, column: 1, scope: !933)
!1019 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 364, type: !1020, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !83)
!1020 = !DISubroutineType(types: !1021)
!1021 = !{!48, !48, !1022}
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64)
!1023 = !DILocalVariable(name: "argc", arg: 1, scope: !1019, file: !3, line: 364, type: !48)
!1024 = !DILocation(line: 364, column: 14, scope: !1019)
!1025 = !DILocalVariable(name: "argv", arg: 2, scope: !1019, file: !3, line: 364, type: !1022)
!1026 = !DILocation(line: 364, column: 27, scope: !1019)
!1027 = !DILocalVariable(name: "clientaddr", scope: !1019, file: !3, line: 365, type: !538)
!1028 = !DILocation(line: 365, column: 24, scope: !1019)
!1029 = !DILocalVariable(name: "default_port", scope: !1019, file: !3, line: 366, type: !48)
!1030 = !DILocation(line: 366, column: 9, scope: !1019)
!1031 = !DILocalVariable(name: "listenfd", scope: !1019, file: !3, line: 367, type: !48)
!1032 = !DILocation(line: 367, column: 9, scope: !1019)
!1033 = !DILocalVariable(name: "connfd", scope: !1019, file: !3, line: 368, type: !48)
!1034 = !DILocation(line: 368, column: 9, scope: !1019)
!1035 = !DILocalVariable(name: "clientlen", scope: !1019, file: !3, line: 369, type: !1036)
!1036 = !DIDerivedType(tag: DW_TAG_typedef, name: "socklen_t", file: !33, line: 33, baseType: !1037)
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "__socklen_t", file: !28, line: 209, baseType: !7)
!1038 = !DILocation(line: 369, column: 15, scope: !1019)
!1039 = !DILocation(line: 370, column: 8, scope: !1040)
!1040 = distinct !DILexicalBlock(scope: !1019, file: !3, line: 370, column: 8)
!1041 = !DILocation(line: 370, column: 13, scope: !1040)
!1042 = !DILocation(line: 370, column: 8, scope: !1019)
!1043 = !DILocation(line: 371, column: 29, scope: !1044)
!1044 = distinct !DILexicalBlock(scope: !1040, file: !3, line: 370, column: 18)
!1045 = !DILocation(line: 371, column: 24, scope: !1044)
!1046 = !DILocation(line: 371, column: 22, scope: !1044)
!1047 = !DILocation(line: 372, column: 5, scope: !1044)
!1048 = !DILocation(line: 372, column: 16, scope: !1049)
!1049 = distinct !DILexicalBlock(scope: !1040, file: !3, line: 372, column: 16)
!1050 = !DILocation(line: 372, column: 21, scope: !1049)
!1051 = !DILocation(line: 372, column: 16, scope: !1040)
!1052 = !DILocation(line: 373, column: 29, scope: !1053)
!1053 = distinct !DILexicalBlock(scope: !1049, file: !3, line: 372, column: 27)
!1054 = !DILocation(line: 373, column: 24, scope: !1053)
!1055 = !DILocation(line: 373, column: 22, scope: !1053)
!1056 = !DILocation(line: 374, column: 18, scope: !1057)
!1057 = distinct !DILexicalBlock(scope: !1053, file: !3, line: 374, column: 12)
!1058 = !DILocation(line: 374, column: 12, scope: !1057)
!1059 = !DILocation(line: 374, column: 27, scope: !1057)
!1060 = !DILocation(line: 374, column: 12, scope: !1053)
!1061 = !DILocation(line: 375, column: 20, scope: !1062)
!1062 = distinct !DILexicalBlock(scope: !1057, file: !3, line: 374, column: 33)
!1063 = !DILocation(line: 375, column: 13, scope: !1062)
!1064 = !DILocation(line: 376, column: 13, scope: !1062)
!1065 = !DILocation(line: 378, column: 5, scope: !1053)
!1066 = !DILocation(line: 380, column: 30, scope: !1019)
!1067 = !DILocation(line: 380, column: 16, scope: !1019)
!1068 = !DILocation(line: 380, column: 14, scope: !1019)
!1069 = !DILocation(line: 381, column: 9, scope: !1070)
!1070 = distinct !DILexicalBlock(scope: !1019, file: !3, line: 381, column: 9)
!1071 = !DILocation(line: 381, column: 18, scope: !1070)
!1072 = !DILocation(line: 381, column: 9, scope: !1019)
!1073 = !DILocation(line: 382, column: 49, scope: !1074)
!1074 = distinct !DILexicalBlock(scope: !1070, file: !3, line: 381, column: 22)
!1075 = !DILocation(line: 382, column: 63, scope: !1074)
!1076 = !DILocation(line: 382, column: 9, scope: !1074)
!1077 = !DILocation(line: 383, column: 5, scope: !1074)
!1078 = !DILocation(line: 384, column: 9, scope: !1079)
!1079 = distinct !DILexicalBlock(scope: !1070, file: !3, line: 383, column: 12)
!1080 = !DILocation(line: 385, column: 14, scope: !1079)
!1081 = !DILocation(line: 385, column: 9, scope: !1079)
!1082 = !DILocation(line: 389, column: 5, scope: !1019)
!1083 = !DILocation(line: 391, column: 5, scope: !1019)
!1084 = !DILocation(line: 392, column: 25, scope: !1085)
!1085 = distinct !DILexicalBlock(scope: !1019, file: !3, line: 391, column: 13)
!1086 = !DILocation(line: 392, column: 35, scope: !1085)
!1087 = !DILocation(line: 392, column: 18, scope: !1085)
!1088 = !DILocation(line: 392, column: 16, scope: !1085)
!1089 = !DILocation(line: 393, column: 17, scope: !1085)
!1090 = !DILocation(line: 393, column: 9, scope: !1085)
!1091 = !DILocation(line: 394, column: 15, scope: !1085)
!1092 = !DILocation(line: 394, column: 9, scope: !1085)
!1093 = distinct !{!1093, !1083, !1094}
!1094 = !DILocation(line: 395, column: 5, scope: !1019)
!1095 = !DILocation(line: 398, column: 1, scope: !1019)
