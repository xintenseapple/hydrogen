; ModuleID = 'tiny.c'
source_filename = "tiny.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.mime_map = type { i8*, i8* }
%struct.rio_t = type { i32, i32, i8*, [1024 x i8] }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.__dirstream = type opaque
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.sockaddr_in = type { i16, i16, %struct.in_addr, [8 x i8] }
%struct.in_addr = type { i32 }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.http_request = type { [512 x i8], i64, i64 }

@.str = private unnamed_addr constant [5 x i8] c".css\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"text/css\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c".gif\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"image/gif\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c".htm\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"text/html\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c".html\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c".jpeg\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"image/jpeg\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c".jpg\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c".ico\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"image/x-icon\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c".js\00", align 1
@.str.13 = private unnamed_addr constant [23 x i8] c"application/javascript\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c".pdf\00", align 1
@.str.15 = private unnamed_addr constant [16 x i8] c"application/pdf\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c".mp4\00", align 1
@.str.17 = private unnamed_addr constant [10 x i8] c"video/mp4\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c".png\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"image/png\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c".svg\00", align 1
@.str.21 = private unnamed_addr constant [14 x i8] c"image/svg+xml\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c".xml\00", align 1
@.str.23 = private unnamed_addr constant [9 x i8] c"text/xml\00", align 1
@meme_types = dso_local global [14 x %struct.mime_map] [%struct.mime_map { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i32 0, i32 0) }, %struct.mime_map { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i32 0, i32 0) }, %struct.mime_map { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i32 0, i32 0) }, %struct.mime_map { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i32 0, i32 0) }, %struct.mime_map { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i32 0, i32 0) }, %struct.mime_map { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i32 0, i32 0) }, %struct.mime_map { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i32 0, i32 0) }, %struct.mime_map { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i32 0, i32 0) }, %struct.mime_map { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i32 0, i32 0) }, %struct.mime_map { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i32 0, i32 0) }, %struct.mime_map { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i32 0, i32 0) }, %struct.mime_map { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i32 0, i32 0) }, %struct.mime_map { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.23, i32 0, i32 0) }, %struct.mime_map zeroinitializer], align 16, !dbg !0
@.str.24 = private unnamed_addr constant [11 x i8] c"text/plain\00", align 1
@default_mime_type = dso_local global i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24, i32 0, i32 0), align 8, !dbg !50
@.str.25 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.26 = private unnamed_addr constant [6 x i8] c"[DIR]\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"%.1fK\00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"%.1fM\00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c"%.1fG\00", align 1
@.str.31 = private unnamed_addr constant [28 x i8] c"HTTP/1.1 200 OK\0D\0A%s%s%s%s%s\00", align 1
@.str.32 = private unnamed_addr constant [28 x i8] c"Content-Type: text/html\0D\0A\0D\0A\00", align 1
@.str.33 = private unnamed_addr constant [20 x i8] c"<html><head><style>\00", align 1
@.str.34 = private unnamed_addr constant [47 x i8] c"body{font-family: monospace; font-size: 13px;}\00", align 1
@.str.35 = private unnamed_addr constant [25 x i8] c"td {padding: 1.5px 6px;}\00", align 1
@.str.36 = private unnamed_addr constant [30 x i8] c"</style></head><body><table>\0A\00", align 1
@.str.37 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.38 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.39 = private unnamed_addr constant [15 x i8] c"%Y-%m-%d %H:%M\00", align 1
@.str.40 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.41 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.42 = private unnamed_addr constant [65 x i8] c"<tr><td><a href=\22%s%s\22>%s%s</a></td><td>%s</td><td>%s</td></tr>\0A\00", align 1
@.str.43 = private unnamed_addr constant [23 x i8] c"</table></body></html>\00", align 1
@.str.44 = private unnamed_addr constant [6 x i8] c"%s %s\00", align 1
@.str.45 = private unnamed_addr constant [21 x i8] c"Range: bytes=%lu-%lu\00", align 1
@.str.46 = private unnamed_addr constant [15 x i8] c"%s:%d %d - %s\0A\00", align 1
@.str.47 = private unnamed_addr constant [17 x i8] c"HTTP/1.1 %d %s\0D\0A\00", align 1
@.str.48 = private unnamed_addr constant [24 x i8] c"Content-length: %lu\0D\0A\0D\0A\00", align 1
@.str.49 = private unnamed_addr constant [23 x i8] c"HTTP/1.1 206 Partial\0D\0A\00", align 1
@.str.50 = private unnamed_addr constant [35 x i8] c"Content-Range: bytes %lu-%lu/%lu\0D\0A\00", align 1
@.str.51 = private unnamed_addr constant [40 x i8] c"HTTP/1.1 200 OK\0D\0AAccept-Ranges: bytes\0D\0A\00", align 1
@.str.52 = private unnamed_addr constant [26 x i8] c"Cache-Control: no-cache\0D\0A\00", align 1
@.str.53 = private unnamed_addr constant [22 x i8] c"Content-length: %lu\0D\0A\00", align 1
@.str.54 = private unnamed_addr constant [21 x i8] c"Content-type: %s\0D\0A\0D\0A\00", align 1
@.str.55 = private unnamed_addr constant [14 x i8] c"offset: %d \0A\0A\00", align 1
@.str.56 = private unnamed_addr constant [37 x i8] c"accept request, fd is %d, pid is %d\0A\00", align 1
@.str.57 = private unnamed_addr constant [15 x i8] c"File not found\00", align 1
@.str.58 = private unnamed_addr constant [10 x i8] c"Not found\00", align 1
@.str.59 = private unnamed_addr constant [13 x i8] c"Unknow Error\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"Error\00", align 1
@.str.61 = private unnamed_addr constant [29 x i8] c"listen on port %d, fd is %d\0A\00", align 1
@.str.62 = private unnamed_addr constant [6 x i8] c"ERROR\00", align 1
@.str.63 = private unnamed_addr constant [17 x i8] c"child pid is %d\0A\00", align 1
@.str.64 = private unnamed_addr constant [5 x i8] c"fork\00", align 1

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local void @rio_readinitb(%struct.rio_t*, i32) #0 !dbg !67 {
  %3 = alloca %struct.rio_t*, align 8
  %4 = alloca i32, align 4
  store %struct.rio_t* %0, %struct.rio_t** %3, align 8
  call void @llvm.dbg.declare(metadata %struct.rio_t** %3, metadata !82, metadata !DIExpression()), !dbg !83
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !84, metadata !DIExpression()), !dbg !85
  %5 = load i32, i32* %4, align 4, !dbg !86
  %6 = load %struct.rio_t*, %struct.rio_t** %3, align 8, !dbg !87
  %7 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %6, i32 0, i32 0, !dbg !88
  store i32 %5, i32* %7, align 8, !dbg !89
  %8 = load %struct.rio_t*, %struct.rio_t** %3, align 8, !dbg !90
  %9 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %8, i32 0, i32 1, !dbg !91
  store i32 0, i32* %9, align 4, !dbg !92
  %10 = load %struct.rio_t*, %struct.rio_t** %3, align 8, !dbg !93
  %11 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %10, i32 0, i32 3, !dbg !94
  %12 = getelementptr inbounds [1024 x i8], [1024 x i8]* %11, i32 0, i32 0, !dbg !93
  %13 = load %struct.rio_t*, %struct.rio_t** %3, align 8, !dbg !95
  %14 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %13, i32 0, i32 2, !dbg !96
  store i8* %12, i8** %14, align 8, !dbg !97
  ret void, !dbg !98
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local i64 @writen(i32, i8*, i64) #0 !dbg !99 {
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !109, metadata !DIExpression()), !dbg !110
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !111, metadata !DIExpression()), !dbg !112
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !113, metadata !DIExpression()), !dbg !114
  call void @llvm.dbg.declare(metadata i64* %8, metadata !115, metadata !DIExpression()), !dbg !116
  %11 = load i64, i64* %7, align 8, !dbg !117
  store i64 %11, i64* %8, align 8, !dbg !116
  call void @llvm.dbg.declare(metadata i64* %9, metadata !118, metadata !DIExpression()), !dbg !119
  call void @llvm.dbg.declare(metadata i8** %10, metadata !120, metadata !DIExpression()), !dbg !121
  %12 = load i8*, i8** %6, align 8, !dbg !122
  store i8* %12, i8** %10, align 8, !dbg !121
  br label %13, !dbg !123

; <label>:13:                                     ; preds = %29, %3
  %14 = load i64, i64* %8, align 8, !dbg !124
  %15 = icmp ugt i64 %14, 0, !dbg !125
  br i1 %15, label %16, label %36, !dbg !123

; <label>:16:                                     ; preds = %13
  %17 = load i32, i32* %5, align 4, !dbg !126
  %18 = load i8*, i8** %10, align 8, !dbg !129
  %19 = load i64, i64* %8, align 8, !dbg !130
  %20 = call i64 @write(i32 %17, i8* %18, i64 %19), !dbg !131
  store i64 %20, i64* %9, align 8, !dbg !132
  %21 = icmp sle i64 %20, 0, !dbg !133
  br i1 %21, label %22, label %29, !dbg !134

; <label>:22:                                     ; preds = %16
  %23 = call i32* @__errno_location() #8, !dbg !135
  %24 = load i32, i32* %23, align 4, !dbg !135
  %25 = icmp eq i32 %24, 4, !dbg !138
  br i1 %25, label %26, label %27, !dbg !139

; <label>:26:                                     ; preds = %22
  store i64 0, i64* %9, align 8, !dbg !140
  br label %28, !dbg !141

; <label>:27:                                     ; preds = %22
  store i64 -1, i64* %4, align 8, !dbg !142
  br label %38, !dbg !142

; <label>:28:                                     ; preds = %26
  br label %29, !dbg !143

; <label>:29:                                     ; preds = %28, %16
  %30 = load i64, i64* %9, align 8, !dbg !144
  %31 = load i64, i64* %8, align 8, !dbg !145
  %32 = sub i64 %31, %30, !dbg !145
  store i64 %32, i64* %8, align 8, !dbg !145
  %33 = load i64, i64* %9, align 8, !dbg !146
  %34 = load i8*, i8** %10, align 8, !dbg !147
  %35 = getelementptr inbounds i8, i8* %34, i64 %33, !dbg !147
  store i8* %35, i8** %10, align 8, !dbg !147
  br label %13, !dbg !123, !llvm.loop !148

; <label>:36:                                     ; preds = %13
  %37 = load i64, i64* %7, align 8, !dbg !150
  store i64 %37, i64* %4, align 8, !dbg !151
  br label %38, !dbg !151

; <label>:38:                                     ; preds = %36, %27
  %39 = load i64, i64* %4, align 8, !dbg !152
  ret i64 %39, !dbg !152
}

declare i64 @write(i32, i8*, i64) #2

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #3

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local i64 @rio_readlineb(%struct.rio_t*, i8*, i64) #0 !dbg !153 {
  %4 = alloca i64, align 8
  %5 = alloca %struct.rio_t*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca i8*, align 8
  store %struct.rio_t* %0, %struct.rio_t** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.rio_t** %5, metadata !156, metadata !DIExpression()), !dbg !157
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !158, metadata !DIExpression()), !dbg !159
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !160, metadata !DIExpression()), !dbg !161
  call void @llvm.dbg.declare(metadata i32* %8, metadata !162, metadata !DIExpression()), !dbg !163
  call void @llvm.dbg.declare(metadata i32* %9, metadata !164, metadata !DIExpression()), !dbg !165
  call void @llvm.dbg.declare(metadata i8* %10, metadata !166, metadata !DIExpression()), !dbg !167
  call void @llvm.dbg.declare(metadata i8** %11, metadata !168, metadata !DIExpression()), !dbg !169
  %12 = load i8*, i8** %6, align 8, !dbg !170
  store i8* %12, i8** %11, align 8, !dbg !169
  store i32 1, i32* %8, align 4, !dbg !171
  br label %13, !dbg !173

; <label>:13:                                     ; preds = %42, %3
  %14 = load i32, i32* %8, align 4, !dbg !174
  %15 = sext i32 %14 to i64, !dbg !174
  %16 = load i64, i64* %7, align 8, !dbg !176
  %17 = icmp ult i64 %15, %16, !dbg !177
  br i1 %17, label %18, label %45, !dbg !178

; <label>:18:                                     ; preds = %13
  %19 = load %struct.rio_t*, %struct.rio_t** %5, align 8, !dbg !179
  %20 = call i64 @rio_read(%struct.rio_t* %19, i8* %10, i64 1), !dbg !182
  %21 = trunc i64 %20 to i32, !dbg !182
  store i32 %21, i32* %9, align 4, !dbg !183
  %22 = icmp eq i32 %21, 1, !dbg !184
  br i1 %22, label %23, label %32, !dbg !185

; <label>:23:                                     ; preds = %18
  %24 = load i8, i8* %10, align 1, !dbg !186
  %25 = load i8*, i8** %11, align 8, !dbg !188
  %26 = getelementptr inbounds i8, i8* %25, i32 1, !dbg !188
  store i8* %26, i8** %11, align 8, !dbg !188
  store i8 %24, i8* %25, align 1, !dbg !189
  %27 = load i8, i8* %10, align 1, !dbg !190
  %28 = sext i8 %27 to i32, !dbg !190
  %29 = icmp eq i32 %28, 10, !dbg !192
  br i1 %29, label %30, label %31, !dbg !193

; <label>:30:                                     ; preds = %23
  br label %45, !dbg !194

; <label>:31:                                     ; preds = %23
  br label %41, !dbg !195

; <label>:32:                                     ; preds = %18
  %33 = load i32, i32* %9, align 4, !dbg !196
  %34 = icmp eq i32 %33, 0, !dbg !198
  br i1 %34, label %35, label %40, !dbg !199

; <label>:35:                                     ; preds = %32
  %36 = load i32, i32* %8, align 4, !dbg !200
  %37 = icmp eq i32 %36, 1, !dbg !203
  br i1 %37, label %38, label %39, !dbg !204

; <label>:38:                                     ; preds = %35
  store i64 0, i64* %4, align 8, !dbg !205
  br label %49, !dbg !205

; <label>:39:                                     ; preds = %35
  br label %45, !dbg !206

; <label>:40:                                     ; preds = %32
  store i64 -1, i64* %4, align 8, !dbg !207
  br label %49, !dbg !207

; <label>:41:                                     ; preds = %31
  br label %42, !dbg !208

; <label>:42:                                     ; preds = %41
  %43 = load i32, i32* %8, align 4, !dbg !209
  %44 = add nsw i32 %43, 1, !dbg !209
  store i32 %44, i32* %8, align 4, !dbg !209
  br label %13, !dbg !210, !llvm.loop !211

; <label>:45:                                     ; preds = %39, %30, %13
  %46 = load i8*, i8** %11, align 8, !dbg !213
  store i8 0, i8* %46, align 1, !dbg !214
  %47 = load i32, i32* %8, align 4, !dbg !215
  %48 = sext i32 %47 to i64, !dbg !215
  store i64 %48, i64* %4, align 8, !dbg !216
  br label %49, !dbg !216

; <label>:49:                                     ; preds = %45, %40, %38
  %50 = load i64, i64* %4, align 8, !dbg !217
  ret i64 %50, !dbg !217
}

; Function Attrs: noinline nounwind sspstrong uwtable
define internal i64 @rio_read(%struct.rio_t*, i8*, i64) #0 !dbg !218 {
  %4 = alloca i64, align 8
  %5 = alloca %struct.rio_t*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  store %struct.rio_t* %0, %struct.rio_t** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.rio_t** %5, metadata !221, metadata !DIExpression()), !dbg !222
  store i8* %1, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !223, metadata !DIExpression()), !dbg !224
  store i64 %2, i64* %7, align 8
  call void @llvm.dbg.declare(metadata i64* %7, metadata !225, metadata !DIExpression()), !dbg !226
  call void @llvm.dbg.declare(metadata i32* %8, metadata !227, metadata !DIExpression()), !dbg !228
  br label %9, !dbg !229

; <label>:9:                                      ; preds = %48, %3
  %10 = load %struct.rio_t*, %struct.rio_t** %5, align 8, !dbg !230
  %11 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %10, i32 0, i32 1, !dbg !231
  %12 = load i32, i32* %11, align 4, !dbg !231
  %13 = icmp sle i32 %12, 0, !dbg !232
  br i1 %13, label %14, label %49, !dbg !229

; <label>:14:                                     ; preds = %9
  %15 = load %struct.rio_t*, %struct.rio_t** %5, align 8, !dbg !233
  %16 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %15, i32 0, i32 0, !dbg !235
  %17 = load i32, i32* %16, align 8, !dbg !235
  %18 = load %struct.rio_t*, %struct.rio_t** %5, align 8, !dbg !236
  %19 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %18, i32 0, i32 3, !dbg !237
  %20 = getelementptr inbounds [1024 x i8], [1024 x i8]* %19, i32 0, i32 0, !dbg !236
  %21 = call i64 @read(i32 %17, i8* %20, i64 1024), !dbg !238
  %22 = trunc i64 %21 to i32, !dbg !238
  %23 = load %struct.rio_t*, %struct.rio_t** %5, align 8, !dbg !239
  %24 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %23, i32 0, i32 1, !dbg !240
  store i32 %22, i32* %24, align 4, !dbg !241
  %25 = load %struct.rio_t*, %struct.rio_t** %5, align 8, !dbg !242
  %26 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %25, i32 0, i32 1, !dbg !244
  %27 = load i32, i32* %26, align 4, !dbg !244
  %28 = icmp slt i32 %27, 0, !dbg !245
  br i1 %28, label %29, label %35, !dbg !246

; <label>:29:                                     ; preds = %14
  %30 = call i32* @__errno_location() #8, !dbg !247
  %31 = load i32, i32* %30, align 4, !dbg !247
  %32 = icmp ne i32 %31, 4, !dbg !250
  br i1 %32, label %33, label %34, !dbg !251

; <label>:33:                                     ; preds = %29
  store i64 -1, i64* %4, align 8, !dbg !252
  br label %82, !dbg !252

; <label>:34:                                     ; preds = %29
  br label %48, !dbg !253

; <label>:35:                                     ; preds = %14
  %36 = load %struct.rio_t*, %struct.rio_t** %5, align 8, !dbg !254
  %37 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %36, i32 0, i32 1, !dbg !256
  %38 = load i32, i32* %37, align 4, !dbg !256
  %39 = icmp eq i32 %38, 0, !dbg !257
  br i1 %39, label %40, label %41, !dbg !258

; <label>:40:                                     ; preds = %35
  store i64 0, i64* %4, align 8, !dbg !259
  br label %82, !dbg !259

; <label>:41:                                     ; preds = %35
  %42 = load %struct.rio_t*, %struct.rio_t** %5, align 8, !dbg !260
  %43 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %42, i32 0, i32 3, !dbg !261
  %44 = getelementptr inbounds [1024 x i8], [1024 x i8]* %43, i32 0, i32 0, !dbg !260
  %45 = load %struct.rio_t*, %struct.rio_t** %5, align 8, !dbg !262
  %46 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %45, i32 0, i32 2, !dbg !263
  store i8* %44, i8** %46, align 8, !dbg !264
  br label %47

; <label>:47:                                     ; preds = %41
  br label %48

; <label>:48:                                     ; preds = %47, %34
  br label %9, !dbg !229, !llvm.loop !265

; <label>:49:                                     ; preds = %9
  %50 = load i64, i64* %7, align 8, !dbg !267
  %51 = trunc i64 %50 to i32, !dbg !267
  store i32 %51, i32* %8, align 4, !dbg !268
  %52 = load %struct.rio_t*, %struct.rio_t** %5, align 8, !dbg !269
  %53 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %52, i32 0, i32 1, !dbg !271
  %54 = load i32, i32* %53, align 4, !dbg !271
  %55 = sext i32 %54 to i64, !dbg !269
  %56 = load i64, i64* %7, align 8, !dbg !272
  %57 = icmp ult i64 %55, %56, !dbg !273
  br i1 %57, label %58, label %62, !dbg !274

; <label>:58:                                     ; preds = %49
  %59 = load %struct.rio_t*, %struct.rio_t** %5, align 8, !dbg !275
  %60 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %59, i32 0, i32 1, !dbg !276
  %61 = load i32, i32* %60, align 4, !dbg !276
  store i32 %61, i32* %8, align 4, !dbg !277
  br label %62, !dbg !278

; <label>:62:                                     ; preds = %58, %49
  %63 = load i8*, i8** %6, align 8, !dbg !279
  %64 = load %struct.rio_t*, %struct.rio_t** %5, align 8, !dbg !280
  %65 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %64, i32 0, i32 2, !dbg !281
  %66 = load i8*, i8** %65, align 8, !dbg !281
  %67 = load i32, i32* %8, align 4, !dbg !282
  %68 = sext i32 %67 to i64, !dbg !282
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %63, i8* align 1 %66, i64 %68, i1 false), !dbg !283
  %69 = load i32, i32* %8, align 4, !dbg !284
  %70 = load %struct.rio_t*, %struct.rio_t** %5, align 8, !dbg !285
  %71 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %70, i32 0, i32 2, !dbg !286
  %72 = load i8*, i8** %71, align 8, !dbg !287
  %73 = sext i32 %69 to i64, !dbg !287
  %74 = getelementptr inbounds i8, i8* %72, i64 %73, !dbg !287
  store i8* %74, i8** %71, align 8, !dbg !287
  %75 = load i32, i32* %8, align 4, !dbg !288
  %76 = load %struct.rio_t*, %struct.rio_t** %5, align 8, !dbg !289
  %77 = getelementptr inbounds %struct.rio_t, %struct.rio_t* %76, i32 0, i32 1, !dbg !290
  %78 = load i32, i32* %77, align 4, !dbg !291
  %79 = sub nsw i32 %78, %75, !dbg !291
  store i32 %79, i32* %77, align 4, !dbg !291
  %80 = load i32, i32* %8, align 4, !dbg !292
  %81 = sext i32 %80 to i64, !dbg !292
  store i64 %81, i64* %4, align 8, !dbg !293
  br label %82, !dbg !293

; <label>:82:                                     ; preds = %62, %40, %33
  %83 = load i64, i64* %4, align 8, !dbg !294
  ret i64 %83, !dbg !294
}

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local void @format_size(i8*, %struct.stat*) #0 !dbg !295 {
  %3 = alloca i8*, align 8
  %4 = alloca %struct.stat*, align 8
  %5 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !336, metadata !DIExpression()), !dbg !337
  store %struct.stat* %1, %struct.stat** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.stat** %4, metadata !338, metadata !DIExpression()), !dbg !339
  %6 = load %struct.stat*, %struct.stat** %4, align 8, !dbg !340
  %7 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 3, !dbg !340
  %8 = load i32, i32* %7, align 8, !dbg !340
  %9 = and i32 %8, 61440, !dbg !340
  %10 = icmp eq i32 %9, 16384, !dbg !340
  br i1 %10, label %11, label %14, !dbg !342

; <label>:11:                                     ; preds = %2
  %12 = load i8*, i8** %3, align 8, !dbg !343
  %13 = call i32 (i8*, i8*, ...) @sprintf(i8* %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i32 0, i32 0)) #9, !dbg !345
  br label %54, !dbg !346

; <label>:14:                                     ; preds = %2
  call void @llvm.dbg.declare(metadata i64* %5, metadata !347, metadata !DIExpression()), !dbg !350
  %15 = load %struct.stat*, %struct.stat** %4, align 8, !dbg !351
  %16 = getelementptr inbounds %struct.stat, %struct.stat* %15, i32 0, i32 8, !dbg !352
  %17 = load i64, i64* %16, align 8, !dbg !352
  store i64 %17, i64* %5, align 8, !dbg !350
  %18 = load i64, i64* %5, align 8, !dbg !353
  %19 = icmp slt i64 %18, 1024, !dbg !355
  br i1 %19, label %20, label %24, !dbg !356

; <label>:20:                                     ; preds = %14
  %21 = load i8*, i8** %3, align 8, !dbg !357
  %22 = load i64, i64* %5, align 8, !dbg !359
  %23 = call i32 (i8*, i8*, ...) @sprintf(i8* %21, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i32 0, i32 0), i64 %22) #9, !dbg !360
  br label %53, !dbg !361

; <label>:24:                                     ; preds = %14
  %25 = load i64, i64* %5, align 8, !dbg !362
  %26 = icmp slt i64 %25, 1048576, !dbg !364
  br i1 %26, label %27, label %33, !dbg !365

; <label>:27:                                     ; preds = %24
  %28 = load i8*, i8** %3, align 8, !dbg !366
  %29 = load i64, i64* %5, align 8, !dbg !368
  %30 = sitofp i64 %29 to double, !dbg !369
  %31 = fdiv double %30, 1.024000e+03, !dbg !370
  %32 = call i32 (i8*, i8*, ...) @sprintf(i8* %28, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0), double %31) #9, !dbg !371
  br label %52, !dbg !372

; <label>:33:                                     ; preds = %24
  %34 = load i64, i64* %5, align 8, !dbg !373
  %35 = icmp slt i64 %34, 1073741824, !dbg !375
  br i1 %35, label %36, label %43, !dbg !376

; <label>:36:                                     ; preds = %33
  %37 = load i8*, i8** %3, align 8, !dbg !377
  %38 = load i64, i64* %5, align 8, !dbg !379
  %39 = sitofp i64 %38 to double, !dbg !380
  %40 = fdiv double %39, 1.024000e+03, !dbg !381
  %41 = fdiv double %40, 1.024000e+03, !dbg !382
  %42 = call i32 (i8*, i8*, ...) @sprintf(i8* %37, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i32 0, i32 0), double %41) #9, !dbg !383
  br label %51, !dbg !384

; <label>:43:                                     ; preds = %33
  %44 = load i8*, i8** %3, align 8, !dbg !385
  %45 = load i64, i64* %5, align 8, !dbg !387
  %46 = sitofp i64 %45 to double, !dbg !388
  %47 = fdiv double %46, 1.024000e+03, !dbg !389
  %48 = fdiv double %47, 1.024000e+03, !dbg !390
  %49 = fdiv double %48, 1.024000e+03, !dbg !391
  %50 = call i32 (i8*, i8*, ...) @sprintf(i8* %44, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i32 0, i32 0), double %49) #9, !dbg !392
  br label %51

; <label>:51:                                     ; preds = %43, %36
  br label %52

; <label>:52:                                     ; preds = %51, %27
  br label %53

; <label>:53:                                     ; preds = %52, %20
  br label %54

; <label>:54:                                     ; preds = %53, %11
  ret void, !dbg !393
}

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #4

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local void @handle_directory_request(i32, i32, i8*) #0 !dbg !394 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca [1024 x i8], align 16
  %8 = alloca [32 x i8], align 16
  %9 = alloca [16 x i8], align 16
  %10 = alloca %struct.stat, align 8
  %11 = alloca %struct.__dirstream*, align 8
  %12 = alloca %struct.dirent*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !397, metadata !DIExpression()), !dbg !398
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !399, metadata !DIExpression()), !dbg !400
  store i8* %2, i8** %6, align 8
  call void @llvm.dbg.declare(metadata i8** %6, metadata !401, metadata !DIExpression()), !dbg !402
  call void @llvm.dbg.declare(metadata [1024 x i8]* %7, metadata !403, metadata !DIExpression()), !dbg !404
  call void @llvm.dbg.declare(metadata [32 x i8]* %8, metadata !405, metadata !DIExpression()), !dbg !409
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !410, metadata !DIExpression()), !dbg !414
  call void @llvm.dbg.declare(metadata %struct.stat* %10, metadata !415, metadata !DIExpression()), !dbg !416
  %15 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i32 0, i32 0, !dbg !417
  %16 = call i32 (i8*, i8*, ...) @sprintf(i8* %15, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.36, i32 0, i32 0)) #9, !dbg !418
  %17 = load i32, i32* %4, align 4, !dbg !419
  %18 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i32 0, i32 0, !dbg !420
  %19 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i32 0, i32 0, !dbg !421
  %20 = call i64 @strlen(i8* %19) #10, !dbg !422
  %21 = call i64 @writen(i32 %17, i8* %18, i64 %20), !dbg !423
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %11, metadata !424, metadata !DIExpression()), !dbg !429
  %22 = load i32, i32* %5, align 4, !dbg !430
  %23 = call %struct.__dirstream* @fdopendir(i32 %22), !dbg !431
  store %struct.__dirstream* %23, %struct.__dirstream** %11, align 8, !dbg !429
  call void @llvm.dbg.declare(metadata %struct.dirent** %12, metadata !432, metadata !DIExpression()), !dbg !446
  call void @llvm.dbg.declare(metadata i32* %13, metadata !447, metadata !DIExpression()), !dbg !448
  br label %24, !dbg !449

; <label>:24:                                     ; preds = %94, %48, %40, %3
  %25 = load %struct.__dirstream*, %struct.__dirstream** %11, align 8, !dbg !450
  %26 = call %struct.dirent* @readdir(%struct.__dirstream* %25), !dbg !451
  store %struct.dirent* %26, %struct.dirent** %12, align 8, !dbg !452
  %27 = icmp ne %struct.dirent* %26, null, !dbg !453
  br i1 %27, label %28, label %97, !dbg !449

; <label>:28:                                     ; preds = %24
  %29 = load %struct.dirent*, %struct.dirent** %12, align 8, !dbg !454
  %30 = getelementptr inbounds %struct.dirent, %struct.dirent* %29, i32 0, i32 4, !dbg !457
  %31 = getelementptr inbounds [256 x i8], [256 x i8]* %30, i32 0, i32 0, !dbg !454
  %32 = call i32 @strcmp(i8* %31, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.37, i32 0, i32 0)) #10, !dbg !458
  %33 = icmp ne i32 %32, 0, !dbg !458
  br i1 %33, label %34, label %40, !dbg !459

; <label>:34:                                     ; preds = %28
  %35 = load %struct.dirent*, %struct.dirent** %12, align 8, !dbg !460
  %36 = getelementptr inbounds %struct.dirent, %struct.dirent* %35, i32 0, i32 4, !dbg !461
  %37 = getelementptr inbounds [256 x i8], [256 x i8]* %36, i32 0, i32 0, !dbg !460
  %38 = call i32 @strcmp(i8* %37, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i32 0, i32 0)) #10, !dbg !462
  %39 = icmp ne i32 %38, 0, !dbg !462
  br i1 %39, label %41, label %40, !dbg !463

; <label>:40:                                     ; preds = %34, %28
  br label %24, !dbg !464, !llvm.loop !466

; <label>:41:                                     ; preds = %34
  %42 = load i32, i32* %5, align 4, !dbg !468
  %43 = load %struct.dirent*, %struct.dirent** %12, align 8, !dbg !470
  %44 = getelementptr inbounds %struct.dirent, %struct.dirent* %43, i32 0, i32 4, !dbg !471
  %45 = getelementptr inbounds [256 x i8], [256 x i8]* %44, i32 0, i32 0, !dbg !470
  %46 = call i32 (i32, i8*, i32, ...) @openat(i32 %42, i8* %45, i32 0), !dbg !472
  store i32 %46, i32* %13, align 4, !dbg !473
  %47 = icmp eq i32 %46, -1, !dbg !474
  br i1 %47, label %48, label %52, !dbg !475

; <label>:48:                                     ; preds = %41
  %49 = load %struct.dirent*, %struct.dirent** %12, align 8, !dbg !476
  %50 = getelementptr inbounds %struct.dirent, %struct.dirent* %49, i32 0, i32 4, !dbg !478
  %51 = getelementptr inbounds [256 x i8], [256 x i8]* %50, i32 0, i32 0, !dbg !476
  call void @perror(i8* %51), !dbg !479
  br label %24, !dbg !480, !llvm.loop !466

; <label>:52:                                     ; preds = %41
  %53 = load i32, i32* %13, align 4, !dbg !481
  %54 = call i32 @fstat(i32 %53, %struct.stat* %10) #9, !dbg !482
  %55 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0, !dbg !483
  %56 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 12, !dbg !484
  %57 = getelementptr inbounds %struct.timespec, %struct.timespec* %56, i32 0, i32 0, !dbg !484
  %58 = call %struct.tm* @localtime(i64* %57) #9, !dbg !485
  %59 = call i64 @strftime(i8* %55, i64 32, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.39, i32 0, i32 0), %struct.tm* %58) #9, !dbg !486
  %60 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !487
  call void @format_size(i8* %60, %struct.stat* %10), !dbg !488
  %61 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 3, !dbg !489
  %62 = load i32, i32* %61, align 8, !dbg !489
  %63 = and i32 %62, 61440, !dbg !489
  %64 = icmp eq i32 %63, 32768, !dbg !489
  br i1 %64, label %70, label %65, !dbg !491

; <label>:65:                                     ; preds = %52
  %66 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 3, !dbg !492
  %67 = load i32, i32* %66, align 8, !dbg !492
  %68 = and i32 %67, 61440, !dbg !492
  %69 = icmp eq i32 %68, 16384, !dbg !492
  br i1 %69, label %70, label %94, !dbg !493

; <label>:70:                                     ; preds = %65, %52
  call void @llvm.dbg.declare(metadata i8** %14, metadata !494, metadata !DIExpression()), !dbg !496
  %71 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 3, !dbg !497
  %72 = load i32, i32* %71, align 8, !dbg !497
  %73 = and i32 %72, 61440, !dbg !497
  %74 = icmp eq i32 %73, 16384, !dbg !497
  %75 = zext i1 %74 to i64, !dbg !497
  %76 = select i1 %74, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.41, i32 0, i32 0), !dbg !497
  store i8* %76, i8** %14, align 8, !dbg !496
  %77 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i32 0, i32 0, !dbg !498
  %78 = load %struct.dirent*, %struct.dirent** %12, align 8, !dbg !499
  %79 = getelementptr inbounds %struct.dirent, %struct.dirent* %78, i32 0, i32 4, !dbg !500
  %80 = getelementptr inbounds [256 x i8], [256 x i8]* %79, i32 0, i32 0, !dbg !499
  %81 = load i8*, i8** %14, align 8, !dbg !501
  %82 = load %struct.dirent*, %struct.dirent** %12, align 8, !dbg !502
  %83 = getelementptr inbounds %struct.dirent, %struct.dirent* %82, i32 0, i32 4, !dbg !503
  %84 = getelementptr inbounds [256 x i8], [256 x i8]* %83, i32 0, i32 0, !dbg !502
  %85 = load i8*, i8** %14, align 8, !dbg !504
  %86 = getelementptr inbounds [32 x i8], [32 x i8]* %8, i32 0, i32 0, !dbg !505
  %87 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !506
  %88 = call i32 (i8*, i8*, ...) @sprintf(i8* %77, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.42, i32 0, i32 0), i8* %80, i8* %81, i8* %84, i8* %85, i8* %86, i8* %87) #9, !dbg !507
  %89 = load i32, i32* %4, align 4, !dbg !508
  %90 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i32 0, i32 0, !dbg !509
  %91 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i32 0, i32 0, !dbg !510
  %92 = call i64 @strlen(i8* %91) #10, !dbg !511
  %93 = call i64 @writen(i32 %89, i8* %90, i64 %92), !dbg !512
  br label %94, !dbg !513

; <label>:94:                                     ; preds = %70, %65
  %95 = load i32, i32* %13, align 4, !dbg !514
  %96 = call i32 @close(i32 %95), !dbg !515
  br label %24, !dbg !449, !llvm.loop !466

; <label>:97:                                     ; preds = %24
  %98 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i32 0, i32 0, !dbg !516
  %99 = call i32 (i8*, i8*, ...) @sprintf(i8* %98, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i32 0, i32 0)) #9, !dbg !517
  %100 = load i32, i32* %4, align 4, !dbg !518
  %101 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i32 0, i32 0, !dbg !519
  %102 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i32 0, i32 0, !dbg !520
  %103 = call i64 @strlen(i8* %102) #10, !dbg !521
  %104 = call i64 @writen(i32 %100, i8* %101, i64 %103), !dbg !522
  %105 = load %struct.__dirstream*, %struct.__dirstream** %11, align 8, !dbg !523
  %106 = call i32 @closedir(%struct.__dirstream* %105), !dbg !524
  ret void, !dbg !525
}

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #5

declare %struct.__dirstream* @fdopendir(i32) #2

declare %struct.dirent* @readdir(%struct.__dirstream*) #2

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #5

declare i32 @openat(i32, i8*, i32, ...) #2

declare void @perror(i8*) #2

; Function Attrs: nounwind
declare i32 @fstat(i32, %struct.stat*) #4

; Function Attrs: nounwind
declare i64 @strftime(i8*, i64, i8*, %struct.tm*) #4

; Function Attrs: nounwind
declare %struct.tm* @localtime(i64*) #4

declare i32 @close(i32) #2

declare i32 @closedir(%struct.__dirstream*) #2

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local i32 @open_listenfd(i32) #0 !dbg !526 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.sockaddr_in, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !529, metadata !DIExpression()), !dbg !530
  call void @llvm.dbg.declare(metadata i32* %4, metadata !531, metadata !DIExpression()), !dbg !532
  call void @llvm.dbg.declare(metadata i32* %5, metadata !533, metadata !DIExpression()), !dbg !534
  store i32 1, i32* %5, align 4, !dbg !534
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in* %6, metadata !535, metadata !DIExpression()), !dbg !551
  %7 = call i32 @socket(i32 2, i32 1, i32 0) #9, !dbg !552
  store i32 %7, i32* %4, align 4, !dbg !554
  %8 = icmp slt i32 %7, 0, !dbg !555
  br i1 %8, label %9, label %10, !dbg !556

; <label>:9:                                      ; preds = %1
  store i32 -1, i32* %2, align 4, !dbg !557
  br label %44, !dbg !557

; <label>:10:                                     ; preds = %1
  %11 = load i32, i32* %4, align 4, !dbg !558
  %12 = bitcast i32* %5 to i8*, !dbg !560
  %13 = call i32 @setsockopt(i32 %11, i32 1, i32 2, i8* %12, i32 4) #9, !dbg !561
  %14 = icmp slt i32 %13, 0, !dbg !562
  br i1 %14, label %15, label %16, !dbg !563

; <label>:15:                                     ; preds = %10
  store i32 -1, i32* %2, align 4, !dbg !564
  br label %44, !dbg !564

; <label>:16:                                     ; preds = %10
  %17 = load i32, i32* %4, align 4, !dbg !565
  %18 = bitcast i32* %5 to i8*, !dbg !567
  %19 = call i32 @setsockopt(i32 %17, i32 6, i32 3, i8* %18, i32 4) #9, !dbg !568
  %20 = icmp slt i32 %19, 0, !dbg !569
  br i1 %20, label %21, label %22, !dbg !570

; <label>:21:                                     ; preds = %16
  store i32 -1, i32* %2, align 4, !dbg !571
  br label %44, !dbg !571

; <label>:22:                                     ; preds = %16
  %23 = bitcast %struct.sockaddr_in* %6 to i8*, !dbg !572
  call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 0, i64 16, i1 false), !dbg !572
  %24 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %6, i32 0, i32 0, !dbg !573
  store i16 2, i16* %24, align 4, !dbg !574
  %25 = call i32 @htonl(i32 0) #8, !dbg !575
  %26 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %6, i32 0, i32 2, !dbg !576
  %27 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %26, i32 0, i32 0, !dbg !577
  store i32 %25, i32* %27, align 4, !dbg !578
  %28 = load i32, i32* %3, align 4, !dbg !579
  %29 = trunc i32 %28 to i16, !dbg !580
  %30 = call zeroext i16 @htons(i16 zeroext %29) #8, !dbg !581
  %31 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %6, i32 0, i32 1, !dbg !582
  store i16 %30, i16* %31, align 2, !dbg !583
  %32 = load i32, i32* %4, align 4, !dbg !584
  %33 = bitcast %struct.sockaddr_in* %6 to %struct.sockaddr*, !dbg !586
  %34 = call i32 @bind(i32 %32, %struct.sockaddr* %33, i32 16) #9, !dbg !587
  %35 = icmp slt i32 %34, 0, !dbg !588
  br i1 %35, label %36, label %37, !dbg !589

; <label>:36:                                     ; preds = %22
  store i32 -1, i32* %2, align 4, !dbg !590
  br label %44, !dbg !590

; <label>:37:                                     ; preds = %22
  %38 = load i32, i32* %4, align 4, !dbg !591
  %39 = call i32 @listen(i32 %38, i32 1024) #9, !dbg !593
  %40 = icmp slt i32 %39, 0, !dbg !594
  br i1 %40, label %41, label %42, !dbg !595

; <label>:41:                                     ; preds = %37
  store i32 -1, i32* %2, align 4, !dbg !596
  br label %44, !dbg !596

; <label>:42:                                     ; preds = %37
  %43 = load i32, i32* %4, align 4, !dbg !597
  store i32 %43, i32* %2, align 4, !dbg !598
  br label %44, !dbg !598

; <label>:44:                                     ; preds = %42, %41, %36, %21, %15, %9
  %45 = load i32, i32* %2, align 4, !dbg !599
  ret i32 %45, !dbg !599
}

; Function Attrs: nounwind
declare i32 @socket(i32, i32, i32) #4

; Function Attrs: nounwind
declare i32 @setsockopt(i32, i32, i32, i8*, i32) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1) #6

; Function Attrs: nounwind readnone
declare i32 @htonl(i32) #3

; Function Attrs: nounwind readnone
declare zeroext i16 @htons(i16 zeroext) #3

; Function Attrs: nounwind
declare i32 @bind(i32, %struct.sockaddr*, i32) #4

; Function Attrs: nounwind
declare i32 @listen(i32, i32) #4

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local void @url_decode(i8*, i8*, i32) #0 !dbg !600 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca [3 x i8], align 1
  store i8* %0, i8** %4, align 8
  call void @llvm.dbg.declare(metadata i8** %4, metadata !603, metadata !DIExpression()), !dbg !604
  store i8* %1, i8** %5, align 8
  call void @llvm.dbg.declare(metadata i8** %5, metadata !605, metadata !DIExpression()), !dbg !606
  store i32 %2, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !607, metadata !DIExpression()), !dbg !608
  call void @llvm.dbg.declare(metadata i8** %7, metadata !609, metadata !DIExpression()), !dbg !610
  %9 = load i8*, i8** %4, align 8, !dbg !611
  store i8* %9, i8** %7, align 8, !dbg !610
  call void @llvm.dbg.declare(metadata [3 x i8]* %8, metadata !612, metadata !DIExpression()), !dbg !614
  %10 = bitcast [3 x i8]* %8 to i8*, !dbg !614
  call void @llvm.memset.p0i8.i64(i8* align 1 %10, i8 0, i64 3, i1 false), !dbg !614
  br label %11, !dbg !615

; <label>:11:                                     ; preds = %44, %3
  %12 = load i8*, i8** %7, align 8, !dbg !616
  %13 = load i8, i8* %12, align 1, !dbg !617
  %14 = sext i8 %13 to i32, !dbg !617
  %15 = icmp ne i32 %14, 0, !dbg !617
  br i1 %15, label %16, label %20, !dbg !618

; <label>:16:                                     ; preds = %11
  %17 = load i32, i32* %6, align 4, !dbg !619
  %18 = add nsw i32 %17, -1, !dbg !619
  store i32 %18, i32* %6, align 4, !dbg !619
  %19 = icmp ne i32 %18, 0, !dbg !618
  br label %20

; <label>:20:                                     ; preds = %16, %11
  %21 = phi i1 [ false, %11 ], [ %19, %16 ], !dbg !620
  br i1 %21, label %22, label %45, !dbg !615

; <label>:22:                                     ; preds = %20
  %23 = load i8*, i8** %7, align 8, !dbg !621
  %24 = load i8, i8* %23, align 1, !dbg !624
  %25 = sext i8 %24 to i32, !dbg !624
  %26 = icmp eq i32 %25, 37, !dbg !625
  br i1 %26, label %27, label %38, !dbg !626

; <label>:27:                                     ; preds = %22
  %28 = getelementptr inbounds [3 x i8], [3 x i8]* %8, i32 0, i32 0, !dbg !627
  %29 = load i8*, i8** %7, align 8, !dbg !629
  %30 = getelementptr inbounds i8, i8* %29, i32 1, !dbg !629
  store i8* %30, i8** %7, align 8, !dbg !629
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %30, i64 2, i1 false), !dbg !627
  %31 = getelementptr inbounds [3 x i8], [3 x i8]* %8, i32 0, i32 0, !dbg !630
  %32 = call i64 @strtoul(i8* %31, i8** null, i32 16) #9, !dbg !631
  %33 = trunc i64 %32 to i8, !dbg !632
  %34 = load i8*, i8** %5, align 8, !dbg !633
  %35 = getelementptr inbounds i8, i8* %34, i32 1, !dbg !633
  store i8* %35, i8** %5, align 8, !dbg !633
  store i8 %33, i8* %34, align 1, !dbg !634
  %36 = load i8*, i8** %7, align 8, !dbg !635
  %37 = getelementptr inbounds i8, i8* %36, i64 2, !dbg !635
  store i8* %37, i8** %7, align 8, !dbg !635
  br label %44, !dbg !636

; <label>:38:                                     ; preds = %22
  %39 = load i8*, i8** %7, align 8, !dbg !637
  %40 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !637
  store i8* %40, i8** %7, align 8, !dbg !637
  %41 = load i8, i8* %39, align 1, !dbg !639
  %42 = load i8*, i8** %5, align 8, !dbg !640
  %43 = getelementptr inbounds i8, i8* %42, i32 1, !dbg !640
  store i8* %43, i8** %5, align 8, !dbg !640
  store i8 %41, i8* %42, align 1, !dbg !641
  br label %44

; <label>:44:                                     ; preds = %38, %27
  br label %11, !dbg !615, !llvm.loop !642

; <label>:45:                                     ; preds = %20
  %46 = load i8*, i8** %5, align 8, !dbg !644
  store i8 0, i8* %46, align 1, !dbg !645
  ret void, !dbg !646
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #6

; Function Attrs: nounwind
declare i64 @strtoul(i8*, i8**, i32) #4

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local void @parse_request(i32, %struct.http_request*) #0 !dbg !647 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.http_request*, align 8
  %5 = alloca %struct.rio_t, align 8
  %6 = alloca [1024 x i8], align 16
  %7 = alloca [1024 x i8], align 16
  %8 = alloca [1024 x i8], align 16
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !660, metadata !DIExpression()), !dbg !661
  store %struct.http_request* %1, %struct.http_request** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.http_request** %4, metadata !662, metadata !DIExpression()), !dbg !663
  call void @llvm.dbg.declare(metadata %struct.rio_t* %5, metadata !664, metadata !DIExpression()), !dbg !665
  call void @llvm.dbg.declare(metadata [1024 x i8]* %6, metadata !666, metadata !DIExpression()), !dbg !667
  call void @llvm.dbg.declare(metadata [1024 x i8]* %7, metadata !668, metadata !DIExpression()), !dbg !669
  call void @llvm.dbg.declare(metadata [1024 x i8]* %8, metadata !670, metadata !DIExpression()), !dbg !671
  %12 = load %struct.http_request*, %struct.http_request** %4, align 8, !dbg !672
  %13 = getelementptr inbounds %struct.http_request, %struct.http_request* %12, i32 0, i32 1, !dbg !673
  store i64 0, i64* %13, align 8, !dbg !674
  %14 = load %struct.http_request*, %struct.http_request** %4, align 8, !dbg !675
  %15 = getelementptr inbounds %struct.http_request, %struct.http_request* %14, i32 0, i32 2, !dbg !676
  store i64 0, i64* %15, align 8, !dbg !677
  %16 = load i32, i32* %3, align 4, !dbg !678
  call void @rio_readinitb(%struct.rio_t* %5, i32 %16), !dbg !679
  %17 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i32 0, i32 0, !dbg !680
  %18 = call i64 @rio_readlineb(%struct.rio_t* %5, i8* %17, i64 1024), !dbg !681
  %19 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i32 0, i32 0, !dbg !682
  %20 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i32 0, i32 0, !dbg !683
  %21 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i32 0, i32 0, !dbg !684
  %22 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %19, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i32 0, i32 0), i8* %20, i8* %21) #9, !dbg !685
  br label %23, !dbg !686

; <label>:23:                                     ; preds = %69, %2
  %24 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0, !dbg !687
  %25 = load i8, i8* %24, align 16, !dbg !687
  %26 = sext i8 %25 to i32, !dbg !687
  %27 = icmp ne i32 %26, 10, !dbg !688
  br i1 %27, label %28, label %33, !dbg !689

; <label>:28:                                     ; preds = %23
  %29 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 1, !dbg !690
  %30 = load i8, i8* %29, align 1, !dbg !690
  %31 = sext i8 %30 to i32, !dbg !690
  %32 = icmp ne i32 %31, 10, !dbg !691
  br label %33

; <label>:33:                                     ; preds = %28, %23
  %34 = phi i1 [ false, %23 ], [ %32, %28 ], !dbg !692
  br i1 %34, label %35, label %70, !dbg !686

; <label>:35:                                     ; preds = %33
  %36 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i32 0, i32 0, !dbg !693
  %37 = call i64 @rio_readlineb(%struct.rio_t* %5, i8* %36, i64 1024), !dbg !695
  %38 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0, !dbg !696
  %39 = load i8, i8* %38, align 16, !dbg !696
  %40 = sext i8 %39 to i32, !dbg !696
  %41 = icmp eq i32 %40, 82, !dbg !698
  br i1 %41, label %42, label %69, !dbg !699

; <label>:42:                                     ; preds = %35
  %43 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 1, !dbg !700
  %44 = load i8, i8* %43, align 1, !dbg !700
  %45 = sext i8 %44 to i32, !dbg !700
  %46 = icmp eq i32 %45, 97, !dbg !701
  br i1 %46, label %47, label %69, !dbg !702

; <label>:47:                                     ; preds = %42
  %48 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 2, !dbg !703
  %49 = load i8, i8* %48, align 2, !dbg !703
  %50 = sext i8 %49 to i32, !dbg !703
  %51 = icmp eq i32 %50, 110, !dbg !704
  br i1 %51, label %52, label %69, !dbg !705

; <label>:52:                                     ; preds = %47
  %53 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i32 0, i32 0, !dbg !706
  %54 = load %struct.http_request*, %struct.http_request** %4, align 8, !dbg !708
  %55 = getelementptr inbounds %struct.http_request, %struct.http_request* %54, i32 0, i32 1, !dbg !709
  %56 = load %struct.http_request*, %struct.http_request** %4, align 8, !dbg !710
  %57 = getelementptr inbounds %struct.http_request, %struct.http_request* %56, i32 0, i32 2, !dbg !711
  %58 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %53, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.45, i32 0, i32 0), i64* %55, i64* %57) #9, !dbg !712
  %59 = load %struct.http_request*, %struct.http_request** %4, align 8, !dbg !713
  %60 = getelementptr inbounds %struct.http_request, %struct.http_request* %59, i32 0, i32 2, !dbg !715
  %61 = load i64, i64* %60, align 8, !dbg !715
  %62 = icmp ne i64 %61, 0, !dbg !716
  br i1 %62, label %63, label %68, !dbg !717

; <label>:63:                                     ; preds = %52
  %64 = load %struct.http_request*, %struct.http_request** %4, align 8, !dbg !718
  %65 = getelementptr inbounds %struct.http_request, %struct.http_request* %64, i32 0, i32 2, !dbg !719
  %66 = load i64, i64* %65, align 8, !dbg !720
  %67 = add i64 %66, 1, !dbg !720
  store i64 %67, i64* %65, align 8, !dbg !720
  br label %68, !dbg !718

; <label>:68:                                     ; preds = %63, %52
  br label %69, !dbg !721

; <label>:69:                                     ; preds = %68, %47, %42, %35
  br label %23, !dbg !686, !llvm.loop !722

; <label>:70:                                     ; preds = %33
  call void @llvm.dbg.declare(metadata i8** %9, metadata !724, metadata !DIExpression()), !dbg !725
  %71 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i32 0, i32 0, !dbg !726
  store i8* %71, i8** %9, align 8, !dbg !725
  %72 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 0, !dbg !727
  %73 = load i8, i8* %72, align 16, !dbg !727
  %74 = sext i8 %73 to i32, !dbg !727
  %75 = icmp eq i32 %74, 47, !dbg !729
  br i1 %75, label %76, label %109, !dbg !730

; <label>:76:                                     ; preds = %70
  %77 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i32 0, i32 0, !dbg !731
  %78 = getelementptr inbounds i8, i8* %77, i64 1, !dbg !733
  store i8* %78, i8** %9, align 8, !dbg !734
  call void @llvm.dbg.declare(metadata i32* %10, metadata !735, metadata !DIExpression()), !dbg !736
  %79 = load i8*, i8** %9, align 8, !dbg !737
  %80 = call i64 @strlen(i8* %79) #10, !dbg !738
  %81 = trunc i64 %80 to i32, !dbg !738
  store i32 %81, i32* %10, align 4, !dbg !736
  %82 = load i32, i32* %10, align 4, !dbg !739
  %83 = icmp eq i32 %82, 0, !dbg !741
  br i1 %83, label %84, label %85, !dbg !742

; <label>:84:                                     ; preds = %76
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.37, i32 0, i32 0), i8** %9, align 8, !dbg !743
  br label %108, !dbg !745

; <label>:85:                                     ; preds = %76
  call void @llvm.dbg.declare(metadata i32* %11, metadata !746, metadata !DIExpression()), !dbg !749
  store i32 0, i32* %11, align 4, !dbg !749
  br label %86, !dbg !750

; <label>:86:                                     ; preds = %104, %85
  %87 = load i32, i32* %11, align 4, !dbg !751
  %88 = load i32, i32* %10, align 4, !dbg !753
  %89 = icmp slt i32 %87, %88, !dbg !754
  br i1 %89, label %90, label %107, !dbg !755

; <label>:90:                                     ; preds = %86
  %91 = load i8*, i8** %9, align 8, !dbg !756
  %92 = load i32, i32* %11, align 4, !dbg !759
  %93 = sext i32 %92 to i64, !dbg !756
  %94 = getelementptr inbounds i8, i8* %91, i64 %93, !dbg !756
  %95 = load i8, i8* %94, align 1, !dbg !756
  %96 = sext i8 %95 to i32, !dbg !756
  %97 = icmp eq i32 %96, 63, !dbg !760
  br i1 %97, label %98, label %103, !dbg !761

; <label>:98:                                     ; preds = %90
  %99 = load i8*, i8** %9, align 8, !dbg !762
  %100 = load i32, i32* %11, align 4, !dbg !764
  %101 = sext i32 %100 to i64, !dbg !762
  %102 = getelementptr inbounds i8, i8* %99, i64 %101, !dbg !762
  store i8 0, i8* %102, align 1, !dbg !765
  br label %107, !dbg !766

; <label>:103:                                    ; preds = %90
  br label %104, !dbg !767

; <label>:104:                                    ; preds = %103
  %105 = load i32, i32* %11, align 4, !dbg !768
  %106 = add nsw i32 %105, 1, !dbg !768
  store i32 %106, i32* %11, align 4, !dbg !768
  br label %86, !dbg !769, !llvm.loop !770

; <label>:107:                                    ; preds = %98, %86
  br label %108

; <label>:108:                                    ; preds = %107, %84
  br label %109, !dbg !772

; <label>:109:                                    ; preds = %108, %70
  %110 = load i8*, i8** %9, align 8, !dbg !773
  %111 = load %struct.http_request*, %struct.http_request** %4, align 8, !dbg !774
  %112 = getelementptr inbounds %struct.http_request, %struct.http_request* %111, i32 0, i32 0, !dbg !775
  %113 = getelementptr inbounds [512 x i8], [512 x i8]* %112, i32 0, i32 0, !dbg !774
  call void @url_decode(i8* %110, i8* %113, i32 1024), !dbg !776
  ret void, !dbg !777
}

; Function Attrs: nounwind
declare i32 @__isoc99_sscanf(i8*, i8*, ...) #4

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local void @log_access(i32, %struct.sockaddr_in*, %struct.http_request*) #0 !dbg !778 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.sockaddr_in*, align 8
  %6 = alloca %struct.http_request*, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !782, metadata !DIExpression()), !dbg !783
  store %struct.sockaddr_in* %1, %struct.sockaddr_in** %5, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in** %5, metadata !784, metadata !DIExpression()), !dbg !785
  store %struct.http_request* %2, %struct.http_request** %6, align 8
  call void @llvm.dbg.declare(metadata %struct.http_request** %6, metadata !786, metadata !DIExpression()), !dbg !787
  %7 = load %struct.sockaddr_in*, %struct.sockaddr_in** %5, align 8, !dbg !788
  %8 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 2, !dbg !789
  %9 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %8, i32 0, i32 0, !dbg !790
  %10 = load i32, i32* %9, align 4, !dbg !790
  %11 = call i8* @inet_ntoa(i32 %10) #9, !dbg !790
  %12 = load %struct.sockaddr_in*, %struct.sockaddr_in** %5, align 8, !dbg !791
  %13 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %12, i32 0, i32 1, !dbg !792
  %14 = load i16, i16* %13, align 2, !dbg !792
  %15 = call zeroext i16 @ntohs(i16 zeroext %14) #8, !dbg !793
  %16 = zext i16 %15 to i32, !dbg !793
  %17 = load i32, i32* %4, align 4, !dbg !794
  %18 = load %struct.http_request*, %struct.http_request** %6, align 8, !dbg !795
  %19 = getelementptr inbounds %struct.http_request, %struct.http_request* %18, i32 0, i32 0, !dbg !796
  %20 = getelementptr inbounds [512 x i8], [512 x i8]* %19, i32 0, i32 0, !dbg !795
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46, i32 0, i32 0), i8* %11, i32 %16, i32 %17, i8* %20), !dbg !797
  ret void, !dbg !798
}

declare i32 @printf(i8*, ...) #2

; Function Attrs: nounwind
declare i8* @inet_ntoa(i32) #4

; Function Attrs: nounwind readnone
declare zeroext i16 @ntohs(i16 zeroext) #3

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local void @client_error(i32, i32, i8*, i8*) #0 !dbg !799 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca [1024 x i8], align 16
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !802, metadata !DIExpression()), !dbg !803
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !804, metadata !DIExpression()), !dbg !805
  store i8* %2, i8** %7, align 8
  call void @llvm.dbg.declare(metadata i8** %7, metadata !806, metadata !DIExpression()), !dbg !807
  store i8* %3, i8** %8, align 8
  call void @llvm.dbg.declare(metadata i8** %8, metadata !808, metadata !DIExpression()), !dbg !809
  call void @llvm.dbg.declare(metadata [1024 x i8]* %9, metadata !810, metadata !DIExpression()), !dbg !811
  %10 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i32 0, i32 0, !dbg !812
  %11 = load i32, i32* %6, align 4, !dbg !813
  %12 = load i8*, i8** %7, align 8, !dbg !814
  %13 = call i32 (i8*, i8*, ...) @sprintf(i8* %10, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.47, i32 0, i32 0), i32 %11, i8* %12) #9, !dbg !815
  %14 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i32 0, i32 0, !dbg !816
  %15 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i32 0, i32 0, !dbg !817
  %16 = call i64 @strlen(i8* %15) #10, !dbg !818
  %17 = getelementptr inbounds i8, i8* %14, i64 %16, !dbg !819
  %18 = load i8*, i8** %8, align 8, !dbg !820
  %19 = call i64 @strlen(i8* %18) #10, !dbg !821
  %20 = call i32 (i8*, i8*, ...) @sprintf(i8* %17, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48, i32 0, i32 0), i64 %19) #9, !dbg !822
  %21 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i32 0, i32 0, !dbg !823
  %22 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i32 0, i32 0, !dbg !824
  %23 = call i64 @strlen(i8* %22) #10, !dbg !825
  %24 = getelementptr inbounds i8, i8* %21, i64 %23, !dbg !826
  %25 = load i8*, i8** %8, align 8, !dbg !827
  %26 = call i32 (i8*, i8*, ...) @sprintf(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i32 0, i32 0), i8* %25) #9, !dbg !828
  %27 = load i32, i32* %5, align 4, !dbg !829
  %28 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i32 0, i32 0, !dbg !830
  %29 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i32 0, i32 0, !dbg !831
  %30 = call i64 @strlen(i8* %29) #10, !dbg !832
  %31 = call i64 @writen(i32 %27, i8* %28, i64 %30), !dbg !833
  ret void, !dbg !834
}

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local void @serve_static(i32, i32, %struct.http_request*, i64) #0 !dbg !835 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.http_request*, align 8
  %8 = alloca i64, align 8
  %9 = alloca [256 x i8], align 16
  %10 = alloca i64, align 8
  store i32 %0, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !838, metadata !DIExpression()), !dbg !839
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !840, metadata !DIExpression()), !dbg !841
  store %struct.http_request* %2, %struct.http_request** %7, align 8
  call void @llvm.dbg.declare(metadata %struct.http_request** %7, metadata !842, metadata !DIExpression()), !dbg !843
  store i64 %3, i64* %8, align 8
  call void @llvm.dbg.declare(metadata i64* %8, metadata !844, metadata !DIExpression()), !dbg !845
  call void @llvm.dbg.declare(metadata [256 x i8]* %9, metadata !846, metadata !DIExpression()), !dbg !847
  %11 = load %struct.http_request*, %struct.http_request** %7, align 8, !dbg !848
  %12 = getelementptr inbounds %struct.http_request, %struct.http_request* %11, i32 0, i32 1, !dbg !850
  %13 = load i64, i64* %12, align 8, !dbg !850
  %14 = icmp sgt i64 %13, 0, !dbg !851
  br i1 %14, label %15, label %30, !dbg !852

; <label>:15:                                     ; preds = %4
  %16 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i32 0, i32 0, !dbg !853
  %17 = call i32 (i8*, i8*, ...) @sprintf(i8* %16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.49, i32 0, i32 0)) #9, !dbg !855
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i32 0, i32 0, !dbg !856
  %19 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i32 0, i32 0, !dbg !857
  %20 = call i64 @strlen(i8* %19) #10, !dbg !858
  %21 = getelementptr inbounds i8, i8* %18, i64 %20, !dbg !859
  %22 = load %struct.http_request*, %struct.http_request** %7, align 8, !dbg !860
  %23 = getelementptr inbounds %struct.http_request, %struct.http_request* %22, i32 0, i32 1, !dbg !861
  %24 = load i64, i64* %23, align 8, !dbg !861
  %25 = load %struct.http_request*, %struct.http_request** %7, align 8, !dbg !862
  %26 = getelementptr inbounds %struct.http_request, %struct.http_request* %25, i32 0, i32 2, !dbg !863
  %27 = load i64, i64* %26, align 8, !dbg !863
  %28 = load i64, i64* %8, align 8, !dbg !864
  %29 = call i32 (i8*, i8*, ...) @sprintf(i8* %21, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.50, i32 0, i32 0), i64 %24, i64 %27, i64 %28) #9, !dbg !865
  br label %33, !dbg !866

; <label>:30:                                     ; preds = %4
  %31 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i32 0, i32 0, !dbg !867
  %32 = call i32 (i8*, i8*, ...) @sprintf(i8* %31, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.51, i32 0, i32 0)) #9, !dbg !869
  br label %33

; <label>:33:                                     ; preds = %30, %15
  %34 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i32 0, i32 0, !dbg !870
  %35 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i32 0, i32 0, !dbg !871
  %36 = call i64 @strlen(i8* %35) #10, !dbg !872
  %37 = getelementptr inbounds i8, i8* %34, i64 %36, !dbg !873
  %38 = call i32 (i8*, i8*, ...) @sprintf(i8* %37, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.52, i32 0, i32 0)) #9, !dbg !874
  %39 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i32 0, i32 0, !dbg !875
  %40 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i32 0, i32 0, !dbg !876
  %41 = call i64 @strlen(i8* %40) #10, !dbg !877
  %42 = getelementptr inbounds i8, i8* %39, i64 %41, !dbg !878
  %43 = load %struct.http_request*, %struct.http_request** %7, align 8, !dbg !879
  %44 = getelementptr inbounds %struct.http_request, %struct.http_request* %43, i32 0, i32 2, !dbg !880
  %45 = load i64, i64* %44, align 8, !dbg !880
  %46 = load %struct.http_request*, %struct.http_request** %7, align 8, !dbg !881
  %47 = getelementptr inbounds %struct.http_request, %struct.http_request* %46, i32 0, i32 1, !dbg !882
  %48 = load i64, i64* %47, align 8, !dbg !882
  %49 = sub i64 %45, %48, !dbg !883
  %50 = call i32 (i8*, i8*, ...) @sprintf(i8* %42, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.53, i32 0, i32 0), i64 %49) #9, !dbg !884
  %51 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i32 0, i32 0, !dbg !885
  %52 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i32 0, i32 0, !dbg !886
  %53 = call i64 @strlen(i8* %52) #10, !dbg !887
  %54 = getelementptr inbounds i8, i8* %51, i64 %53, !dbg !888
  %55 = load %struct.http_request*, %struct.http_request** %7, align 8, !dbg !889
  %56 = getelementptr inbounds %struct.http_request, %struct.http_request* %55, i32 0, i32 0, !dbg !890
  %57 = getelementptr inbounds [512 x i8], [512 x i8]* %56, i32 0, i32 0, !dbg !889
  %58 = call i8* @get_mime_type(i8* %57), !dbg !891
  %59 = call i32 (i8*, i8*, ...) @sprintf(i8* %54, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54, i32 0, i32 0), i8* %58) #9, !dbg !892
  %60 = load i32, i32* %5, align 4, !dbg !893
  %61 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i32 0, i32 0, !dbg !894
  %62 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i32 0, i32 0, !dbg !895
  %63 = call i64 @strlen(i8* %62) #10, !dbg !896
  %64 = call i64 @writen(i32 %60, i8* %61, i64 %63), !dbg !897
  call void @llvm.dbg.declare(metadata i64* %10, metadata !898, metadata !DIExpression()), !dbg !899
  %65 = load %struct.http_request*, %struct.http_request** %7, align 8, !dbg !900
  %66 = getelementptr inbounds %struct.http_request, %struct.http_request* %65, i32 0, i32 1, !dbg !901
  %67 = load i64, i64* %66, align 8, !dbg !901
  store i64 %67, i64* %10, align 8, !dbg !899
  br label %68, !dbg !902

; <label>:68:                                     ; preds = %33
  %69 = load i64, i64* %10, align 8, !dbg !903
  %70 = load %struct.http_request*, %struct.http_request** %7, align 8, !dbg !904
  %71 = getelementptr inbounds %struct.http_request, %struct.http_request* %70, i32 0, i32 2, !dbg !905
  %72 = load i64, i64* %71, align 8, !dbg !905
  %73 = icmp ult i64 %69, %72, !dbg !906
  br i1 %73, label %74, label %92, !dbg !902

; <label>:74:                                     ; preds = %68
  %75 = load i32, i32* %5, align 4, !dbg !907
  %76 = load i32, i32* %6, align 4, !dbg !910
  %77 = load %struct.http_request*, %struct.http_request** %7, align 8, !dbg !911
  %78 = getelementptr inbounds %struct.http_request, %struct.http_request* %77, i32 0, i32 2, !dbg !912
  %79 = load i64, i64* %78, align 8, !dbg !912
  %80 = load %struct.http_request*, %struct.http_request** %7, align 8, !dbg !913
  %81 = getelementptr inbounds %struct.http_request, %struct.http_request* %80, i32 0, i32 1, !dbg !914
  %82 = load i64, i64* %81, align 8, !dbg !914
  %83 = sub i64 %79, %82, !dbg !915
  %84 = call i64 @sendfile(i32 %75, i32 %76, i64* %10, i64 %83) #9, !dbg !916
  %85 = icmp sle i64 %84, 0, !dbg !917
  br i1 %85, label %86, label %87, !dbg !918

; <label>:86:                                     ; preds = %74
  br label %92, !dbg !919

; <label>:87:                                     ; preds = %74
  %88 = load i64, i64* %10, align 8, !dbg !921
  %89 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.55, i32 0, i32 0), i64 %88), !dbg !922
  %90 = load i32, i32* %5, align 4, !dbg !923
  %91 = call i32 @close(i32 %90), !dbg !924
  br label %92, !dbg !925

; <label>:92:                                     ; preds = %87, %86, %68
  ret void, !dbg !926
}

; Function Attrs: noinline nounwind sspstrong uwtable
define internal i8* @get_mime_type(i8*) #0 !dbg !927 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.mime_map*, align 8
  store i8* %0, i8** %3, align 8
  call void @llvm.dbg.declare(metadata i8** %3, metadata !930, metadata !DIExpression()), !dbg !931
  call void @llvm.dbg.declare(metadata i8** %4, metadata !932, metadata !DIExpression()), !dbg !933
  %6 = load i8*, i8** %3, align 8, !dbg !934
  %7 = call i8* @strrchr(i8* %6, i32 46) #10, !dbg !935
  store i8* %7, i8** %4, align 8, !dbg !933
  %8 = load i8*, i8** %4, align 8, !dbg !936
  %9 = icmp ne i8* %8, null, !dbg !936
  br i1 %9, label %10, label %31, !dbg !938

; <label>:10:                                     ; preds = %1
  call void @llvm.dbg.declare(metadata %struct.mime_map** %5, metadata !939, metadata !DIExpression()), !dbg !942
  store %struct.mime_map* getelementptr inbounds ([14 x %struct.mime_map], [14 x %struct.mime_map]* @meme_types, i32 0, i32 0), %struct.mime_map** %5, align 8, !dbg !942
  br label %11, !dbg !943

; <label>:11:                                     ; preds = %27, %10
  %12 = load %struct.mime_map*, %struct.mime_map** %5, align 8, !dbg !944
  %13 = getelementptr inbounds %struct.mime_map, %struct.mime_map* %12, i32 0, i32 0, !dbg !945
  %14 = load i8*, i8** %13, align 8, !dbg !945
  %15 = icmp ne i8* %14, null, !dbg !943
  br i1 %15, label %16, label %30, !dbg !943

; <label>:16:                                     ; preds = %11
  %17 = load %struct.mime_map*, %struct.mime_map** %5, align 8, !dbg !946
  %18 = getelementptr inbounds %struct.mime_map, %struct.mime_map* %17, i32 0, i32 0, !dbg !949
  %19 = load i8*, i8** %18, align 8, !dbg !949
  %20 = load i8*, i8** %4, align 8, !dbg !950
  %21 = call i32 @strcmp(i8* %19, i8* %20) #10, !dbg !951
  %22 = icmp eq i32 %21, 0, !dbg !952
  br i1 %22, label %23, label %27, !dbg !953

; <label>:23:                                     ; preds = %16
  %24 = load %struct.mime_map*, %struct.mime_map** %5, align 8, !dbg !954
  %25 = getelementptr inbounds %struct.mime_map, %struct.mime_map* %24, i32 0, i32 1, !dbg !956
  %26 = load i8*, i8** %25, align 8, !dbg !956
  store i8* %26, i8** %2, align 8, !dbg !957
  br label %33, !dbg !957

; <label>:27:                                     ; preds = %16
  %28 = load %struct.mime_map*, %struct.mime_map** %5, align 8, !dbg !958
  %29 = getelementptr inbounds %struct.mime_map, %struct.mime_map* %28, i32 1, !dbg !958
  store %struct.mime_map* %29, %struct.mime_map** %5, align 8, !dbg !958
  br label %11, !dbg !943, !llvm.loop !959

; <label>:30:                                     ; preds = %11
  br label %31, !dbg !961

; <label>:31:                                     ; preds = %30, %1
  %32 = load i8*, i8** @default_mime_type, align 8, !dbg !962
  store i8* %32, i8** %2, align 8, !dbg !963
  br label %33, !dbg !963

; <label>:33:                                     ; preds = %31, %23
  %34 = load i8*, i8** %2, align 8, !dbg !964
  ret i8* %34, !dbg !964
}

; Function Attrs: nounwind
declare i64 @sendfile(i32, i32, i64*, i64) #4

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local void @process(i32, %struct.sockaddr_in*) #0 !dbg !965 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.sockaddr_in*, align 8
  %5 = alloca %struct.http_request, align 8
  %6 = alloca %struct.stat, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  call void @llvm.dbg.declare(metadata i32* %3, metadata !968, metadata !DIExpression()), !dbg !969
  store %struct.sockaddr_in* %1, %struct.sockaddr_in** %4, align 8
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in** %4, metadata !970, metadata !DIExpression()), !dbg !971
  %11 = load i32, i32* %3, align 4, !dbg !972
  %12 = call i32 @getpid() #9, !dbg !973
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.56, i32 0, i32 0), i32 %11, i32 %12), !dbg !974
  call void @llvm.dbg.declare(metadata %struct.http_request* %5, metadata !975, metadata !DIExpression()), !dbg !976
  %14 = load i32, i32* %3, align 4, !dbg !977
  call void @parse_request(i32 %14, %struct.http_request* %5), !dbg !978
  call void @llvm.dbg.declare(metadata %struct.stat* %6, metadata !979, metadata !DIExpression()), !dbg !980
  call void @llvm.dbg.declare(metadata i32* %7, metadata !981, metadata !DIExpression()), !dbg !982
  store i32 200, i32* %7, align 4, !dbg !982
  call void @llvm.dbg.declare(metadata i32* %8, metadata !983, metadata !DIExpression()), !dbg !984
  %15 = getelementptr inbounds %struct.http_request, %struct.http_request* %5, i32 0, i32 0, !dbg !985
  %16 = getelementptr inbounds [512 x i8], [512 x i8]* %15, i32 0, i32 0, !dbg !986
  %17 = call i32 (i8*, i32, ...) @open(i8* %16, i32 0, i32 0), !dbg !987
  store i32 %17, i32* %8, align 4, !dbg !984
  %18 = load i32, i32* %8, align 4, !dbg !988
  %19 = icmp sle i32 %18, 0, !dbg !990
  br i1 %19, label %20, label %24, !dbg !991

; <label>:20:                                     ; preds = %2
  store i32 404, i32* %7, align 4, !dbg !992
  call void @llvm.dbg.declare(metadata i8** %9, metadata !994, metadata !DIExpression()), !dbg !995
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.57, i32 0, i32 0), i8** %9, align 8, !dbg !995
  %21 = load i32, i32* %3, align 4, !dbg !996
  %22 = load i32, i32* %7, align 4, !dbg !997
  %23 = load i8*, i8** %9, align 8, !dbg !998
  call void @client_error(i32 %21, i32 %22, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.58, i32 0, i32 0), i8* %23), !dbg !999
  br label %67, !dbg !1000

; <label>:24:                                     ; preds = %2
  %25 = load i32, i32* %8, align 4, !dbg !1001
  %26 = call i32 @fstat(i32 %25, %struct.stat* %6) #9, !dbg !1003
  %27 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 3, !dbg !1004
  %28 = load i32, i32* %27, align 8, !dbg !1004
  %29 = and i32 %28, 61440, !dbg !1004
  %30 = icmp eq i32 %29, 32768, !dbg !1004
  br i1 %30, label %31, label %49, !dbg !1006

; <label>:31:                                     ; preds = %24
  %32 = getelementptr inbounds %struct.http_request, %struct.http_request* %5, i32 0, i32 2, !dbg !1007
  %33 = load i64, i64* %32, align 8, !dbg !1007
  %34 = icmp eq i64 %33, 0, !dbg !1010
  br i1 %34, label %35, label %39, !dbg !1011

; <label>:35:                                     ; preds = %31
  %36 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 8, !dbg !1012
  %37 = load i64, i64* %36, align 8, !dbg !1012
  %38 = getelementptr inbounds %struct.http_request, %struct.http_request* %5, i32 0, i32 2, !dbg !1014
  store i64 %37, i64* %38, align 8, !dbg !1015
  br label %39, !dbg !1016

; <label>:39:                                     ; preds = %35, %31
  %40 = getelementptr inbounds %struct.http_request, %struct.http_request* %5, i32 0, i32 1, !dbg !1017
  %41 = load i64, i64* %40, align 8, !dbg !1017
  %42 = icmp sgt i64 %41, 0, !dbg !1019
  br i1 %42, label %43, label %44, !dbg !1020

; <label>:43:                                     ; preds = %39
  store i32 206, i32* %7, align 4, !dbg !1021
  br label %44, !dbg !1023

; <label>:44:                                     ; preds = %43, %39
  %45 = load i32, i32* %3, align 4, !dbg !1024
  %46 = load i32, i32* %8, align 4, !dbg !1025
  %47 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 8, !dbg !1026
  %48 = load i64, i64* %47, align 8, !dbg !1026
  call void @serve_static(i32 %45, i32 %46, %struct.http_request* %5, i64 %48), !dbg !1027
  br label %64, !dbg !1028

; <label>:49:                                     ; preds = %24
  %50 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 3, !dbg !1029
  %51 = load i32, i32* %50, align 8, !dbg !1029
  %52 = and i32 %51, 61440, !dbg !1029
  %53 = icmp eq i32 %52, 16384, !dbg !1029
  br i1 %53, label %54, label %59, !dbg !1031

; <label>:54:                                     ; preds = %49
  store i32 200, i32* %7, align 4, !dbg !1032
  %55 = load i32, i32* %3, align 4, !dbg !1034
  %56 = load i32, i32* %8, align 4, !dbg !1035
  %57 = getelementptr inbounds %struct.http_request, %struct.http_request* %5, i32 0, i32 0, !dbg !1036
  %58 = getelementptr inbounds [512 x i8], [512 x i8]* %57, i32 0, i32 0, !dbg !1037
  call void @handle_directory_request(i32 %55, i32 %56, i8* %58), !dbg !1038
  br label %63, !dbg !1039

; <label>:59:                                     ; preds = %49
  store i32 400, i32* %7, align 4, !dbg !1040
  call void @llvm.dbg.declare(metadata i8** %10, metadata !1042, metadata !DIExpression()), !dbg !1043
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.59, i32 0, i32 0), i8** %10, align 8, !dbg !1043
  %60 = load i32, i32* %3, align 4, !dbg !1044
  %61 = load i32, i32* %7, align 4, !dbg !1045
  %62 = load i8*, i8** %10, align 8, !dbg !1046
  call void @client_error(i32 %60, i32 %61, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i32 0, i32 0), i8* %62), !dbg !1047
  br label %63

; <label>:63:                                     ; preds = %59, %54
  br label %64

; <label>:64:                                     ; preds = %63, %44
  %65 = load i32, i32* %8, align 4, !dbg !1048
  %66 = call i32 @close(i32 %65), !dbg !1049
  br label %67

; <label>:67:                                     ; preds = %64, %20
  %68 = load i32, i32* %7, align 4, !dbg !1050
  %69 = load %struct.sockaddr_in*, %struct.sockaddr_in** %4, align 8, !dbg !1051
  call void @log_access(i32 %68, %struct.sockaddr_in* %69, %struct.http_request* %5), !dbg !1052
  ret void, !dbg !1053
}

; Function Attrs: nounwind
declare i32 @getpid() #4

declare i32 @open(i8*, i32, ...) #2

; Function Attrs: noinline nounwind sspstrong uwtable
define dso_local i32 @main(i32, i8**) #0 !dbg !1054 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca %struct.sockaddr_in, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca [256 x i8], align 16
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1058, metadata !DIExpression()), !dbg !1059
  store i8** %1, i8*** %5, align 8
  call void @llvm.dbg.declare(metadata i8*** %5, metadata !1060, metadata !DIExpression()), !dbg !1061
  call void @llvm.dbg.declare(metadata %struct.sockaddr_in* %6, metadata !1062, metadata !DIExpression()), !dbg !1063
  call void @llvm.dbg.declare(metadata i32* %7, metadata !1064, metadata !DIExpression()), !dbg !1065
  store i32 9999, i32* %7, align 4, !dbg !1065
  call void @llvm.dbg.declare(metadata i32* %8, metadata !1066, metadata !DIExpression()), !dbg !1067
  call void @llvm.dbg.declare(metadata i32* %9, metadata !1068, metadata !DIExpression()), !dbg !1069
  call void @llvm.dbg.declare(metadata [256 x i8]* %10, metadata !1070, metadata !DIExpression()), !dbg !1071
  call void @llvm.dbg.declare(metadata i8** %11, metadata !1072, metadata !DIExpression()), !dbg !1073
  %15 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i32 0, i32 0, !dbg !1074
  %16 = call i8* @getcwd(i8* %15, i64 256) #9, !dbg !1075
  store i8* %16, i8** %11, align 8, !dbg !1073
  call void @llvm.dbg.declare(metadata i32* %12, metadata !1076, metadata !DIExpression()), !dbg !1079
  store i32 16, i32* %12, align 4, !dbg !1079
  %17 = load i32, i32* %4, align 4, !dbg !1080
  %18 = icmp eq i32 %17, 2, !dbg !1082
  br i1 %18, label %19, label %55, !dbg !1083

; <label>:19:                                     ; preds = %2
  %20 = load i8**, i8*** %5, align 8, !dbg !1084
  %21 = getelementptr inbounds i8*, i8** %20, i64 1, !dbg !1084
  %22 = load i8*, i8** %21, align 8, !dbg !1084
  %23 = getelementptr inbounds i8, i8* %22, i64 0, !dbg !1084
  %24 = load i8, i8* %23, align 1, !dbg !1084
  %25 = sext i8 %24 to i32, !dbg !1084
  %26 = icmp sge i32 %25, 48, !dbg !1087
  br i1 %26, label %27, label %40, !dbg !1088

; <label>:27:                                     ; preds = %19
  %28 = load i8**, i8*** %5, align 8, !dbg !1089
  %29 = getelementptr inbounds i8*, i8** %28, i64 1, !dbg !1089
  %30 = load i8*, i8** %29, align 8, !dbg !1089
  %31 = getelementptr inbounds i8, i8* %30, i64 0, !dbg !1089
  %32 = load i8, i8* %31, align 1, !dbg !1089
  %33 = sext i8 %32 to i32, !dbg !1089
  %34 = icmp sle i32 %33, 57, !dbg !1090
  br i1 %34, label %35, label %40, !dbg !1091

; <label>:35:                                     ; preds = %27
  %36 = load i8**, i8*** %5, align 8, !dbg !1092
  %37 = getelementptr inbounds i8*, i8** %36, i64 1, !dbg !1092
  %38 = load i8*, i8** %37, align 8, !dbg !1092
  %39 = call i32 @atoi(i8* %38) #10, !dbg !1094
  store i32 %39, i32* %7, align 4, !dbg !1095
  br label %54, !dbg !1096

; <label>:40:                                     ; preds = %27, %19
  %41 = load i8**, i8*** %5, align 8, !dbg !1097
  %42 = getelementptr inbounds i8*, i8** %41, i64 1, !dbg !1097
  %43 = load i8*, i8** %42, align 8, !dbg !1097
  store i8* %43, i8** %11, align 8, !dbg !1099
  %44 = load i8**, i8*** %5, align 8, !dbg !1100
  %45 = getelementptr inbounds i8*, i8** %44, i64 1, !dbg !1100
  %46 = load i8*, i8** %45, align 8, !dbg !1100
  %47 = call i32 @chdir(i8* %46) #9, !dbg !1102
  %48 = icmp ne i32 %47, 0, !dbg !1103
  br i1 %48, label %49, label %53, !dbg !1104

; <label>:49:                                     ; preds = %40
  %50 = load i8**, i8*** %5, align 8, !dbg !1105
  %51 = getelementptr inbounds i8*, i8** %50, i64 1, !dbg !1105
  %52 = load i8*, i8** %51, align 8, !dbg !1105
  call void @perror(i8* %52), !dbg !1107
  call void @exit(i32 1) #11, !dbg !1108
  unreachable, !dbg !1108

; <label>:53:                                     ; preds = %40
  br label %54

; <label>:54:                                     ; preds = %53, %35
  br label %77, !dbg !1109

; <label>:55:                                     ; preds = %2
  %56 = load i32, i32* %4, align 4, !dbg !1110
  %57 = icmp eq i32 %56, 3, !dbg !1112
  br i1 %57, label %58, label %76, !dbg !1113

; <label>:58:                                     ; preds = %55
  %59 = load i8**, i8*** %5, align 8, !dbg !1114
  %60 = getelementptr inbounds i8*, i8** %59, i64 2, !dbg !1114
  %61 = load i8*, i8** %60, align 8, !dbg !1114
  %62 = call i32 @atoi(i8* %61) #10, !dbg !1116
  store i32 %62, i32* %7, align 4, !dbg !1117
  %63 = load i8**, i8*** %5, align 8, !dbg !1118
  %64 = getelementptr inbounds i8*, i8** %63, i64 1, !dbg !1118
  %65 = load i8*, i8** %64, align 8, !dbg !1118
  store i8* %65, i8** %11, align 8, !dbg !1119
  %66 = load i8**, i8*** %5, align 8, !dbg !1120
  %67 = getelementptr inbounds i8*, i8** %66, i64 1, !dbg !1120
  %68 = load i8*, i8** %67, align 8, !dbg !1120
  %69 = call i32 @chdir(i8* %68) #9, !dbg !1122
  %70 = icmp ne i32 %69, 0, !dbg !1123
  br i1 %70, label %71, label %75, !dbg !1124

; <label>:71:                                     ; preds = %58
  %72 = load i8**, i8*** %5, align 8, !dbg !1125
  %73 = getelementptr inbounds i8*, i8** %72, i64 1, !dbg !1125
  %74 = load i8*, i8** %73, align 8, !dbg !1125
  call void @perror(i8* %74), !dbg !1127
  call void @exit(i32 1) #11, !dbg !1128
  unreachable, !dbg !1128

; <label>:75:                                     ; preds = %58
  br label %76, !dbg !1129

; <label>:76:                                     ; preds = %75, %55
  br label %77

; <label>:77:                                     ; preds = %76, %54
  %78 = load i32, i32* %7, align 4, !dbg !1130
  %79 = call i32 @open_listenfd(i32 %78), !dbg !1131
  store i32 %79, i32* %8, align 4, !dbg !1132
  %80 = load i32, i32* %8, align 4, !dbg !1133
  %81 = icmp sgt i32 %80, 0, !dbg !1135
  br i1 %81, label %82, label %86, !dbg !1136

; <label>:82:                                     ; preds = %77
  %83 = load i32, i32* %7, align 4, !dbg !1137
  %84 = load i32, i32* %8, align 4, !dbg !1139
  %85 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.61, i32 0, i32 0), i32 %83, i32 %84), !dbg !1140
  br label %88, !dbg !1141

; <label>:86:                                     ; preds = %77
  call void @perror(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.62, i32 0, i32 0)), !dbg !1142
  %87 = load i32, i32* %8, align 4, !dbg !1144
  call void @exit(i32 %87) #11, !dbg !1145
  unreachable, !dbg !1145

; <label>:88:                                     ; preds = %82
  %89 = call void (i32)* @signal(i32 13, void (i32)* inttoptr (i64 1 to void (i32)*)) #9, !dbg !1146
  call void @llvm.dbg.declare(metadata i32* %13, metadata !1147, metadata !DIExpression()), !dbg !1149
  store i32 0, i32* %13, align 4, !dbg !1149
  br label %90, !dbg !1150

; <label>:90:                                     ; preds = %114, %88
  %91 = load i32, i32* %13, align 4, !dbg !1151
  %92 = icmp slt i32 %91, 10, !dbg !1153
  br i1 %92, label %93, label %117, !dbg !1154

; <label>:93:                                     ; preds = %90
  call void @llvm.dbg.declare(metadata i32* %14, metadata !1155, metadata !DIExpression()), !dbg !1157
  %94 = call i32 @fork() #9, !dbg !1158
  store i32 %94, i32* %14, align 4, !dbg !1157
  %95 = load i32, i32* %14, align 4, !dbg !1159
  %96 = icmp eq i32 %95, 0, !dbg !1161
  br i1 %96, label %97, label %105, !dbg !1162

; <label>:97:                                     ; preds = %93
  br label %98, !dbg !1163

; <label>:98:                                     ; preds = %97, %98
  %99 = load i32, i32* %8, align 4, !dbg !1165
  %100 = bitcast %struct.sockaddr_in* %6 to %struct.sockaddr*, !dbg !1167
  %101 = call i32 @accept(i32 %99, %struct.sockaddr* %100, i32* %12), !dbg !1168
  store i32 %101, i32* %9, align 4, !dbg !1169
  %102 = load i32, i32* %9, align 4, !dbg !1170
  call void @process(i32 %102, %struct.sockaddr_in* %6), !dbg !1171
  %103 = load i32, i32* %9, align 4, !dbg !1172
  %104 = call i32 @close(i32 %103), !dbg !1173
  br label %98, !dbg !1163, !llvm.loop !1174

; <label>:105:                                    ; preds = %93
  %106 = load i32, i32* %14, align 4, !dbg !1176
  %107 = icmp sgt i32 %106, 0, !dbg !1178
  br i1 %107, label %108, label %111, !dbg !1179

; <label>:108:                                    ; preds = %105
  %109 = load i32, i32* %14, align 4, !dbg !1180
  %110 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.63, i32 0, i32 0), i32 %109), !dbg !1182
  br label %112, !dbg !1183

; <label>:111:                                    ; preds = %105
  call void @perror(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i32 0, i32 0)), !dbg !1184
  br label %112

; <label>:112:                                    ; preds = %111, %108
  br label %113

; <label>:113:                                    ; preds = %112
  br label %114, !dbg !1186

; <label>:114:                                    ; preds = %113
  %115 = load i32, i32* %13, align 4, !dbg !1187
  %116 = add nsw i32 %115, 1, !dbg !1187
  store i32 %116, i32* %13, align 4, !dbg !1187
  br label %90, !dbg !1188, !llvm.loop !1189

; <label>:117:                                    ; preds = %90
  br label %118, !dbg !1191

; <label>:118:                                    ; preds = %117, %118
  %119 = load i32, i32* %8, align 4, !dbg !1192
  %120 = bitcast %struct.sockaddr_in* %6 to %struct.sockaddr*, !dbg !1194
  %121 = call i32 @accept(i32 %119, %struct.sockaddr* %120, i32* %12), !dbg !1195
  store i32 %121, i32* %9, align 4, !dbg !1196
  %122 = load i32, i32* %9, align 4, !dbg !1197
  call void @process(i32 %122, %struct.sockaddr_in* %6), !dbg !1198
  %123 = load i32, i32* %9, align 4, !dbg !1199
  %124 = call i32 @close(i32 %123), !dbg !1200
  br label %118, !dbg !1191, !llvm.loop !1201
                                                  ; No predecessors!
  %126 = load i32, i32* %3, align 4, !dbg !1203
  ret i32 %126, !dbg !1203
}

; Function Attrs: nounwind
declare i8* @getcwd(i8*, i64) #4

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #5

; Function Attrs: nounwind
declare i32 @chdir(i8*) #4

; Function Attrs: noreturn nounwind
declare void @exit(i32) #7

; Function Attrs: nounwind
declare void (i32)* @signal(i32, void (i32)*) #4

; Function Attrs: nounwind
declare i32 @fork() #4

declare i32 @accept(i32, %struct.sockaddr*, i32*) #2

declare i64 @read(i32, i8*, i64) #2

; Function Attrs: nounwind readonly
declare i8* @strrchr(i8*, i32) #5

attributes #0 = { noinline nounwind sspstrong uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }
attributes #11 = { noreturn nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!61, !62, !63, !64, !65}
!llvm.ident = !{!66}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "meme_types", scope: !2, file: !3, line: 43, type: !53, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 8.0.0 (tags/RELEASE_800/final)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !18, globals: !49, nameTableKind: None)
!3 = !DIFile(filename: "tiny.c", directory: "/root/hydrogen/TestPrograms/TinyWebServer/TWS-Correct")
!4 = !{!5}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__socket_type", file: !6, line: 24, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "/usr/include/bits/socket_type.h", directory: "")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17}
!9 = !DIEnumerator(name: "SOCK_STREAM", value: 1, isUnsigned: true)
!10 = !DIEnumerator(name: "SOCK_DGRAM", value: 2, isUnsigned: true)
!11 = !DIEnumerator(name: "SOCK_RAW", value: 3, isUnsigned: true)
!12 = !DIEnumerator(name: "SOCK_RDM", value: 4, isUnsigned: true)
!13 = !DIEnumerator(name: "SOCK_SEQPACKET", value: 5, isUnsigned: true)
!14 = !DIEnumerator(name: "SOCK_DCCP", value: 6, isUnsigned: true)
!15 = !DIEnumerator(name: "SOCK_PACKET", value: 10, isUnsigned: true)
!16 = !DIEnumerator(name: "SOCK_CLOEXEC", value: 524288, isUnsigned: true)
!17 = !DIEnumerator(name: "SOCK_NONBLOCK", value: 2048, isUnsigned: true)
!18 = !{!19, !20, !21, !23, !29, !30, !40, !43}
!19 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!21 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64)
!22 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!23 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_addr_t", file: !24, line: 30, baseType: !25)
!24 = !DIFile(filename: "/usr/include/netinet/in.h", directory: "")
!25 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !26, line: 26, baseType: !27)
!26 = !DIFile(filename: "/usr/include/bits/stdint-uintn.h", directory: "")
!27 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !28, line: 42, baseType: !7)
!28 = !DIFile(filename: "/usr/include/bits/types.h", directory: "")
!29 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 64)
!31 = !DIDerivedType(tag: DW_TAG_typedef, name: "SA", file: !3, line: 30, baseType: !32)
!32 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !33, line: 178, size: 128, elements: !34)
!33 = !DIFile(filename: "/usr/include/bits/socket.h", directory: "")
!34 = !{!35, !38}
!35 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !32, file: !33, line: 180, baseType: !36, size: 16)
!36 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !37, line: 28, baseType: !29)
!37 = !DIFile(filename: "/usr/include/bits/sockaddr.h", directory: "")
!38 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !32, file: !33, line: 181, baseType: !39, size: 112, offset: 16)
!39 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 112, elements: !41)
!40 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!41 = !{!42}
!42 = !DISubrange(count: 14)
!43 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !44, line: 72, baseType: !45)
!44 = !DIFile(filename: "/usr/include/signal.h", directory: "")
!45 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !46, size: 64)
!46 = !DISubroutineType(types: !47)
!47 = !{null, !48}
!48 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!49 = !{!0, !50}
!50 = !DIGlobalVariableExpression(var: !51, expr: !DIExpression())
!51 = distinct !DIGlobalVariable(name: "default_mime_type", scope: !2, file: !3, line: 60, type: !52, isLocal: false, isDefinition: true)
!52 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 64)
!53 = !DICompositeType(tag: DW_TAG_array_type, baseType: !54, size: 1792, elements: !41)
!54 = !DIDerivedType(tag: DW_TAG_typedef, name: "mime_map", file: !3, line: 41, baseType: !55)
!55 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 38, size: 128, elements: !56)
!56 = !{!57, !60}
!57 = !DIDerivedType(tag: DW_TAG_member, name: "extension", scope: !55, file: !3, line: 39, baseType: !58, size: 64)
!58 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !59, size: 64)
!59 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !40)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "mime_type", scope: !55, file: !3, line: 40, baseType: !58, size: 64, offset: 64)
!61 = !{i32 2, !"Dwarf Version", i32 4}
!62 = !{i32 2, !"Debug Info Version", i32 3}
!63 = !{i32 1, !"wchar_size", i32 4}
!64 = !{i32 7, !"PIC Level", i32 2}
!65 = !{i32 7, !"PIE Level", i32 2}
!66 = !{!"clang version 8.0.0 (tags/RELEASE_800/final)"}
!67 = distinct !DISubprogram(name: "rio_readinitb", scope: !3, file: !3, line: 62, type: !68, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !81)
!68 = !DISubroutineType(types: !69)
!69 = !{null, !70, !48}
!70 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !71, size: 64)
!71 = !DIDerivedType(tag: DW_TAG_typedef, name: "rio_t", file: !3, line: 27, baseType: !72)
!72 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 22, size: 8320, elements: !73)
!73 = !{!74, !75, !76, !77}
!74 = !DIDerivedType(tag: DW_TAG_member, name: "rio_fd", scope: !72, file: !3, line: 23, baseType: !48, size: 32)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "rio_cnt", scope: !72, file: !3, line: 24, baseType: !48, size: 32, offset: 32)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "rio_bufptr", scope: !72, file: !3, line: 25, baseType: !52, size: 64, offset: 64)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "rio_buf", scope: !72, file: !3, line: 26, baseType: !78, size: 8192, offset: 128)
!78 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 8192, elements: !79)
!79 = !{!80}
!80 = !DISubrange(count: 1024)
!81 = !{}
!82 = !DILocalVariable(name: "rp", arg: 1, scope: !67, file: !3, line: 62, type: !70)
!83 = !DILocation(line: 62, column: 27, scope: !67)
!84 = !DILocalVariable(name: "fd", arg: 2, scope: !67, file: !3, line: 62, type: !48)
!85 = !DILocation(line: 62, column: 35, scope: !67)
!86 = !DILocation(line: 63, column: 16, scope: !67)
!87 = !DILocation(line: 63, column: 3, scope: !67)
!88 = !DILocation(line: 63, column: 7, scope: !67)
!89 = !DILocation(line: 63, column: 14, scope: !67)
!90 = !DILocation(line: 64, column: 3, scope: !67)
!91 = !DILocation(line: 64, column: 7, scope: !67)
!92 = !DILocation(line: 64, column: 15, scope: !67)
!93 = !DILocation(line: 65, column: 20, scope: !67)
!94 = !DILocation(line: 65, column: 24, scope: !67)
!95 = !DILocation(line: 65, column: 3, scope: !67)
!96 = !DILocation(line: 65, column: 7, scope: !67)
!97 = !DILocation(line: 65, column: 18, scope: !67)
!98 = !DILocation(line: 66, column: 1, scope: !67)
!99 = distinct !DISubprogram(name: "writen", scope: !3, file: !3, line: 68, type: !100, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !81)
!100 = !DISubroutineType(types: !101)
!101 = !{!102, !48, !20, !106}
!102 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !103, line: 108, baseType: !104)
!103 = !DIFile(filename: "/usr/include/sys/types.h", directory: "")
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !28, line: 193, baseType: !105)
!105 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !107, line: 62, baseType: !108)
!107 = !DIFile(filename: "/usr/lib/clang/8.0.0/include/stddef.h", directory: "")
!108 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!109 = !DILocalVariable(name: "fd", arg: 1, scope: !99, file: !3, line: 68, type: !48)
!110 = !DILocation(line: 68, column: 20, scope: !99)
!111 = !DILocalVariable(name: "usrbuf", arg: 2, scope: !99, file: !3, line: 68, type: !20)
!112 = !DILocation(line: 68, column: 30, scope: !99)
!113 = !DILocalVariable(name: "n", arg: 3, scope: !99, file: !3, line: 68, type: !106)
!114 = !DILocation(line: 68, column: 45, scope: !99)
!115 = !DILocalVariable(name: "nleft", scope: !99, file: !3, line: 69, type: !106)
!116 = !DILocation(line: 69, column: 10, scope: !99)
!117 = !DILocation(line: 69, column: 18, scope: !99)
!118 = !DILocalVariable(name: "nwritten", scope: !99, file: !3, line: 70, type: !102)
!119 = !DILocation(line: 70, column: 11, scope: !99)
!120 = !DILocalVariable(name: "bufp", scope: !99, file: !3, line: 71, type: !52)
!121 = !DILocation(line: 71, column: 9, scope: !99)
!122 = !DILocation(line: 71, column: 16, scope: !99)
!123 = !DILocation(line: 73, column: 3, scope: !99)
!124 = !DILocation(line: 73, column: 10, scope: !99)
!125 = !DILocation(line: 73, column: 16, scope: !99)
!126 = !DILocation(line: 74, column: 27, scope: !127)
!127 = distinct !DILexicalBlock(scope: !128, file: !3, line: 74, column: 9)
!128 = distinct !DILexicalBlock(scope: !99, file: !3, line: 73, column: 20)
!129 = !DILocation(line: 74, column: 31, scope: !127)
!130 = !DILocation(line: 74, column: 37, scope: !127)
!131 = !DILocation(line: 74, column: 21, scope: !127)
!132 = !DILocation(line: 74, column: 19, scope: !127)
!133 = !DILocation(line: 74, column: 45, scope: !127)
!134 = !DILocation(line: 74, column: 9, scope: !128)
!135 = !DILocation(line: 75, column: 11, scope: !136)
!136 = distinct !DILexicalBlock(scope: !137, file: !3, line: 75, column: 11)
!137 = distinct !DILexicalBlock(scope: !127, file: !3, line: 74, column: 50)
!138 = !DILocation(line: 75, column: 17, scope: !136)
!139 = !DILocation(line: 75, column: 11, scope: !137)
!140 = !DILocation(line: 76, column: 18, scope: !136)
!141 = !DILocation(line: 76, column: 9, scope: !136)
!142 = !DILocation(line: 78, column: 9, scope: !136)
!143 = !DILocation(line: 79, column: 5, scope: !137)
!144 = !DILocation(line: 80, column: 14, scope: !128)
!145 = !DILocation(line: 80, column: 11, scope: !128)
!146 = !DILocation(line: 81, column: 13, scope: !128)
!147 = !DILocation(line: 81, column: 10, scope: !128)
!148 = distinct !{!148, !123, !149}
!149 = !DILocation(line: 82, column: 3, scope: !99)
!150 = !DILocation(line: 83, column: 10, scope: !99)
!151 = !DILocation(line: 83, column: 3, scope: !99)
!152 = !DILocation(line: 84, column: 1, scope: !99)
!153 = distinct !DISubprogram(name: "rio_readlineb", scope: !3, file: !3, line: 125, type: !154, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !81)
!154 = !DISubroutineType(types: !155)
!155 = !{!102, !70, !20, !106}
!156 = !DILocalVariable(name: "rp", arg: 1, scope: !153, file: !3, line: 125, type: !70)
!157 = !DILocation(line: 125, column: 30, scope: !153)
!158 = !DILocalVariable(name: "usrbuf", arg: 2, scope: !153, file: !3, line: 125, type: !20)
!159 = !DILocation(line: 125, column: 40, scope: !153)
!160 = !DILocalVariable(name: "maxlen", arg: 3, scope: !153, file: !3, line: 125, type: !106)
!161 = !DILocation(line: 125, column: 55, scope: !153)
!162 = !DILocalVariable(name: "n", scope: !153, file: !3, line: 126, type: !48)
!163 = !DILocation(line: 126, column: 7, scope: !153)
!164 = !DILocalVariable(name: "rc", scope: !153, file: !3, line: 126, type: !48)
!165 = !DILocation(line: 126, column: 10, scope: !153)
!166 = !DILocalVariable(name: "c", scope: !153, file: !3, line: 127, type: !40)
!167 = !DILocation(line: 127, column: 8, scope: !153)
!168 = !DILocalVariable(name: "bufp", scope: !153, file: !3, line: 127, type: !52)
!169 = !DILocation(line: 127, column: 12, scope: !153)
!170 = !DILocation(line: 127, column: 19, scope: !153)
!171 = !DILocation(line: 129, column: 10, scope: !172)
!172 = distinct !DILexicalBlock(scope: !153, file: !3, line: 129, column: 3)
!173 = !DILocation(line: 129, column: 8, scope: !172)
!174 = !DILocation(line: 129, column: 15, scope: !175)
!175 = distinct !DILexicalBlock(scope: !172, file: !3, line: 129, column: 3)
!176 = !DILocation(line: 129, column: 19, scope: !175)
!177 = !DILocation(line: 129, column: 17, scope: !175)
!178 = !DILocation(line: 129, column: 3, scope: !172)
!179 = !DILocation(line: 130, column: 24, scope: !180)
!180 = distinct !DILexicalBlock(scope: !181, file: !3, line: 130, column: 9)
!181 = distinct !DILexicalBlock(scope: !175, file: !3, line: 129, column: 31)
!182 = !DILocation(line: 130, column: 15, scope: !180)
!183 = !DILocation(line: 130, column: 13, scope: !180)
!184 = !DILocation(line: 130, column: 36, scope: !180)
!185 = !DILocation(line: 130, column: 9, scope: !181)
!186 = !DILocation(line: 131, column: 17, scope: !187)
!187 = distinct !DILexicalBlock(scope: !180, file: !3, line: 130, column: 41)
!188 = !DILocation(line: 131, column: 12, scope: !187)
!189 = !DILocation(line: 131, column: 15, scope: !187)
!190 = !DILocation(line: 132, column: 11, scope: !191)
!191 = distinct !DILexicalBlock(scope: !187, file: !3, line: 132, column: 11)
!192 = !DILocation(line: 132, column: 13, scope: !191)
!193 = !DILocation(line: 132, column: 11, scope: !187)
!194 = !DILocation(line: 133, column: 9, scope: !191)
!195 = !DILocation(line: 134, column: 5, scope: !187)
!196 = !DILocation(line: 134, column: 16, scope: !197)
!197 = distinct !DILexicalBlock(scope: !180, file: !3, line: 134, column: 16)
!198 = !DILocation(line: 134, column: 19, scope: !197)
!199 = !DILocation(line: 134, column: 16, scope: !180)
!200 = !DILocation(line: 135, column: 11, scope: !201)
!201 = distinct !DILexicalBlock(scope: !202, file: !3, line: 135, column: 11)
!202 = distinct !DILexicalBlock(scope: !197, file: !3, line: 134, column: 24)
!203 = !DILocation(line: 135, column: 13, scope: !201)
!204 = !DILocation(line: 135, column: 11, scope: !202)
!205 = !DILocation(line: 136, column: 9, scope: !201)
!206 = !DILocation(line: 138, column: 9, scope: !201)
!207 = !DILocation(line: 140, column: 7, scope: !197)
!208 = !DILocation(line: 141, column: 3, scope: !181)
!209 = !DILocation(line: 129, column: 28, scope: !175)
!210 = !DILocation(line: 129, column: 3, scope: !175)
!211 = distinct !{!211, !178, !212}
!212 = !DILocation(line: 141, column: 3, scope: !172)
!213 = !DILocation(line: 142, column: 4, scope: !153)
!214 = !DILocation(line: 142, column: 9, scope: !153)
!215 = !DILocation(line: 143, column: 10, scope: !153)
!216 = !DILocation(line: 143, column: 3, scope: !153)
!217 = !DILocation(line: 144, column: 1, scope: !153)
!218 = distinct !DISubprogram(name: "rio_read", scope: !3, file: !3, line: 96, type: !219, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !81)
!219 = !DISubroutineType(types: !220)
!220 = !{!102, !70, !52, !106}
!221 = !DILocalVariable(name: "rp", arg: 1, scope: !218, file: !3, line: 96, type: !70)
!222 = !DILocation(line: 96, column: 32, scope: !218)
!223 = !DILocalVariable(name: "usrbuf", arg: 2, scope: !218, file: !3, line: 96, type: !52)
!224 = !DILocation(line: 96, column: 42, scope: !218)
!225 = !DILocalVariable(name: "n", arg: 3, scope: !218, file: !3, line: 96, type: !106)
!226 = !DILocation(line: 96, column: 57, scope: !218)
!227 = !DILocalVariable(name: "cnt", scope: !218, file: !3, line: 97, type: !48)
!228 = !DILocation(line: 97, column: 7, scope: !218)
!229 = !DILocation(line: 98, column: 3, scope: !218)
!230 = !DILocation(line: 98, column: 10, scope: !218)
!231 = !DILocation(line: 98, column: 14, scope: !218)
!232 = !DILocation(line: 98, column: 22, scope: !218)
!233 = !DILocation(line: 100, column: 24, scope: !234)
!234 = distinct !DILexicalBlock(scope: !218, file: !3, line: 98, column: 27)
!235 = !DILocation(line: 100, column: 28, scope: !234)
!236 = !DILocation(line: 100, column: 36, scope: !234)
!237 = !DILocation(line: 100, column: 40, scope: !234)
!238 = !DILocation(line: 100, column: 19, scope: !234)
!239 = !DILocation(line: 100, column: 5, scope: !234)
!240 = !DILocation(line: 100, column: 9, scope: !234)
!241 = !DILocation(line: 100, column: 17, scope: !234)
!242 = !DILocation(line: 102, column: 9, scope: !243)
!243 = distinct !DILexicalBlock(scope: !234, file: !3, line: 102, column: 9)
!244 = !DILocation(line: 102, column: 13, scope: !243)
!245 = !DILocation(line: 102, column: 21, scope: !243)
!246 = !DILocation(line: 102, column: 9, scope: !234)
!247 = !DILocation(line: 103, column: 11, scope: !248)
!248 = distinct !DILexicalBlock(scope: !249, file: !3, line: 103, column: 11)
!249 = distinct !DILexicalBlock(scope: !243, file: !3, line: 102, column: 25)
!250 = !DILocation(line: 103, column: 17, scope: !248)
!251 = !DILocation(line: 103, column: 11, scope: !249)
!252 = !DILocation(line: 104, column: 9, scope: !248)
!253 = !DILocation(line: 105, column: 5, scope: !249)
!254 = !DILocation(line: 106, column: 14, scope: !255)
!255 = distinct !DILexicalBlock(scope: !243, file: !3, line: 106, column: 14)
!256 = !DILocation(line: 106, column: 18, scope: !255)
!257 = !DILocation(line: 106, column: 26, scope: !255)
!258 = !DILocation(line: 106, column: 14, scope: !243)
!259 = !DILocation(line: 107, column: 7, scope: !255)
!260 = !DILocation(line: 109, column: 24, scope: !255)
!261 = !DILocation(line: 109, column: 28, scope: !255)
!262 = !DILocation(line: 109, column: 7, scope: !255)
!263 = !DILocation(line: 109, column: 11, scope: !255)
!264 = !DILocation(line: 109, column: 22, scope: !255)
!265 = distinct !{!265, !229, !266}
!266 = !DILocation(line: 110, column: 3, scope: !218)
!267 = !DILocation(line: 113, column: 9, scope: !218)
!268 = !DILocation(line: 113, column: 7, scope: !218)
!269 = !DILocation(line: 114, column: 7, scope: !270)
!270 = distinct !DILexicalBlock(scope: !218, file: !3, line: 114, column: 7)
!271 = !DILocation(line: 114, column: 11, scope: !270)
!272 = !DILocation(line: 114, column: 21, scope: !270)
!273 = !DILocation(line: 114, column: 19, scope: !270)
!274 = !DILocation(line: 114, column: 7, scope: !218)
!275 = !DILocation(line: 115, column: 11, scope: !270)
!276 = !DILocation(line: 115, column: 15, scope: !270)
!277 = !DILocation(line: 115, column: 9, scope: !270)
!278 = !DILocation(line: 115, column: 5, scope: !270)
!279 = !DILocation(line: 116, column: 10, scope: !218)
!280 = !DILocation(line: 116, column: 18, scope: !218)
!281 = !DILocation(line: 116, column: 22, scope: !218)
!282 = !DILocation(line: 116, column: 34, scope: !218)
!283 = !DILocation(line: 116, column: 3, scope: !218)
!284 = !DILocation(line: 117, column: 21, scope: !218)
!285 = !DILocation(line: 117, column: 3, scope: !218)
!286 = !DILocation(line: 117, column: 7, scope: !218)
!287 = !DILocation(line: 117, column: 18, scope: !218)
!288 = !DILocation(line: 118, column: 18, scope: !218)
!289 = !DILocation(line: 118, column: 3, scope: !218)
!290 = !DILocation(line: 118, column: 7, scope: !218)
!291 = !DILocation(line: 118, column: 15, scope: !218)
!292 = !DILocation(line: 119, column: 10, scope: !218)
!293 = !DILocation(line: 119, column: 3, scope: !218)
!294 = !DILocation(line: 120, column: 1, scope: !218)
!295 = distinct !DISubprogram(name: "format_size", scope: !3, file: !3, line: 146, type: !296, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !81)
!296 = !DISubroutineType(types: !297)
!297 = !{null, !52, !298}
!298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64)
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !300, line: 46, size: 1152, elements: !301)
!300 = !DIFile(filename: "/usr/include/bits/stat.h", directory: "")
!301 = !{!302, !304, !306, !308, !310, !312, !314, !315, !316, !318, !320, !322, !330, !331, !332}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !299, file: !300, line: 48, baseType: !303, size: 64)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !28, line: 145, baseType: !108)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !299, file: !300, line: 53, baseType: !305, size: 64, offset: 64)
!305 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !28, line: 148, baseType: !108)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !299, file: !300, line: 61, baseType: !307, size: 64, offset: 128)
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !28, line: 151, baseType: !108)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !299, file: !300, line: 62, baseType: !309, size: 32, offset: 192)
!309 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !28, line: 150, baseType: !7)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !299, file: !300, line: 64, baseType: !311, size: 32, offset: 224)
!311 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !28, line: 146, baseType: !7)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !299, file: !300, line: 65, baseType: !313, size: 32, offset: 256)
!313 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !28, line: 147, baseType: !7)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !299, file: !300, line: 67, baseType: !48, size: 32, offset: 288)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !299, file: !300, line: 69, baseType: !303, size: 64, offset: 320)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !299, file: !300, line: 74, baseType: !317, size: 64, offset: 384)
!317 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !28, line: 152, baseType: !105)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !299, file: !300, line: 78, baseType: !319, size: 64, offset: 448)
!319 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !28, line: 174, baseType: !105)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !299, file: !300, line: 80, baseType: !321, size: 64, offset: 512)
!321 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !28, line: 179, baseType: !105)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !299, file: !300, line: 91, baseType: !323, size: 128, offset: 576)
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !324, line: 9, size: 128, elements: !325)
!324 = !DIFile(filename: "/usr/include/bits/types/struct_timespec.h", directory: "")
!325 = !{!326, !328}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !323, file: !324, line: 11, baseType: !327, size: 64)
!327 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !28, line: 160, baseType: !105)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !323, file: !324, line: 12, baseType: !329, size: 64, offset: 64)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !28, line: 196, baseType: !105)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !299, file: !300, line: 92, baseType: !323, size: 128, offset: 704)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !299, file: !300, line: 93, baseType: !323, size: 128, offset: 832)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !299, file: !300, line: 106, baseType: !333, size: 192, offset: 960)
!333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !329, size: 192, elements: !334)
!334 = !{!335}
!335 = !DISubrange(count: 3)
!336 = !DILocalVariable(name: "buf", arg: 1, scope: !295, file: !3, line: 146, type: !52)
!337 = !DILocation(line: 146, column: 24, scope: !295)
!338 = !DILocalVariable(name: "stat", arg: 2, scope: !295, file: !3, line: 146, type: !298)
!339 = !DILocation(line: 146, column: 42, scope: !295)
!340 = !DILocation(line: 147, column: 6, scope: !341)
!341 = distinct !DILexicalBlock(scope: !295, file: !3, line: 147, column: 6)
!342 = !DILocation(line: 147, column: 6, scope: !295)
!343 = !DILocation(line: 148, column: 13, scope: !344)
!344 = distinct !DILexicalBlock(scope: !341, file: !3, line: 147, column: 29)
!345 = !DILocation(line: 148, column: 5, scope: !344)
!346 = !DILocation(line: 149, column: 3, scope: !344)
!347 = !DILocalVariable(name: "size", scope: !348, file: !3, line: 150, type: !349)
!348 = distinct !DILexicalBlock(scope: !341, file: !3, line: 149, column: 10)
!349 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !103, line: 85, baseType: !317)
!350 = !DILocation(line: 150, column: 11, scope: !348)
!351 = !DILocation(line: 150, column: 18, scope: !348)
!352 = !DILocation(line: 150, column: 24, scope: !348)
!353 = !DILocation(line: 151, column: 8, scope: !354)
!354 = distinct !DILexicalBlock(scope: !348, file: !3, line: 151, column: 8)
!355 = !DILocation(line: 151, column: 13, scope: !354)
!356 = !DILocation(line: 151, column: 8, scope: !348)
!357 = !DILocation(line: 152, column: 15, scope: !358)
!358 = distinct !DILexicalBlock(scope: !354, file: !3, line: 151, column: 20)
!359 = !DILocation(line: 152, column: 27, scope: !358)
!360 = !DILocation(line: 152, column: 7, scope: !358)
!361 = !DILocation(line: 153, column: 5, scope: !358)
!362 = !DILocation(line: 153, column: 16, scope: !363)
!363 = distinct !DILexicalBlock(scope: !354, file: !3, line: 153, column: 16)
!364 = !DILocation(line: 153, column: 21, scope: !363)
!365 = !DILocation(line: 153, column: 16, scope: !354)
!366 = !DILocation(line: 154, column: 15, scope: !367)
!367 = distinct !DILexicalBlock(scope: !363, file: !3, line: 153, column: 35)
!368 = !DILocation(line: 154, column: 37, scope: !367)
!369 = !DILocation(line: 154, column: 29, scope: !367)
!370 = !DILocation(line: 154, column: 42, scope: !367)
!371 = !DILocation(line: 154, column: 7, scope: !367)
!372 = !DILocation(line: 155, column: 5, scope: !367)
!373 = !DILocation(line: 155, column: 16, scope: !374)
!374 = distinct !DILexicalBlock(scope: !363, file: !3, line: 155, column: 16)
!375 = !DILocation(line: 155, column: 21, scope: !374)
!376 = !DILocation(line: 155, column: 16, scope: !363)
!377 = !DILocation(line: 156, column: 15, scope: !378)
!378 = distinct !DILexicalBlock(scope: !374, file: !3, line: 155, column: 42)
!379 = !DILocation(line: 156, column: 37, scope: !378)
!380 = !DILocation(line: 156, column: 29, scope: !378)
!381 = !DILocation(line: 156, column: 42, scope: !378)
!382 = !DILocation(line: 156, column: 49, scope: !378)
!383 = !DILocation(line: 156, column: 7, scope: !378)
!384 = !DILocation(line: 157, column: 5, scope: !378)
!385 = !DILocation(line: 158, column: 15, scope: !386)
!386 = distinct !DILexicalBlock(scope: !374, file: !3, line: 157, column: 12)
!387 = !DILocation(line: 158, column: 37, scope: !386)
!388 = !DILocation(line: 158, column: 29, scope: !386)
!389 = !DILocation(line: 158, column: 42, scope: !386)
!390 = !DILocation(line: 158, column: 49, scope: !386)
!391 = !DILocation(line: 158, column: 56, scope: !386)
!392 = !DILocation(line: 158, column: 7, scope: !386)
!393 = !DILocation(line: 161, column: 1, scope: !295)
!394 = distinct !DISubprogram(name: "handle_directory_request", scope: !3, file: !3, line: 163, type: !395, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !81)
!395 = !DISubroutineType(types: !396)
!396 = !{null, !48, !48, !52}
!397 = !DILocalVariable(name: "out_fd", arg: 1, scope: !394, file: !3, line: 163, type: !48)
!398 = !DILocation(line: 163, column: 35, scope: !394)
!399 = !DILocalVariable(name: "dir_fd", arg: 2, scope: !394, file: !3, line: 163, type: !48)
!400 = !DILocation(line: 163, column: 47, scope: !394)
!401 = !DILocalVariable(name: "filename", arg: 3, scope: !394, file: !3, line: 163, type: !52)
!402 = !DILocation(line: 163, column: 61, scope: !394)
!403 = !DILocalVariable(name: "buf", scope: !394, file: !3, line: 164, type: !78)
!404 = !DILocation(line: 164, column: 8, scope: !394)
!405 = !DILocalVariable(name: "m_time", scope: !394, file: !3, line: 164, type: !406)
!406 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 256, elements: !407)
!407 = !{!408}
!408 = !DISubrange(count: 32)
!409 = !DILocation(line: 164, column: 22, scope: !394)
!410 = !DILocalVariable(name: "size", scope: !394, file: !3, line: 164, type: !411)
!411 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 128, elements: !412)
!412 = !{!413}
!413 = !DISubrange(count: 16)
!414 = !DILocation(line: 164, column: 34, scope: !394)
!415 = !DILocalVariable(name: "statbuf", scope: !394, file: !3, line: 165, type: !299)
!416 = !DILocation(line: 165, column: 15, scope: !394)
!417 = !DILocation(line: 166, column: 11, scope: !394)
!418 = !DILocation(line: 166, column: 3, scope: !394)
!419 = !DILocation(line: 172, column: 10, scope: !394)
!420 = !DILocation(line: 172, column: 18, scope: !394)
!421 = !DILocation(line: 172, column: 30, scope: !394)
!422 = !DILocation(line: 172, column: 23, scope: !394)
!423 = !DILocation(line: 172, column: 3, scope: !394)
!424 = !DILocalVariable(name: "d", scope: !394, file: !3, line: 173, type: !425)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 64)
!426 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !427, line: 127, baseType: !428)
!427 = !DIFile(filename: "/usr/include/dirent.h", directory: "")
!428 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !427, line: 127, flags: DIFlagFwdDecl)
!429 = !DILocation(line: 173, column: 8, scope: !394)
!430 = !DILocation(line: 173, column: 22, scope: !394)
!431 = !DILocation(line: 173, column: 12, scope: !394)
!432 = !DILocalVariable(name: "dp", scope: !394, file: !3, line: 174, type: !433)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !435, line: 22, size: 2240, elements: !436)
!435 = !DIFile(filename: "/usr/include/bits/dirent.h", directory: "")
!436 = !{!437, !438, !439, !440, !442}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !434, file: !435, line: 25, baseType: !305, size: 64)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !434, file: !435, line: 26, baseType: !317, size: 64, offset: 64)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !434, file: !435, line: 31, baseType: !29, size: 16, offset: 128)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !434, file: !435, line: 32, baseType: !441, size: 8, offset: 144)
!441 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !434, file: !435, line: 33, baseType: !443, size: 2048, offset: 152)
!443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 2048, elements: !444)
!444 = !{!445}
!445 = !DISubrange(count: 256)
!446 = !DILocation(line: 174, column: 18, scope: !394)
!447 = !DILocalVariable(name: "ffd", scope: !394, file: !3, line: 175, type: !48)
!448 = !DILocation(line: 175, column: 7, scope: !394)
!449 = !DILocation(line: 176, column: 3, scope: !394)
!450 = !DILocation(line: 176, column: 24, scope: !394)
!451 = !DILocation(line: 176, column: 16, scope: !394)
!452 = !DILocation(line: 176, column: 14, scope: !394)
!453 = !DILocation(line: 176, column: 28, scope: !394)
!454 = !DILocation(line: 177, column: 16, scope: !455)
!455 = distinct !DILexicalBlock(scope: !456, file: !3, line: 177, column: 8)
!456 = distinct !DILexicalBlock(scope: !394, file: !3, line: 176, column: 36)
!457 = !DILocation(line: 177, column: 20, scope: !455)
!458 = !DILocation(line: 177, column: 9, scope: !455)
!459 = !DILocation(line: 177, column: 33, scope: !455)
!460 = !DILocation(line: 177, column: 44, scope: !455)
!461 = !DILocation(line: 177, column: 48, scope: !455)
!462 = !DILocation(line: 177, column: 37, scope: !455)
!463 = !DILocation(line: 177, column: 8, scope: !456)
!464 = !DILocation(line: 178, column: 7, scope: !465)
!465 = distinct !DILexicalBlock(scope: !455, file: !3, line: 177, column: 62)
!466 = distinct !{!466, !449, !467}
!467 = !DILocation(line: 195, column: 3, scope: !394)
!468 = !DILocation(line: 180, column: 23, scope: !469)
!469 = distinct !DILexicalBlock(scope: !456, file: !3, line: 180, column: 9)
!470 = !DILocation(line: 180, column: 31, scope: !469)
!471 = !DILocation(line: 180, column: 35, scope: !469)
!472 = !DILocation(line: 180, column: 16, scope: !469)
!473 = !DILocation(line: 180, column: 14, scope: !469)
!474 = !DILocation(line: 180, column: 54, scope: !469)
!475 = !DILocation(line: 180, column: 9, scope: !456)
!476 = !DILocation(line: 181, column: 14, scope: !477)
!477 = distinct !DILexicalBlock(scope: !469, file: !3, line: 180, column: 60)
!478 = !DILocation(line: 181, column: 18, scope: !477)
!479 = !DILocation(line: 181, column: 7, scope: !477)
!480 = !DILocation(line: 182, column: 7, scope: !477)
!481 = !DILocation(line: 184, column: 11, scope: !456)
!482 = !DILocation(line: 184, column: 5, scope: !456)
!483 = !DILocation(line: 185, column: 14, scope: !456)
!484 = !DILocation(line: 186, column: 51, scope: !456)
!485 = !DILocation(line: 186, column: 32, scope: !456)
!486 = !DILocation(line: 185, column: 5, scope: !456)
!487 = !DILocation(line: 187, column: 17, scope: !456)
!488 = !DILocation(line: 187, column: 5, scope: !456)
!489 = !DILocation(line: 188, column: 8, scope: !490)
!490 = distinct !DILexicalBlock(scope: !456, file: !3, line: 188, column: 8)
!491 = !DILocation(line: 188, column: 33, scope: !490)
!492 = !DILocation(line: 188, column: 36, scope: !490)
!493 = !DILocation(line: 188, column: 8, scope: !456)
!494 = !DILocalVariable(name: "d", scope: !495, file: !3, line: 189, type: !52)
!495 = distinct !DILexicalBlock(scope: !490, file: !3, line: 188, column: 61)
!496 = !DILocation(line: 189, column: 13, scope: !495)
!497 = !DILocation(line: 189, column: 17, scope: !495)
!498 = !DILocation(line: 190, column: 15, scope: !495)
!499 = !DILocation(line: 191, column: 15, scope: !495)
!500 = !DILocation(line: 191, column: 19, scope: !495)
!501 = !DILocation(line: 191, column: 27, scope: !495)
!502 = !DILocation(line: 191, column: 30, scope: !495)
!503 = !DILocation(line: 191, column: 34, scope: !495)
!504 = !DILocation(line: 191, column: 42, scope: !495)
!505 = !DILocation(line: 191, column: 45, scope: !495)
!506 = !DILocation(line: 191, column: 53, scope: !495)
!507 = !DILocation(line: 190, column: 7, scope: !495)
!508 = !DILocation(line: 192, column: 14, scope: !495)
!509 = !DILocation(line: 192, column: 22, scope: !495)
!510 = !DILocation(line: 192, column: 34, scope: !495)
!511 = !DILocation(line: 192, column: 27, scope: !495)
!512 = !DILocation(line: 192, column: 7, scope: !495)
!513 = !DILocation(line: 193, column: 5, scope: !495)
!514 = !DILocation(line: 194, column: 11, scope: !456)
!515 = !DILocation(line: 194, column: 5, scope: !456)
!516 = !DILocation(line: 196, column: 11, scope: !394)
!517 = !DILocation(line: 196, column: 3, scope: !394)
!518 = !DILocation(line: 197, column: 10, scope: !394)
!519 = !DILocation(line: 197, column: 18, scope: !394)
!520 = !DILocation(line: 197, column: 30, scope: !394)
!521 = !DILocation(line: 197, column: 23, scope: !394)
!522 = !DILocation(line: 197, column: 3, scope: !394)
!523 = !DILocation(line: 198, column: 12, scope: !394)
!524 = !DILocation(line: 198, column: 3, scope: !394)
!525 = !DILocation(line: 199, column: 1, scope: !394)
!526 = distinct !DISubprogram(name: "open_listenfd", scope: !3, file: !3, line: 216, type: !527, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !81)
!527 = !DISubroutineType(types: !528)
!528 = !{!48, !48}
!529 = !DILocalVariable(name: "port", arg: 1, scope: !526, file: !3, line: 216, type: !48)
!530 = !DILocation(line: 216, column: 23, scope: !526)
!531 = !DILocalVariable(name: "listenfd", scope: !526, file: !3, line: 217, type: !48)
!532 = !DILocation(line: 217, column: 7, scope: !526)
!533 = !DILocalVariable(name: "optval", scope: !526, file: !3, line: 217, type: !48)
!534 = !DILocation(line: 217, column: 17, scope: !526)
!535 = !DILocalVariable(name: "serveraddr", scope: !526, file: !3, line: 218, type: !536)
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr_in", file: !24, line: 237, size: 128, elements: !537)
!537 = !{!538, !539, !543, !547}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "sin_family", scope: !536, file: !24, line: 239, baseType: !36, size: 16)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "sin_port", scope: !536, file: !24, line: 240, baseType: !540, size: 16, offset: 16)
!540 = !DIDerivedType(tag: DW_TAG_typedef, name: "in_port_t", file: !24, line: 119, baseType: !541)
!541 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !26, line: 25, baseType: !542)
!542 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !28, line: 40, baseType: !29)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "sin_addr", scope: !536, file: !24, line: 241, baseType: !544, size: 32, offset: 32)
!544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in_addr", file: !24, line: 31, size: 32, elements: !545)
!545 = !{!546}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "s_addr", scope: !544, file: !24, line: 33, baseType: !23, size: 32)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "sin_zero", scope: !536, file: !24, line: 244, baseType: !548, size: 64, offset: 64)
!548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !441, size: 64, elements: !549)
!549 = !{!550}
!550 = !DISubrange(count: 8)
!551 = !DILocation(line: 218, column: 22, scope: !526)
!552 = !DILocation(line: 221, column: 19, scope: !553)
!553 = distinct !DILexicalBlock(scope: !526, file: !3, line: 221, column: 7)
!554 = !DILocation(line: 221, column: 17, scope: !553)
!555 = !DILocation(line: 221, column: 52, scope: !553)
!556 = !DILocation(line: 221, column: 7, scope: !526)
!557 = !DILocation(line: 222, column: 5, scope: !553)
!558 = !DILocation(line: 225, column: 18, scope: !559)
!559 = distinct !DILexicalBlock(scope: !526, file: !3, line: 225, column: 7)
!560 = !DILocation(line: 226, column: 18, scope: !559)
!561 = !DILocation(line: 225, column: 7, scope: !559)
!562 = !DILocation(line: 226, column: 55, scope: !559)
!563 = !DILocation(line: 225, column: 7, scope: !526)
!564 = !DILocation(line: 227, column: 5, scope: !559)
!565 = !DILocation(line: 231, column: 18, scope: !566)
!566 = distinct !DILexicalBlock(scope: !526, file: !3, line: 231, column: 7)
!567 = !DILocation(line: 232, column: 18, scope: !566)
!568 = !DILocation(line: 231, column: 7, scope: !566)
!569 = !DILocation(line: 232, column: 55, scope: !566)
!570 = !DILocation(line: 231, column: 7, scope: !526)
!571 = !DILocation(line: 233, column: 5, scope: !566)
!572 = !DILocation(line: 237, column: 3, scope: !526)
!573 = !DILocation(line: 238, column: 14, scope: !526)
!574 = !DILocation(line: 238, column: 25, scope: !526)
!575 = !DILocation(line: 239, column: 32, scope: !526)
!576 = !DILocation(line: 239, column: 14, scope: !526)
!577 = !DILocation(line: 239, column: 23, scope: !526)
!578 = !DILocation(line: 239, column: 30, scope: !526)
!579 = !DILocation(line: 240, column: 47, scope: !526)
!580 = !DILocation(line: 240, column: 31, scope: !526)
!581 = !DILocation(line: 240, column: 25, scope: !526)
!582 = !DILocation(line: 240, column: 14, scope: !526)
!583 = !DILocation(line: 240, column: 23, scope: !526)
!584 = !DILocation(line: 241, column: 12, scope: !585)
!585 = distinct !DILexicalBlock(scope: !526, file: !3, line: 241, column: 7)
!586 = !DILocation(line: 241, column: 22, scope: !585)
!587 = !DILocation(line: 241, column: 7, scope: !585)
!588 = !DILocation(line: 241, column: 61, scope: !585)
!589 = !DILocation(line: 241, column: 7, scope: !526)
!590 = !DILocation(line: 242, column: 5, scope: !585)
!591 = !DILocation(line: 245, column: 14, scope: !592)
!592 = distinct !DILexicalBlock(scope: !526, file: !3, line: 245, column: 7)
!593 = !DILocation(line: 245, column: 7, scope: !592)
!594 = !DILocation(line: 245, column: 33, scope: !592)
!595 = !DILocation(line: 245, column: 7, scope: !526)
!596 = !DILocation(line: 246, column: 5, scope: !592)
!597 = !DILocation(line: 247, column: 10, scope: !526)
!598 = !DILocation(line: 247, column: 3, scope: !526)
!599 = !DILocation(line: 248, column: 1, scope: !526)
!600 = distinct !DISubprogram(name: "url_decode", scope: !3, file: !3, line: 250, type: !601, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !81)
!601 = !DISubroutineType(types: !602)
!602 = !{null, !52, !52, !48}
!603 = !DILocalVariable(name: "src", arg: 1, scope: !600, file: !3, line: 250, type: !52)
!604 = !DILocation(line: 250, column: 23, scope: !600)
!605 = !DILocalVariable(name: "dest", arg: 2, scope: !600, file: !3, line: 250, type: !52)
!606 = !DILocation(line: 250, column: 34, scope: !600)
!607 = !DILocalVariable(name: "max", arg: 3, scope: !600, file: !3, line: 250, type: !48)
!608 = !DILocation(line: 250, column: 44, scope: !600)
!609 = !DILocalVariable(name: "p", scope: !600, file: !3, line: 251, type: !52)
!610 = !DILocation(line: 251, column: 9, scope: !600)
!611 = !DILocation(line: 251, column: 13, scope: !600)
!612 = !DILocalVariable(name: "code", scope: !600, file: !3, line: 252, type: !613)
!613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 24, elements: !334)
!614 = !DILocation(line: 252, column: 8, scope: !600)
!615 = !DILocation(line: 253, column: 3, scope: !600)
!616 = !DILocation(line: 253, column: 10, scope: !600)
!617 = !DILocation(line: 253, column: 9, scope: !600)
!618 = !DILocation(line: 253, column: 12, scope: !600)
!619 = !DILocation(line: 253, column: 15, scope: !600)
!620 = !DILocation(line: 0, scope: !600)
!621 = !DILocation(line: 254, column: 9, scope: !622)
!622 = distinct !DILexicalBlock(scope: !623, file: !3, line: 254, column: 8)
!623 = distinct !DILexicalBlock(scope: !600, file: !3, line: 253, column: 22)
!624 = !DILocation(line: 254, column: 8, scope: !622)
!625 = !DILocation(line: 254, column: 11, scope: !622)
!626 = !DILocation(line: 254, column: 8, scope: !623)
!627 = !DILocation(line: 255, column: 7, scope: !628)
!628 = distinct !DILexicalBlock(scope: !622, file: !3, line: 254, column: 19)
!629 = !DILocation(line: 255, column: 20, scope: !628)
!630 = !DILocation(line: 256, column: 31, scope: !628)
!631 = !DILocation(line: 256, column: 23, scope: !628)
!632 = !DILocation(line: 256, column: 17, scope: !628)
!633 = !DILocation(line: 256, column: 12, scope: !628)
!634 = !DILocation(line: 256, column: 15, scope: !628)
!635 = !DILocation(line: 257, column: 9, scope: !628)
!636 = !DILocation(line: 258, column: 5, scope: !628)
!637 = !DILocation(line: 259, column: 19, scope: !638)
!638 = distinct !DILexicalBlock(scope: !622, file: !3, line: 258, column: 12)
!639 = !DILocation(line: 259, column: 17, scope: !638)
!640 = !DILocation(line: 259, column: 12, scope: !638)
!641 = !DILocation(line: 259, column: 15, scope: !638)
!642 = distinct !{!642, !615, !643}
!643 = !DILocation(line: 261, column: 3, scope: !600)
!644 = !DILocation(line: 262, column: 4, scope: !600)
!645 = !DILocation(line: 262, column: 9, scope: !600)
!646 = !DILocation(line: 263, column: 1, scope: !600)
!647 = distinct !DISubprogram(name: "parse_request", scope: !3, file: !3, line: 265, type: !648, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !81)
!648 = !DISubroutineType(types: !649)
!649 = !{null, !48, !650}
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 64)
!651 = !DIDerivedType(tag: DW_TAG_typedef, name: "http_request", file: !3, line: 36, baseType: !652)
!652 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 32, size: 4224, elements: !653)
!653 = !{!654, !658, !659}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !652, file: !3, line: 33, baseType: !655, size: 4096)
!655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !40, size: 4096, elements: !656)
!656 = !{!657}
!657 = !DISubrange(count: 512)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !652, file: !3, line: 34, baseType: !349, size: 64, offset: 4096)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !652, file: !3, line: 35, baseType: !106, size: 64, offset: 4160)
!660 = !DILocalVariable(name: "fd", arg: 1, scope: !647, file: !3, line: 265, type: !48)
!661 = !DILocation(line: 265, column: 24, scope: !647)
!662 = !DILocalVariable(name: "req", arg: 2, scope: !647, file: !3, line: 265, type: !650)
!663 = !DILocation(line: 265, column: 42, scope: !647)
!664 = !DILocalVariable(name: "rio", scope: !647, file: !3, line: 266, type: !71)
!665 = !DILocation(line: 266, column: 9, scope: !647)
!666 = !DILocalVariable(name: "buf", scope: !647, file: !3, line: 267, type: !78)
!667 = !DILocation(line: 267, column: 8, scope: !647)
!668 = !DILocalVariable(name: "method", scope: !647, file: !3, line: 267, type: !78)
!669 = !DILocation(line: 267, column: 22, scope: !647)
!670 = !DILocalVariable(name: "uri", scope: !647, file: !3, line: 267, type: !78)
!671 = !DILocation(line: 267, column: 39, scope: !647)
!672 = !DILocation(line: 268, column: 3, scope: !647)
!673 = !DILocation(line: 268, column: 8, scope: !647)
!674 = !DILocation(line: 268, column: 15, scope: !647)
!675 = !DILocation(line: 269, column: 3, scope: !647)
!676 = !DILocation(line: 269, column: 8, scope: !647)
!677 = !DILocation(line: 269, column: 12, scope: !647)
!678 = !DILocation(line: 271, column: 23, scope: !647)
!679 = !DILocation(line: 271, column: 3, scope: !647)
!680 = !DILocation(line: 272, column: 23, scope: !647)
!681 = !DILocation(line: 272, column: 3, scope: !647)
!682 = !DILocation(line: 273, column: 10, scope: !647)
!683 = !DILocation(line: 273, column: 24, scope: !647)
!684 = !DILocation(line: 273, column: 32, scope: !647)
!685 = !DILocation(line: 273, column: 3, scope: !647)
!686 = !DILocation(line: 275, column: 3, scope: !647)
!687 = !DILocation(line: 275, column: 9, scope: !647)
!688 = !DILocation(line: 275, column: 16, scope: !647)
!689 = !DILocation(line: 275, column: 24, scope: !647)
!690 = !DILocation(line: 275, column: 27, scope: !647)
!691 = !DILocation(line: 275, column: 34, scope: !647)
!692 = !DILocation(line: 0, scope: !647)
!693 = !DILocation(line: 276, column: 25, scope: !694)
!694 = distinct !DILexicalBlock(scope: !647, file: !3, line: 275, column: 43)
!695 = !DILocation(line: 276, column: 5, scope: !694)
!696 = !DILocation(line: 277, column: 8, scope: !697)
!697 = distinct !DILexicalBlock(scope: !694, file: !3, line: 277, column: 8)
!698 = !DILocation(line: 277, column: 15, scope: !697)
!699 = !DILocation(line: 277, column: 22, scope: !697)
!700 = !DILocation(line: 277, column: 25, scope: !697)
!701 = !DILocation(line: 277, column: 32, scope: !697)
!702 = !DILocation(line: 277, column: 39, scope: !697)
!703 = !DILocation(line: 277, column: 42, scope: !697)
!704 = !DILocation(line: 277, column: 49, scope: !697)
!705 = !DILocation(line: 277, column: 8, scope: !694)
!706 = !DILocation(line: 278, column: 14, scope: !707)
!707 = distinct !DILexicalBlock(scope: !697, file: !3, line: 277, column: 56)
!708 = !DILocation(line: 278, column: 44, scope: !707)
!709 = !DILocation(line: 278, column: 49, scope: !707)
!710 = !DILocation(line: 278, column: 58, scope: !707)
!711 = !DILocation(line: 278, column: 63, scope: !707)
!712 = !DILocation(line: 278, column: 7, scope: !707)
!713 = !DILocation(line: 280, column: 11, scope: !714)
!714 = distinct !DILexicalBlock(scope: !707, file: !3, line: 280, column: 11)
!715 = !DILocation(line: 280, column: 16, scope: !714)
!716 = !DILocation(line: 280, column: 20, scope: !714)
!717 = !DILocation(line: 280, column: 11, scope: !707)
!718 = !DILocation(line: 280, column: 26, scope: !714)
!719 = !DILocation(line: 280, column: 31, scope: !714)
!720 = !DILocation(line: 280, column: 35, scope: !714)
!721 = !DILocation(line: 281, column: 5, scope: !707)
!722 = distinct !{!722, !686, !723}
!723 = !DILocation(line: 282, column: 3, scope: !647)
!724 = !DILocalVariable(name: "filename", scope: !647, file: !3, line: 283, type: !52)
!725 = !DILocation(line: 283, column: 9, scope: !647)
!726 = !DILocation(line: 283, column: 20, scope: !647)
!727 = !DILocation(line: 284, column: 6, scope: !728)
!728 = distinct !DILexicalBlock(scope: !647, file: !3, line: 284, column: 6)
!729 = !DILocation(line: 284, column: 13, scope: !728)
!730 = !DILocation(line: 284, column: 6, scope: !647)
!731 = !DILocation(line: 285, column: 16, scope: !732)
!732 = distinct !DILexicalBlock(scope: !728, file: !3, line: 284, column: 20)
!733 = !DILocation(line: 285, column: 20, scope: !732)
!734 = !DILocation(line: 285, column: 14, scope: !732)
!735 = !DILocalVariable(name: "length", scope: !732, file: !3, line: 286, type: !48)
!736 = !DILocation(line: 286, column: 9, scope: !732)
!737 = !DILocation(line: 286, column: 25, scope: !732)
!738 = !DILocation(line: 286, column: 18, scope: !732)
!739 = !DILocation(line: 287, column: 9, scope: !740)
!740 = distinct !DILexicalBlock(scope: !732, file: !3, line: 287, column: 9)
!741 = !DILocation(line: 287, column: 16, scope: !740)
!742 = !DILocation(line: 287, column: 9, scope: !732)
!743 = !DILocation(line: 288, column: 16, scope: !744)
!744 = distinct !DILexicalBlock(scope: !740, file: !3, line: 287, column: 21)
!745 = !DILocation(line: 289, column: 5, scope: !744)
!746 = !DILocalVariable(name: "i", scope: !747, file: !3, line: 290, type: !48)
!747 = distinct !DILexicalBlock(scope: !748, file: !3, line: 290, column: 7)
!748 = distinct !DILexicalBlock(scope: !740, file: !3, line: 289, column: 12)
!749 = !DILocation(line: 290, column: 16, scope: !747)
!750 = !DILocation(line: 290, column: 12, scope: !747)
!751 = !DILocation(line: 290, column: 23, scope: !752)
!752 = distinct !DILexicalBlock(scope: !747, file: !3, line: 290, column: 7)
!753 = !DILocation(line: 290, column: 27, scope: !752)
!754 = !DILocation(line: 290, column: 25, scope: !752)
!755 = !DILocation(line: 290, column: 7, scope: !747)
!756 = !DILocation(line: 291, column: 13, scope: !757)
!757 = distinct !DILexicalBlock(scope: !758, file: !3, line: 291, column: 13)
!758 = distinct !DILexicalBlock(scope: !752, file: !3, line: 290, column: 41)
!759 = !DILocation(line: 291, column: 22, scope: !757)
!760 = !DILocation(line: 291, column: 25, scope: !757)
!761 = !DILocation(line: 291, column: 13, scope: !758)
!762 = !DILocation(line: 292, column: 11, scope: !763)
!763 = distinct !DILexicalBlock(scope: !757, file: !3, line: 291, column: 33)
!764 = !DILocation(line: 292, column: 20, scope: !763)
!765 = !DILocation(line: 292, column: 23, scope: !763)
!766 = !DILocation(line: 293, column: 11, scope: !763)
!767 = !DILocation(line: 295, column: 7, scope: !758)
!768 = !DILocation(line: 290, column: 35, scope: !752)
!769 = !DILocation(line: 290, column: 7, scope: !752)
!770 = distinct !{!770, !755, !771}
!771 = !DILocation(line: 295, column: 7, scope: !747)
!772 = !DILocation(line: 297, column: 3, scope: !732)
!773 = !DILocation(line: 298, column: 14, scope: !647)
!774 = !DILocation(line: 298, column: 24, scope: !647)
!775 = !DILocation(line: 298, column: 29, scope: !647)
!776 = !DILocation(line: 298, column: 3, scope: !647)
!777 = !DILocation(line: 299, column: 1, scope: !647)
!778 = distinct !DISubprogram(name: "log_access", scope: !3, file: !3, line: 302, type: !779, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !81)
!779 = !DISubroutineType(types: !780)
!780 = !{null, !48, !781, !650}
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 64)
!782 = !DILocalVariable(name: "status", arg: 1, scope: !778, file: !3, line: 302, type: !48)
!783 = !DILocation(line: 302, column: 21, scope: !778)
!784 = !DILocalVariable(name: "c_addr", arg: 2, scope: !778, file: !3, line: 302, type: !781)
!785 = !DILocation(line: 302, column: 49, scope: !778)
!786 = !DILocalVariable(name: "req", arg: 3, scope: !778, file: !3, line: 302, type: !650)
!787 = !DILocation(line: 302, column: 71, scope: !778)
!788 = !DILocation(line: 303, column: 39, scope: !778)
!789 = !DILocation(line: 303, column: 47, scope: !778)
!790 = !DILocation(line: 303, column: 29, scope: !778)
!791 = !DILocation(line: 304, column: 16, scope: !778)
!792 = !DILocation(line: 304, column: 24, scope: !778)
!793 = !DILocation(line: 304, column: 10, scope: !778)
!794 = !DILocation(line: 304, column: 35, scope: !778)
!795 = !DILocation(line: 304, column: 43, scope: !778)
!796 = !DILocation(line: 304, column: 48, scope: !778)
!797 = !DILocation(line: 303, column: 3, scope: !778)
!798 = !DILocation(line: 305, column: 1, scope: !778)
!799 = distinct !DISubprogram(name: "client_error", scope: !3, file: !3, line: 307, type: !800, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !81)
!800 = !DISubroutineType(types: !801)
!801 = !{null, !48, !48, !52, !52}
!802 = !DILocalVariable(name: "fd", arg: 1, scope: !799, file: !3, line: 307, type: !48)
!803 = !DILocation(line: 307, column: 23, scope: !799)
!804 = !DILocalVariable(name: "status", arg: 2, scope: !799, file: !3, line: 307, type: !48)
!805 = !DILocation(line: 307, column: 31, scope: !799)
!806 = !DILocalVariable(name: "msg", arg: 3, scope: !799, file: !3, line: 307, type: !52)
!807 = !DILocation(line: 307, column: 45, scope: !799)
!808 = !DILocalVariable(name: "longmsg", arg: 4, scope: !799, file: !3, line: 307, type: !52)
!809 = !DILocation(line: 307, column: 56, scope: !799)
!810 = !DILocalVariable(name: "buf", scope: !799, file: !3, line: 308, type: !78)
!811 = !DILocation(line: 308, column: 8, scope: !799)
!812 = !DILocation(line: 309, column: 11, scope: !799)
!813 = !DILocation(line: 309, column: 38, scope: !799)
!814 = !DILocation(line: 309, column: 46, scope: !799)
!815 = !DILocation(line: 309, column: 3, scope: !799)
!816 = !DILocation(line: 310, column: 11, scope: !799)
!817 = !DILocation(line: 310, column: 24, scope: !799)
!818 = !DILocation(line: 310, column: 17, scope: !799)
!819 = !DILocation(line: 310, column: 15, scope: !799)
!820 = !DILocation(line: 311, column: 49, scope: !799)
!821 = !DILocation(line: 311, column: 42, scope: !799)
!822 = !DILocation(line: 310, column: 3, scope: !799)
!823 = !DILocation(line: 312, column: 11, scope: !799)
!824 = !DILocation(line: 312, column: 24, scope: !799)
!825 = !DILocation(line: 312, column: 17, scope: !799)
!826 = !DILocation(line: 312, column: 15, scope: !799)
!827 = !DILocation(line: 312, column: 36, scope: !799)
!828 = !DILocation(line: 312, column: 3, scope: !799)
!829 = !DILocation(line: 313, column: 10, scope: !799)
!830 = !DILocation(line: 313, column: 14, scope: !799)
!831 = !DILocation(line: 313, column: 26, scope: !799)
!832 = !DILocation(line: 313, column: 19, scope: !799)
!833 = !DILocation(line: 313, column: 3, scope: !799)
!834 = !DILocation(line: 314, column: 1, scope: !799)
!835 = distinct !DISubprogram(name: "serve_static", scope: !3, file: !3, line: 316, type: !836, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !81)
!836 = !DISubroutineType(types: !837)
!837 = !{null, !48, !48, !650, !106}
!838 = !DILocalVariable(name: "out_fd", arg: 1, scope: !835, file: !3, line: 316, type: !48)
!839 = !DILocation(line: 316, column: 23, scope: !835)
!840 = !DILocalVariable(name: "in_fd", arg: 2, scope: !835, file: !3, line: 316, type: !48)
!841 = !DILocation(line: 316, column: 35, scope: !835)
!842 = !DILocalVariable(name: "req", arg: 3, scope: !835, file: !3, line: 316, type: !650)
!843 = !DILocation(line: 316, column: 56, scope: !835)
!844 = !DILocalVariable(name: "total_size", arg: 4, scope: !835, file: !3, line: 317, type: !106)
!845 = !DILocation(line: 317, column: 26, scope: !835)
!846 = !DILocalVariable(name: "buf", scope: !835, file: !3, line: 318, type: !443)
!847 = !DILocation(line: 318, column: 8, scope: !835)
!848 = !DILocation(line: 319, column: 7, scope: !849)
!849 = distinct !DILexicalBlock(scope: !835, file: !3, line: 319, column: 7)
!850 = !DILocation(line: 319, column: 12, scope: !849)
!851 = !DILocation(line: 319, column: 19, scope: !849)
!852 = !DILocation(line: 319, column: 7, scope: !835)
!853 = !DILocation(line: 320, column: 13, scope: !854)
!854 = distinct !DILexicalBlock(scope: !849, file: !3, line: 319, column: 23)
!855 = !DILocation(line: 320, column: 5, scope: !854)
!856 = !DILocation(line: 321, column: 13, scope: !854)
!857 = !DILocation(line: 321, column: 26, scope: !854)
!858 = !DILocation(line: 321, column: 19, scope: !854)
!859 = !DILocation(line: 321, column: 17, scope: !854)
!860 = !DILocation(line: 322, column: 13, scope: !854)
!861 = !DILocation(line: 322, column: 18, scope: !854)
!862 = !DILocation(line: 322, column: 26, scope: !854)
!863 = !DILocation(line: 322, column: 31, scope: !854)
!864 = !DILocation(line: 322, column: 36, scope: !854)
!865 = !DILocation(line: 321, column: 5, scope: !854)
!866 = !DILocation(line: 323, column: 3, scope: !854)
!867 = !DILocation(line: 324, column: 13, scope: !868)
!868 = distinct !DILexicalBlock(scope: !849, file: !3, line: 323, column: 10)
!869 = !DILocation(line: 324, column: 5, scope: !868)
!870 = !DILocation(line: 326, column: 11, scope: !835)
!871 = !DILocation(line: 326, column: 24, scope: !835)
!872 = !DILocation(line: 326, column: 17, scope: !835)
!873 = !DILocation(line: 326, column: 15, scope: !835)
!874 = !DILocation(line: 326, column: 3, scope: !835)
!875 = !DILocation(line: 329, column: 11, scope: !835)
!876 = !DILocation(line: 329, column: 24, scope: !835)
!877 = !DILocation(line: 329, column: 17, scope: !835)
!878 = !DILocation(line: 329, column: 15, scope: !835)
!879 = !DILocation(line: 330, column: 11, scope: !835)
!880 = !DILocation(line: 330, column: 16, scope: !835)
!881 = !DILocation(line: 330, column: 22, scope: !835)
!882 = !DILocation(line: 330, column: 27, scope: !835)
!883 = !DILocation(line: 330, column: 20, scope: !835)
!884 = !DILocation(line: 329, column: 3, scope: !835)
!885 = !DILocation(line: 331, column: 11, scope: !835)
!886 = !DILocation(line: 331, column: 24, scope: !835)
!887 = !DILocation(line: 331, column: 17, scope: !835)
!888 = !DILocation(line: 331, column: 15, scope: !835)
!889 = !DILocation(line: 332, column: 25, scope: !835)
!890 = !DILocation(line: 332, column: 30, scope: !835)
!891 = !DILocation(line: 332, column: 11, scope: !835)
!892 = !DILocation(line: 331, column: 3, scope: !835)
!893 = !DILocation(line: 334, column: 10, scope: !835)
!894 = !DILocation(line: 334, column: 18, scope: !835)
!895 = !DILocation(line: 334, column: 30, scope: !835)
!896 = !DILocation(line: 334, column: 23, scope: !835)
!897 = !DILocation(line: 334, column: 3, scope: !835)
!898 = !DILocalVariable(name: "offset", scope: !835, file: !3, line: 335, type: !349)
!899 = !DILocation(line: 335, column: 9, scope: !835)
!900 = !DILocation(line: 335, column: 18, scope: !835)
!901 = !DILocation(line: 335, column: 23, scope: !835)
!902 = !DILocation(line: 336, column: 3, scope: !835)
!903 = !DILocation(line: 336, column: 9, scope: !835)
!904 = !DILocation(line: 336, column: 18, scope: !835)
!905 = !DILocation(line: 336, column: 23, scope: !835)
!906 = !DILocation(line: 336, column: 16, scope: !835)
!907 = !DILocation(line: 337, column: 17, scope: !908)
!908 = distinct !DILexicalBlock(scope: !909, file: !3, line: 337, column: 8)
!909 = distinct !DILexicalBlock(scope: !835, file: !3, line: 336, column: 27)
!910 = !DILocation(line: 337, column: 25, scope: !908)
!911 = !DILocation(line: 337, column: 41, scope: !908)
!912 = !DILocation(line: 337, column: 46, scope: !908)
!913 = !DILocation(line: 337, column: 52, scope: !908)
!914 = !DILocation(line: 337, column: 57, scope: !908)
!915 = !DILocation(line: 337, column: 50, scope: !908)
!916 = !DILocation(line: 337, column: 8, scope: !908)
!917 = !DILocation(line: 337, column: 65, scope: !908)
!918 = !DILocation(line: 337, column: 8, scope: !909)
!919 = !DILocation(line: 338, column: 7, scope: !920)
!920 = distinct !DILexicalBlock(scope: !908, file: !3, line: 337, column: 71)
!921 = !DILocation(line: 340, column: 31, scope: !909)
!922 = !DILocation(line: 340, column: 5, scope: !909)
!923 = !DILocation(line: 341, column: 11, scope: !909)
!924 = !DILocation(line: 341, column: 5, scope: !909)
!925 = !DILocation(line: 342, column: 5, scope: !909)
!926 = !DILocation(line: 344, column: 1, scope: !835)
!927 = distinct !DISubprogram(name: "get_mime_type", scope: !3, file: !3, line: 201, type: !928, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !81)
!928 = !DISubroutineType(types: !929)
!929 = !{!58, !52}
!930 = !DILocalVariable(name: "filename", arg: 1, scope: !927, file: !3, line: 201, type: !52)
!931 = !DILocation(line: 201, column: 40, scope: !927)
!932 = !DILocalVariable(name: "dot", scope: !927, file: !3, line: 202, type: !52)
!933 = !DILocation(line: 202, column: 9, scope: !927)
!934 = !DILocation(line: 202, column: 23, scope: !927)
!935 = !DILocation(line: 202, column: 15, scope: !927)
!936 = !DILocation(line: 203, column: 6, scope: !937)
!937 = distinct !DILexicalBlock(scope: !927, file: !3, line: 203, column: 6)
!938 = !DILocation(line: 203, column: 6, scope: !927)
!939 = !DILocalVariable(name: "map", scope: !940, file: !3, line: 204, type: !941)
!940 = distinct !DILexicalBlock(scope: !937, file: !3, line: 203, column: 10)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 64)
!942 = !DILocation(line: 204, column: 15, scope: !940)
!943 = !DILocation(line: 205, column: 5, scope: !940)
!944 = !DILocation(line: 205, column: 11, scope: !940)
!945 = !DILocation(line: 205, column: 16, scope: !940)
!946 = !DILocation(line: 206, column: 17, scope: !947)
!947 = distinct !DILexicalBlock(scope: !948, file: !3, line: 206, column: 10)
!948 = distinct !DILexicalBlock(scope: !940, file: !3, line: 205, column: 26)
!949 = !DILocation(line: 206, column: 22, scope: !947)
!950 = !DILocation(line: 206, column: 33, scope: !947)
!951 = !DILocation(line: 206, column: 10, scope: !947)
!952 = !DILocation(line: 206, column: 38, scope: !947)
!953 = !DILocation(line: 206, column: 10, scope: !948)
!954 = !DILocation(line: 207, column: 16, scope: !955)
!955 = distinct !DILexicalBlock(scope: !947, file: !3, line: 206, column: 43)
!956 = !DILocation(line: 207, column: 21, scope: !955)
!957 = !DILocation(line: 207, column: 9, scope: !955)
!958 = !DILocation(line: 209, column: 10, scope: !948)
!959 = distinct !{!959, !943, !960}
!960 = !DILocation(line: 210, column: 5, scope: !940)
!961 = !DILocation(line: 211, column: 3, scope: !940)
!962 = !DILocation(line: 212, column: 10, scope: !927)
!963 = !DILocation(line: 212, column: 3, scope: !927)
!964 = !DILocation(line: 213, column: 1, scope: !927)
!965 = distinct !DISubprogram(name: "process", scope: !3, file: !3, line: 346, type: !966, scopeLine: 346, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !81)
!966 = !DISubroutineType(types: !967)
!967 = !{null, !48, !781}
!968 = !DILocalVariable(name: "fd", arg: 1, scope: !965, file: !3, line: 346, type: !48)
!969 = !DILocation(line: 346, column: 18, scope: !965)
!970 = !DILocalVariable(name: "clientaddr", arg: 2, scope: !965, file: !3, line: 346, type: !781)
!971 = !DILocation(line: 346, column: 42, scope: !965)
!972 = !DILocation(line: 347, column: 51, scope: !965)
!973 = !DILocation(line: 347, column: 55, scope: !965)
!974 = !DILocation(line: 347, column: 3, scope: !965)
!975 = !DILocalVariable(name: "req", scope: !965, file: !3, line: 348, type: !651)
!976 = !DILocation(line: 348, column: 16, scope: !965)
!977 = !DILocation(line: 349, column: 17, scope: !965)
!978 = !DILocation(line: 349, column: 3, scope: !965)
!979 = !DILocalVariable(name: "sbuf", scope: !965, file: !3, line: 351, type: !299)
!980 = !DILocation(line: 351, column: 15, scope: !965)
!981 = !DILocalVariable(name: "status", scope: !965, file: !3, line: 352, type: !48)
!982 = !DILocation(line: 352, column: 7, scope: !965)
!983 = !DILocalVariable(name: "ffd", scope: !965, file: !3, line: 352, type: !48)
!984 = !DILocation(line: 352, column: 21, scope: !965)
!985 = !DILocation(line: 352, column: 36, scope: !965)
!986 = !DILocation(line: 352, column: 32, scope: !965)
!987 = !DILocation(line: 352, column: 27, scope: !965)
!988 = !DILocation(line: 353, column: 6, scope: !989)
!989 = distinct !DILexicalBlock(scope: !965, file: !3, line: 353, column: 6)
!990 = !DILocation(line: 353, column: 10, scope: !989)
!991 = !DILocation(line: 353, column: 6, scope: !965)
!992 = !DILocation(line: 354, column: 12, scope: !993)
!993 = distinct !DILexicalBlock(scope: !989, file: !3, line: 353, column: 15)
!994 = !DILocalVariable(name: "msg", scope: !993, file: !3, line: 355, type: !52)
!995 = !DILocation(line: 355, column: 11, scope: !993)
!996 = !DILocation(line: 356, column: 18, scope: !993)
!997 = !DILocation(line: 356, column: 22, scope: !993)
!998 = !DILocation(line: 356, column: 43, scope: !993)
!999 = !DILocation(line: 356, column: 5, scope: !993)
!1000 = !DILocation(line: 357, column: 3, scope: !993)
!1001 = !DILocation(line: 358, column: 11, scope: !1002)
!1002 = distinct !DILexicalBlock(scope: !989, file: !3, line: 357, column: 10)
!1003 = !DILocation(line: 358, column: 5, scope: !1002)
!1004 = !DILocation(line: 359, column: 8, scope: !1005)
!1005 = distinct !DILexicalBlock(scope: !1002, file: !3, line: 359, column: 8)
!1006 = !DILocation(line: 359, column: 8, scope: !1002)
!1007 = !DILocation(line: 360, column: 15, scope: !1008)
!1008 = distinct !DILexicalBlock(scope: !1009, file: !3, line: 360, column: 11)
!1009 = distinct !DILexicalBlock(scope: !1005, file: !3, line: 359, column: 30)
!1010 = !DILocation(line: 360, column: 19, scope: !1008)
!1011 = !DILocation(line: 360, column: 11, scope: !1009)
!1012 = !DILocation(line: 361, column: 24, scope: !1013)
!1013 = distinct !DILexicalBlock(scope: !1008, file: !3, line: 360, column: 24)
!1014 = !DILocation(line: 361, column: 13, scope: !1013)
!1015 = !DILocation(line: 361, column: 17, scope: !1013)
!1016 = !DILocation(line: 362, column: 7, scope: !1013)
!1017 = !DILocation(line: 363, column: 15, scope: !1018)
!1018 = distinct !DILexicalBlock(scope: !1009, file: !3, line: 363, column: 11)
!1019 = !DILocation(line: 363, column: 22, scope: !1018)
!1020 = !DILocation(line: 363, column: 11, scope: !1009)
!1021 = !DILocation(line: 364, column: 16, scope: !1022)
!1022 = distinct !DILexicalBlock(scope: !1018, file: !3, line: 363, column: 26)
!1023 = !DILocation(line: 365, column: 7, scope: !1022)
!1024 = !DILocation(line: 366, column: 20, scope: !1009)
!1025 = !DILocation(line: 366, column: 24, scope: !1009)
!1026 = !DILocation(line: 366, column: 40, scope: !1009)
!1027 = !DILocation(line: 366, column: 7, scope: !1009)
!1028 = !DILocation(line: 367, column: 5, scope: !1009)
!1029 = !DILocation(line: 367, column: 15, scope: !1030)
!1030 = distinct !DILexicalBlock(scope: !1005, file: !3, line: 367, column: 15)
!1031 = !DILocation(line: 367, column: 15, scope: !1005)
!1032 = !DILocation(line: 368, column: 14, scope: !1033)
!1033 = distinct !DILexicalBlock(scope: !1030, file: !3, line: 367, column: 37)
!1034 = !DILocation(line: 369, column: 32, scope: !1033)
!1035 = !DILocation(line: 369, column: 36, scope: !1033)
!1036 = !DILocation(line: 369, column: 45, scope: !1033)
!1037 = !DILocation(line: 369, column: 41, scope: !1033)
!1038 = !DILocation(line: 369, column: 7, scope: !1033)
!1039 = !DILocation(line: 370, column: 5, scope: !1033)
!1040 = !DILocation(line: 371, column: 14, scope: !1041)
!1041 = distinct !DILexicalBlock(scope: !1030, file: !3, line: 370, column: 12)
!1042 = !DILocalVariable(name: "msg", scope: !1041, file: !3, line: 372, type: !52)
!1043 = !DILocation(line: 372, column: 13, scope: !1041)
!1044 = !DILocation(line: 373, column: 20, scope: !1041)
!1045 = !DILocation(line: 373, column: 24, scope: !1041)
!1046 = !DILocation(line: 373, column: 41, scope: !1041)
!1047 = !DILocation(line: 373, column: 7, scope: !1041)
!1048 = !DILocation(line: 375, column: 11, scope: !1002)
!1049 = !DILocation(line: 375, column: 5, scope: !1002)
!1050 = !DILocation(line: 377, column: 14, scope: !965)
!1051 = !DILocation(line: 377, column: 22, scope: !965)
!1052 = !DILocation(line: 377, column: 3, scope: !965)
!1053 = !DILocation(line: 378, column: 1, scope: !965)
!1054 = distinct !DISubprogram(name: "main", scope: !3, file: !3, line: 380, type: !1055, scopeLine: 380, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !81)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!48, !48, !1057}
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64)
!1058 = !DILocalVariable(name: "argc", arg: 1, scope: !1054, file: !3, line: 380, type: !48)
!1059 = !DILocation(line: 380, column: 14, scope: !1054)
!1060 = !DILocalVariable(name: "argv", arg: 2, scope: !1054, file: !3, line: 380, type: !1057)
!1061 = !DILocation(line: 380, column: 27, scope: !1054)
!1062 = !DILocalVariable(name: "clientaddr", scope: !1054, file: !3, line: 381, type: !536)
!1063 = !DILocation(line: 381, column: 22, scope: !1054)
!1064 = !DILocalVariable(name: "default_port", scope: !1054, file: !3, line: 382, type: !48)
!1065 = !DILocation(line: 382, column: 7, scope: !1054)
!1066 = !DILocalVariable(name: "listenfd", scope: !1054, file: !3, line: 383, type: !48)
!1067 = !DILocation(line: 383, column: 7, scope: !1054)
!1068 = !DILocalVariable(name: "connfd", scope: !1054, file: !3, line: 384, type: !48)
!1069 = !DILocation(line: 384, column: 7, scope: !1054)
!1070 = !DILocalVariable(name: "buf", scope: !1054, file: !3, line: 385, type: !443)
!1071 = !DILocation(line: 385, column: 8, scope: !1054)
!1072 = !DILocalVariable(name: "path", scope: !1054, file: !3, line: 386, type: !52)
!1073 = !DILocation(line: 386, column: 9, scope: !1054)
!1074 = !DILocation(line: 386, column: 23, scope: !1054)
!1075 = !DILocation(line: 386, column: 16, scope: !1054)
!1076 = !DILocalVariable(name: "clientlen", scope: !1054, file: !3, line: 387, type: !1077)
!1077 = !DIDerivedType(tag: DW_TAG_typedef, name: "socklen_t", file: !33, line: 33, baseType: !1078)
!1078 = !DIDerivedType(tag: DW_TAG_typedef, name: "__socklen_t", file: !28, line: 209, baseType: !7)
!1079 = !DILocation(line: 387, column: 13, scope: !1054)
!1080 = !DILocation(line: 388, column: 6, scope: !1081)
!1081 = distinct !DILexicalBlock(scope: !1054, file: !3, line: 388, column: 6)
!1082 = !DILocation(line: 388, column: 11, scope: !1081)
!1083 = !DILocation(line: 388, column: 6, scope: !1054)
!1084 = !DILocation(line: 389, column: 8, scope: !1085)
!1085 = distinct !DILexicalBlock(scope: !1086, file: !3, line: 389, column: 8)
!1086 = distinct !DILexicalBlock(scope: !1081, file: !3, line: 388, column: 17)
!1087 = !DILocation(line: 389, column: 19, scope: !1085)
!1088 = !DILocation(line: 389, column: 26, scope: !1085)
!1089 = !DILocation(line: 389, column: 29, scope: !1085)
!1090 = !DILocation(line: 389, column: 40, scope: !1085)
!1091 = !DILocation(line: 389, column: 8, scope: !1086)
!1092 = !DILocation(line: 390, column: 27, scope: !1093)
!1093 = distinct !DILexicalBlock(scope: !1085, file: !3, line: 389, column: 48)
!1094 = !DILocation(line: 390, column: 22, scope: !1093)
!1095 = !DILocation(line: 390, column: 20, scope: !1093)
!1096 = !DILocation(line: 391, column: 5, scope: !1093)
!1097 = !DILocation(line: 392, column: 14, scope: !1098)
!1098 = distinct !DILexicalBlock(scope: !1085, file: !3, line: 391, column: 12)
!1099 = !DILocation(line: 392, column: 12, scope: !1098)
!1100 = !DILocation(line: 393, column: 16, scope: !1101)
!1101 = distinct !DILexicalBlock(scope: !1098, file: !3, line: 393, column: 10)
!1102 = !DILocation(line: 393, column: 10, scope: !1101)
!1103 = !DILocation(line: 393, column: 25, scope: !1101)
!1104 = !DILocation(line: 393, column: 10, scope: !1098)
!1105 = !DILocation(line: 394, column: 16, scope: !1106)
!1106 = distinct !DILexicalBlock(scope: !1101, file: !3, line: 393, column: 31)
!1107 = !DILocation(line: 394, column: 9, scope: !1106)
!1108 = !DILocation(line: 395, column: 9, scope: !1106)
!1109 = !DILocation(line: 398, column: 3, scope: !1086)
!1110 = !DILocation(line: 398, column: 14, scope: !1111)
!1111 = distinct !DILexicalBlock(scope: !1081, file: !3, line: 398, column: 14)
!1112 = !DILocation(line: 398, column: 19, scope: !1111)
!1113 = !DILocation(line: 398, column: 14, scope: !1081)
!1114 = !DILocation(line: 399, column: 25, scope: !1115)
!1115 = distinct !DILexicalBlock(scope: !1111, file: !3, line: 398, column: 25)
!1116 = !DILocation(line: 399, column: 20, scope: !1115)
!1117 = !DILocation(line: 399, column: 18, scope: !1115)
!1118 = !DILocation(line: 400, column: 12, scope: !1115)
!1119 = !DILocation(line: 400, column: 10, scope: !1115)
!1120 = !DILocation(line: 401, column: 14, scope: !1121)
!1121 = distinct !DILexicalBlock(scope: !1115, file: !3, line: 401, column: 8)
!1122 = !DILocation(line: 401, column: 8, scope: !1121)
!1123 = !DILocation(line: 401, column: 23, scope: !1121)
!1124 = !DILocation(line: 401, column: 8, scope: !1115)
!1125 = !DILocation(line: 402, column: 14, scope: !1126)
!1126 = distinct !DILexicalBlock(scope: !1121, file: !3, line: 401, column: 29)
!1127 = !DILocation(line: 402, column: 7, scope: !1126)
!1128 = !DILocation(line: 403, column: 7, scope: !1126)
!1129 = !DILocation(line: 405, column: 3, scope: !1115)
!1130 = !DILocation(line: 407, column: 28, scope: !1054)
!1131 = !DILocation(line: 407, column: 14, scope: !1054)
!1132 = !DILocation(line: 407, column: 12, scope: !1054)
!1133 = !DILocation(line: 408, column: 7, scope: !1134)
!1134 = distinct !DILexicalBlock(scope: !1054, file: !3, line: 408, column: 7)
!1135 = !DILocation(line: 408, column: 16, scope: !1134)
!1136 = !DILocation(line: 408, column: 7, scope: !1054)
!1137 = !DILocation(line: 409, column: 45, scope: !1138)
!1138 = distinct !DILexicalBlock(scope: !1134, file: !3, line: 408, column: 21)
!1139 = !DILocation(line: 409, column: 59, scope: !1138)
!1140 = !DILocation(line: 409, column: 5, scope: !1138)
!1141 = !DILocation(line: 410, column: 3, scope: !1138)
!1142 = !DILocation(line: 411, column: 5, scope: !1143)
!1143 = distinct !DILexicalBlock(scope: !1134, file: !3, line: 410, column: 10)
!1144 = !DILocation(line: 412, column: 10, scope: !1143)
!1145 = !DILocation(line: 412, column: 5, scope: !1143)
!1146 = !DILocation(line: 416, column: 3, scope: !1054)
!1147 = !DILocalVariable(name: "i", scope: !1148, file: !3, line: 418, type: !48)
!1148 = distinct !DILexicalBlock(scope: !1054, file: !3, line: 418, column: 3)
!1149 = !DILocation(line: 418, column: 11, scope: !1148)
!1150 = !DILocation(line: 418, column: 7, scope: !1148)
!1151 = !DILocation(line: 418, column: 18, scope: !1152)
!1152 = distinct !DILexicalBlock(scope: !1148, file: !3, line: 418, column: 3)
!1153 = !DILocation(line: 418, column: 20, scope: !1152)
!1154 = !DILocation(line: 418, column: 3, scope: !1148)
!1155 = !DILocalVariable(name: "pid", scope: !1156, file: !3, line: 419, type: !48)
!1156 = distinct !DILexicalBlock(scope: !1152, file: !3, line: 418, column: 31)
!1157 = !DILocation(line: 419, column: 9, scope: !1156)
!1158 = !DILocation(line: 419, column: 15, scope: !1156)
!1159 = !DILocation(line: 420, column: 9, scope: !1160)
!1160 = distinct !DILexicalBlock(scope: !1156, file: !3, line: 420, column: 9)
!1161 = !DILocation(line: 420, column: 13, scope: !1160)
!1162 = !DILocation(line: 420, column: 9, scope: !1156)
!1163 = !DILocation(line: 421, column: 7, scope: !1164)
!1164 = distinct !DILexicalBlock(scope: !1160, file: !3, line: 420, column: 19)
!1165 = !DILocation(line: 422, column: 25, scope: !1166)
!1166 = distinct !DILexicalBlock(scope: !1164, file: !3, line: 421, column: 15)
!1167 = !DILocation(line: 422, column: 35, scope: !1166)
!1168 = !DILocation(line: 422, column: 18, scope: !1166)
!1169 = !DILocation(line: 422, column: 16, scope: !1166)
!1170 = !DILocation(line: 423, column: 17, scope: !1166)
!1171 = !DILocation(line: 423, column: 9, scope: !1166)
!1172 = !DILocation(line: 424, column: 15, scope: !1166)
!1173 = !DILocation(line: 424, column: 9, scope: !1166)
!1174 = distinct !{!1174, !1163, !1175}
!1175 = !DILocation(line: 425, column: 7, scope: !1164)
!1176 = !DILocation(line: 426, column: 16, scope: !1177)
!1177 = distinct !DILexicalBlock(scope: !1160, file: !3, line: 426, column: 16)
!1178 = !DILocation(line: 426, column: 20, scope: !1177)
!1179 = !DILocation(line: 426, column: 16, scope: !1160)
!1180 = !DILocation(line: 427, column: 35, scope: !1181)
!1181 = distinct !DILexicalBlock(scope: !1177, file: !3, line: 426, column: 25)
!1182 = !DILocation(line: 427, column: 7, scope: !1181)
!1183 = !DILocation(line: 428, column: 5, scope: !1181)
!1184 = !DILocation(line: 429, column: 7, scope: !1185)
!1185 = distinct !DILexicalBlock(scope: !1177, file: !3, line: 428, column: 12)
!1186 = !DILocation(line: 431, column: 3, scope: !1156)
!1187 = !DILocation(line: 418, column: 27, scope: !1152)
!1188 = !DILocation(line: 418, column: 3, scope: !1152)
!1189 = distinct !{!1189, !1154, !1190}
!1190 = !DILocation(line: 431, column: 3, scope: !1148)
!1191 = !DILocation(line: 433, column: 3, scope: !1054)
!1192 = !DILocation(line: 434, column: 21, scope: !1193)
!1193 = distinct !DILexicalBlock(scope: !1054, file: !3, line: 433, column: 11)
!1194 = !DILocation(line: 434, column: 31, scope: !1193)
!1195 = !DILocation(line: 434, column: 14, scope: !1193)
!1196 = !DILocation(line: 434, column: 12, scope: !1193)
!1197 = !DILocation(line: 435, column: 13, scope: !1193)
!1198 = !DILocation(line: 435, column: 5, scope: !1193)
!1199 = !DILocation(line: 436, column: 11, scope: !1193)
!1200 = !DILocation(line: 436, column: 5, scope: !1193)
!1201 = distinct !{!1201, !1191, !1202}
!1202 = !DILocation(line: 437, column: 3, scope: !1054)
!1203 = !DILocation(line: 440, column: 1, scope: !1054)
